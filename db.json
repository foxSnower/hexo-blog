{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/images/4141b7a07c4c504793621f51800b587d.jpg","path":"images/4141b7a07c4c504793621f51800b587d.jpg","modified":1,"renderable":0},{"_id":"source/images/header.jpg","path":"images/header.jpg","modified":1,"renderable":0},{"_id":"source/images/header.png","path":"images/header.png","modified":1,"renderable":0},{"_id":"source/images/logo.png","path":"images/logo.png","modified":1,"renderable":0},{"_id":"source/images/logo2.png","path":"images/logo2.png","modified":1,"renderable":0},{"_id":"source/images/logo.psd","path":"images/logo.psd","modified":1,"renderable":0},{"_id":"source/images/logo3.png","path":"images/logo3.png","modified":1,"renderable":0},{"_id":"source/images/person.jpg","path":"images/person.jpg","modified":1,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":0},{"_id":"source/images/css-background-setting/1.png","path":"images/css-background-setting/1.png","modified":1,"renderable":0},{"_id":"source/images/css-background-setting/2.png","path":"images/css-background-setting/2.png","modified":1,"renderable":0},{"_id":"source/images/css-background-setting/3.png","path":"images/css-background-setting/3.png","modified":1,"renderable":0},{"_id":"source/images/github/git3.jpg","path":"images/github/git3.jpg","modified":1,"renderable":0},{"_id":"source/images/github/git4.jpg","path":"images/github/git4.jpg","modified":1,"renderable":0},{"_id":"source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":0},{"_id":"source/images/mouse-images/1.jpg","path":"images/mouse-images/1.jpg","modified":1,"renderable":0},{"_id":"source/images/mouse-images/2.jpg","path":"images/mouse-images/2.jpg","modified":1,"renderable":0},{"_id":"source/images/mouse-images/3.jpg","path":"images/mouse-images/3.jpg","modified":1,"renderable":0},{"_id":"source/images/mouse-images/4.jpg","path":"images/mouse-images/4.jpg","modified":1,"renderable":0},{"_id":"source/images/mouse-images/5.jpg","path":"images/mouse-images/5.jpg","modified":1,"renderable":0},{"_id":"source/images/mouse-images/6.jpg","path":"images/mouse-images/6.jpg","modified":1,"renderable":0},{"_id":"source/images/mouse-images/7.jpg","path":"images/mouse-images/7.jpg","modified":1,"renderable":0},{"_id":"source/images/mouse-images/8.jpg","path":"images/mouse-images/8.jpg","modified":1,"renderable":0},{"_id":"source/images/vue-node-mongodb/vue.png","path":"images/vue-node-mongodb/vue.png","modified":1,"renderable":0},{"_id":"source/images/webpack/picture1.png","path":"images/webpack/picture1.png","modified":1,"renderable":0},{"_id":"source/images/webpack/picture3.png","path":"images/webpack/picture3.png","modified":1,"renderable":0},{"_id":"source/images/webpack/picture2.png","path":"images/webpack/picture2.png","modified":1,"renderable":0},{"_id":"source/images/webpack/picture4.png","path":"images/webpack/picture4.png","modified":1,"renderable":0},{"_id":"source/images/webpack/picture5.png","path":"images/webpack/picture5.png","modified":1,"renderable":0},{"_id":"source/images/webpack/picture6.png","path":"images/webpack/picture6.png","modified":1,"renderable":0},{"_id":"source/images/webpack/picture7.png","path":"images/webpack/picture7.png","modified":1,"renderable":0},{"_id":"source/images/webpack/picture9.png","path":"images/webpack/picture9.png","modified":1,"renderable":0},{"_id":"themes/coney/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/coney/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":1,"renderable":1},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":1,"renderable":1},{"_id":"themes/coney/source/img/bg.jpg","path":"img/bg.jpg","modified":1,"renderable":1},{"_id":"themes/coney/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/coney/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/coney/source/img/booktags.png","path":"img/booktags.png","modified":1,"renderable":1},{"_id":"themes/coney/source/img/coney.png","path":"img/coney.png","modified":1,"renderable":1},{"_id":"themes/coney/source/img/dots-2x.png","path":"img/dots-2x.png","modified":1,"renderable":1},{"_id":"themes/coney/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/coney/source/img/logo.svg","path":"img/logo.svg","modified":1,"renderable":1},{"_id":"themes/coney/source/img/weixin.jpg","path":"img/weixin.jpg","modified":1,"renderable":1},{"_id":"themes/coney/source/img/zhifu.jpg","path":"img/zhifu.jpg","modified":1,"renderable":1},{"_id":"source/images/github/git1.jpg","path":"images/github/git1.jpg","modified":1,"renderable":0},{"_id":"source/images/github/git2.jpg","path":"images/github/git2.jpg","modified":1,"renderable":0},{"_id":"source/images/mouse-images/9.jpg","path":"images/mouse-images/9.jpg","modified":1,"renderable":0},{"_id":"source/images/webpack/picture8.png","path":"images/webpack/picture8.png","modified":1,"renderable":0},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":1,"renderable":1},{"_id":"themes/coney/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/coney/source/js/jquery-2.1.0.min.js","path":"js/jquery-2.1.0.min.js","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/coney/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"source/images/miss-feeling/5.gif","path":"images/miss-feeling/5.gif","modified":1,"renderable":0},{"_id":"source/images/miss-feeling/9.gif","path":"images/miss-feeling/9.gif","modified":1,"renderable":0},{"_id":"source/images/cat-images/pp.jpg","path":"images/cat-images/pp.jpg","modified":1,"renderable":0},{"_id":"source/images/cat-images/yj.jpg","path":"images/cat-images/yj.jpg","modified":1,"renderable":0},{"_id":"source/images/miss-feeling/1.gif","path":"images/miss-feeling/1.gif","modified":1,"renderable":0},{"_id":"source/images/miss-feeling/3.gif","path":"images/miss-feeling/3.gif","modified":1,"renderable":0},{"_id":"source/images/miss-feeling/8.gif","path":"images/miss-feeling/8.gif","modified":1,"renderable":0},{"_id":"source/images/cat-images/hs1.jpg","path":"images/cat-images/hs1.jpg","modified":1,"renderable":0},{"_id":"source/images/cat-images/hs2.jpg","path":"images/cat-images/hs2.jpg","modified":1,"renderable":0},{"_id":"source/images/cat-images/yj2.jpg","path":"images/cat-images/yj2.jpg","modified":1,"renderable":0},{"_id":"source/images/miss-feeling/4.gif","path":"images/miss-feeling/4.gif","modified":1,"renderable":0},{"_id":"source/images/cat-images/hd.jpg","path":"images/cat-images/hd.jpg","modified":1,"renderable":0},{"_id":"source/images/miss-feeling/7.gif","path":"images/miss-feeling/7.gif","modified":1,"renderable":0},{"_id":"source/images/miss-feeling/6.gif","path":"images/miss-feeling/6.gif","modified":1,"renderable":0},{"_id":"source/images/miss-feeling/2.gif","path":"images/miss-feeling/2.gif","modified":1,"renderable":0}],"Cache":[{"_id":"source/favicon.ico","hash":"1026d88ff21adda0b387907d93c43f0f8e54482b","modified":1519700669000},{"_id":"themes/coney/.gitignore","hash":"af078ef5b0258e778d9929940cf10f54216bc959","modified":1519700669000},{"_id":"themes/coney/LICENSE","hash":"a12a2dc681f818facc310fa916aa5fd17c781aa6","modified":1519700669000},{"_id":"themes/coney/README.md","hash":"34d4db9e0bb3846ff3db6183a687e6999e57a5b6","modified":1519700669000},{"_id":"themes/coney/_config.yml","hash":"5c265eadc6a38a78452d0896ca65551b23842ee2","modified":1519700669000},{"_id":"themes/coney/package.json","hash":"00357ef6f24eb049074da81809e98f973f528cca","modified":1519700669000},{"_id":"source/_posts/CSS常用背景图片定位方法.md","hash":"5161f14df2f57d459599e36509888b22c86c1bf3","modified":1519700669000},{"_id":"source/_posts/CSS引进外部字体or图标.md","hash":"183c05e04ee421f59a4fcc2b32eb3686d949775a","modified":1519700669000},{"_id":"source/_posts/CSS改变下拉列表select框的默认样式.md","hash":"4597eacebffaf648e19ebd6a3efb773679d3a7c9","modified":1519700669000},{"_id":"source/_posts/HTML移动web标配头部.md","hash":"79bea5b4bca6bfc5a962a08a1bdcd7f59c71148a","modified":1519700669000},{"_id":"source/_posts/HTML自适应网页设计的核心.md","hash":"e4f4532903fbc3f094a625ad10ded2b44b69948c","modified":1519700669000},{"_id":"source/_posts/Hexo运行方法.md","hash":"8b46acad0dd2431019cf9555555d8ee07e63235f","modified":1519700669000},{"_id":"source/_posts/JavaScript参考手册.md","hash":"e7321ad8fc3aba9979ec4d2c61eb942b185771be","modified":1519700669000},{"_id":"source/_posts/Js关闭微信页面回到菜单页面.md","hash":"b5aa7c7d93a8f13539bd4485a08bb62c48c36322","modified":1519700669000},{"_id":"source/_posts/Js地图定位到当前城市.md","hash":"31c21f96032521b727fd8e36fe74faeacc14daa0","modified":1519700669000},{"_id":"source/_posts/Js控制CSS样式表的语法对照.md","hash":"7fb74acbed0c82ecf7bf213790c7ce488df1e316","modified":1519700669000},{"_id":"source/_posts/Js星空极速飞入效果.md","hash":"19df611403cdf3781384e46ed6543f10768f5ce6","modified":1519700669000},{"_id":"source/_posts/Js用一个二维码做下载地址，自动区分是ios还是android.md","hash":"8d6fcdc5622f7c4c504ffd742e7d6ab8c8475552","modified":1519700669000},{"_id":"source/_posts/Js背景图片加载失败时.md","hash":"87cd1dfb654328330d489f358551e0e71405954b","modified":1519700669000},{"_id":"source/_posts/Js长按事件.md","hash":"3d97bf2937962bfdce6ae3995ca01e3c463a515b","modified":1519700669000},{"_id":"source/_posts/Markdown语法简略说明(简体中文版).md","hash":"f43c80f71d6321fb7e71334001e2de3fbd89d6bd","modified":1519700669000},{"_id":"source/_posts/React Native组件的生命周期.md","hash":"059abdc3f9155570132f5dccdf9ca6bf4c085833","modified":1519700669000},{"_id":"source/_posts/Sublime Text3常用插件安装大法.md","hash":"7836e2932f1dd9e4d55d9d7745553427986a879c","modified":1519700669000},{"_id":"source/_posts/Sublime Text创建一个JavaScript控制台.md","hash":"31d3775e5785d55376dc92bc9dceea3033cbf41c","modified":1519700669000},{"_id":"source/_posts/Vue Node MongoDB三合一完整开发项目.md","hash":"11beb7c25224e83709feb7cfe6687f8e7d4d7cb5","modified":1519700669000},{"_id":"source/_posts/Vuejs实现vModel从子组件传出父组件.md","hash":"a5e2727d42124df674022855e007df544f10d0a3","modified":1519700669000},{"_id":"source/_posts/Vuejs实现简单模糊查询.md","hash":"81c4d46c59a43423e813a673f1f0138455a45b91","modified":1519700669000},{"_id":"source/_posts/Z就喜欢你看不惯我又干不掉我的样子.md","hash":"6edbd9f853dc5fda7041c6a3f10cccb04efd6fdf","modified":1519700669000},{"_id":"source/_posts/Webpack入门教程.md","hash":"43cf558fdc75beca06ddaf6153ce1e6e35c42a44","modified":1519700669000},{"_id":"source/_posts/Z想买一件东西又觉得太贵的时候.md","hash":"ae78b187f6f3760d18c37346075668272cf77522","modified":1519700669000},{"_id":"source/_posts/Z有一种错觉叫我能做到.md","hash":"3d72220e062a117fdb08b19f930822ac6aa848fc","modified":1519700669000},{"_id":"source/_posts/css绘图，实现一些特殊形状.md","hash":"352726620f7fedc3e4ed204e5ba196ca5a59f2d3","modified":1519700669000},{"_id":"source/_posts/js获取日期：前天、昨天、今天、明天、后天.md","hash":"ac4bc9cea1aed07633be7a73a87c75afcdb7d47e","modified":1519700669000},{"_id":"source/_posts/node.js6.9.5文档.md","hash":"697c808a7befde16a330543128b593225d6214f0","modified":1519700669000},{"_id":"source/_posts/weex从入门到放弃.md","hash":"62a9b2fa47a5cec9b418f9be31a6a23175747ac6","modified":1519700669000},{"_id":"source/_posts/关于nodejs,npm遇到的那些事.md","hash":"8e7a4a8156ccb13743e72f421211c2559783b4d9","modified":1519700669000},{"_id":"source/_posts/快速把自己的项目上传到github.md","hash":"cac266855b0819a952525b3d40f710d6d0f0b911","modified":1519700669000},{"_id":"source/coder/index.md","hash":"9ef7cb19da0368210ed1817df721eda96ace5cac","modified":1519700669000},{"_id":"source/images/4141b7a07c4c504793621f51800b587d.jpg","hash":"49bf488789ebca217946059bbd03e9e45e3f51c2","modified":1519700669000},{"_id":"source/images/header.jpg","hash":"73ddf0be7dd9bf277525655efa7b0e0b4c25bcd8","modified":1519700669000},{"_id":"source/images/header.png","hash":"b5afb8238aaa6babe14c2bd0e940f95000d23190","modified":1519700669000},{"_id":"source/images/logo.png","hash":"b7c77943d6cd8ce00e0bb893413a2ac2007fa61a","modified":1519700669000},{"_id":"source/images/logo2.png","hash":"8cb99b2b28095d6fefd2d70f9b203da89894cd7b","modified":1519700669000},{"_id":"source/images/logo.psd","hash":"3b95ae5e8914af72154ece31d2a2401453decff3","modified":1519700669000},{"_id":"source/images/logo3.png","hash":"69e0e681fd38460184ecb5f26c387fff0445fbf6","modified":1519700669000},{"_id":"source/images/person.jpg","hash":"b99b00fa1643b353c8a1bc987af0da0c38d7b544","modified":1519700669000},{"_id":"source/note/index.md","hash":"540bd28388a5229062cba984ec4c0e20e9a1f2be","modified":1519700669000},{"_id":"source/personinfo/index.md","hash":"93e3b6be7d7c2821fad6968b9c7be63104a1e88f","modified":1519700669000},{"_id":"source/skill/index.md","hash":"cba29f274d4986dbd1b92b01bb3782e66efb84c1","modified":1519700669000},{"_id":"source/tags/index.md","hash":"2e4b88bc01cffed1b7948822c029af223c232a3c","modified":1519700669000},{"_id":"source/tool/index.md","hash":"3e003d2aff42811474c4e56c0452d98cc688f936","modified":1519700669000},{"_id":"themes/coney/languages/default.yml","hash":"7e9594aa9551cd4841905b4b4d4fcabc2b40e447","modified":1519700669000},{"_id":"themes/coney/languages/zh-CN.yml","hash":"fe007cf5cc201840e99327dafc9fa22e1530f0fd","modified":1519700669000},{"_id":"themes/coney/languages/zh-TW.yml","hash":"48b652fa2eb73f9f7cd512472d0cb20057152aea","modified":1519700669000},{"_id":"themes/coney/layout/archive.ejs","hash":"b4fd8369c1480e4ad283be5947648630e8e7cc01","modified":1519700669000},{"_id":"themes/coney/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1519700669000},{"_id":"themes/coney/layout/index.ejs","hash":"cbca1720a7e4c94233e17b45f0b46ab4fac5b765","modified":1519700669000},{"_id":"themes/coney/layout/layout.ejs","hash":"8370535f4410499e3038c3592a9151f9b845ba80","modified":1519700669000},{"_id":"themes/coney/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1519700669000},{"_id":"themes/coney/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1519700669000},{"_id":"themes/coney/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1519700669000},{"_id":"themes/coney/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1519700669000},{"_id":"source/images/avatar.png","hash":"2d139540b06dd4db3a63e77708b69b64ae625594","modified":1519700669000},{"_id":"source/images/css-background-setting/1.png","hash":"95403e7826ad8e7b3402685ec2d9633bef097b4f","modified":1519700669000},{"_id":"source/images/css-background-setting/2.png","hash":"e6150fc3f9070ad0e25a1164c7220144146775f9","modified":1519700669000},{"_id":"source/images/css-background-setting/3.png","hash":"8582755318126996b8fee433531af4daca62b07e","modified":1519700669000},{"_id":"source/images/github/git3.jpg","hash":"2a49f21143e81fe1738eeded749dd8a6452f95ea","modified":1519700669000},{"_id":"source/images/github/git4.jpg","hash":"c63a987048944ac91f9aea3419775a25231b97a7","modified":1519700669000},{"_id":"source/images/loading.gif","hash":"dbbb625cab09b2338228b80766189928cbd1a176","modified":1519700669000},{"_id":"source/images/mouse-images/1.jpg","hash":"95867f125de58b51f202d3f4759505761ca5b085","modified":1519700669000},{"_id":"source/images/mouse-images/2.jpg","hash":"83623c5a6da1277bce510cd8698cd326e0c681c9","modified":1519700669000},{"_id":"source/images/mouse-images/3.jpg","hash":"6b58e491695e005727c2e18e509d3a2b64f8ac48","modified":1519700669000},{"_id":"source/images/mouse-images/4.jpg","hash":"b2d12302673c96c26caceb7c83813730ff735770","modified":1519700669000},{"_id":"source/images/mouse-images/5.jpg","hash":"5e5fb7956f93283790da6bacf3e479a1d918fdf1","modified":1519700669000},{"_id":"source/images/mouse-images/6.jpg","hash":"fbec4fe6cafe09758c3713925a7ea30b48f3d1bc","modified":1519700669000},{"_id":"source/images/mouse-images/7.jpg","hash":"8a6fe5d92097b0eb15f6ca67236211154636b0f3","modified":1519700669000},{"_id":"source/images/mouse-images/8.jpg","hash":"3ffa7ae2d2a6bcc8b687f51e3658a761c801eac3","modified":1519700669000},{"_id":"source/images/vue-node-mongodb/vue.png","hash":"cf05b4460ac85a86478dc296fd15651d25a10bf4","modified":1519700669000},{"_id":"source/images/webpack/picture1.png","hash":"1a99ad1da64288255cc8e24896f3942098cd7e45","modified":1519700669000},{"_id":"source/images/webpack/picture3.png","hash":"ebfde0bd5269d9ae0b7805250f2a6cd557d7649d","modified":1519700669000},{"_id":"source/images/webpack/picture2.png","hash":"37fc48ca3e1209d20448caf104ad73eb0caf4528","modified":1519700669000},{"_id":"source/images/webpack/picture4.png","hash":"2ad687dd4f3c1462bc629563fa1f3efb47448680","modified":1519700669000},{"_id":"source/images/webpack/picture5.png","hash":"ba301dbefb3ba447c37add7e4e924ed9a30253d4","modified":1519700669000},{"_id":"source/images/webpack/picture6.png","hash":"7f117f9ce65e8cfb100d0c4f12ec6897c9fc7e67","modified":1519700669000},{"_id":"source/images/webpack/picture7.png","hash":"e19549b7dd9c0daffb71528530a62a103b98a34b","modified":1519700669000},{"_id":"source/images/webpack/picture9.png","hash":"426c3660c8a7b71bd4adc2fdba4eae52fe2b0a13","modified":1519700669000},{"_id":"themes/coney/layout/_partial/after_footer.ejs","hash":"05fb5e358bcc285097e0659a47f2721a53ebc76e","modified":1519700669000},{"_id":"themes/coney/layout/_partial/archive.ejs","hash":"aa3e66bb3b0249460ecc96ca9787c7e2f8e736b5","modified":1519700669000},{"_id":"themes/coney/layout/_partial/article.ejs","hash":"64fb413b46ed1d4823e0a0fb6e719e358950fc14","modified":1519700669000},{"_id":"themes/coney/layout/_partial/baidu_analytics.ejs","hash":"752a2966eed9effd5bb495cc19a90f0a751a6bff","modified":1519700669000},{"_id":"themes/coney/layout/_partial/categories.ejs","hash":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1519700669000},{"_id":"themes/coney/layout/_partial/footer.ejs","hash":"e65cfcb8241d740b485ae6e399e98111d475ff99","modified":1519700669000},{"_id":"themes/coney/layout/_partial/google_analytics.ejs","hash":"b6871f67c87c87acb5295ce4fb673b16a7296a01","modified":1519700669000},{"_id":"themes/coney/layout/_partial/head.ejs","hash":"8dbc801a32a66da224e75ea97ce2baa1791ab306","modified":1519700669000},{"_id":"themes/coney/layout/_partial/header.ejs","hash":"3d1c7db81bd99232f10af50bca9e06602d894dae","modified":1519700669000},{"_id":"themes/coney/layout/_partial/pagination.ejs","hash":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1519700669000},{"_id":"themes/coney/layout/_partial/search.ejs","hash":"aed90406246cc43f60dda8cd6558e9eccee342a4","modified":1519700669000},{"_id":"themes/coney/layout/_partial/sidebar.ejs","hash":"63d04e5f605c3be33caa9c79febdb0b614b48c79","modified":1519700669000},{"_id":"themes/coney/layout/_partial/tags.ejs","hash":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1519700669000},{"_id":"themes/coney/layout/_widget/archive.ejs","hash":"07443d9617611d51caba34d3b536ff34c4ecde5e","modified":1519700669000},{"_id":"themes/coney/layout/_widget/category.ejs","hash":"9b4cc6be18aa6c5da4cf45913d5be83fc33081db","modified":1519700669000},{"_id":"themes/coney/layout/_widget/links.ejs","hash":"c526cb59de13386817a878f1c08df83dc33534ab","modified":1519700669000},{"_id":"themes/coney/layout/_widget/recent_comments.ejs","hash":"3a475f29c4fa7dcb1bea0c0b8aa645fad2db168f","modified":1519700669000},{"_id":"themes/coney/layout/_widget/recent_posts.ejs","hash":"95085ee0c58a9d9ee1c1465681211763225aa4e9","modified":1519700669000},{"_id":"themes/coney/layout/_widget/rss.ejs","hash":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1519700669000},{"_id":"themes/coney/layout/_widget/tag.ejs","hash":"cc97db230f727c27519298166ad904358811fb53","modified":1519700669000},{"_id":"themes/coney/layout/_widget/tagcloud.ejs","hash":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1519700669000},{"_id":"themes/coney/source/css/style.styl","hash":"c7578d843d5c295c42b6fd31bb12e314eaee812c","modified":1519700669000},{"_id":"themes/coney/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1519700669000},{"_id":"themes/coney/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1519700669000},{"_id":"themes/coney/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1519700669000},{"_id":"themes/coney/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1519700669000},{"_id":"themes/coney/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1519700669000},{"_id":"themes/coney/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1519700669000},{"_id":"themes/coney/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1519700669000},{"_id":"themes/coney/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1519700669000},{"_id":"themes/coney/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1519700669000},{"_id":"themes/coney/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1519700669000},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1519700669000},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1519700669000},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1519700669000},{"_id":"themes/coney/source/img/bg.jpg","hash":"1ac63554a2f3256b4a0b00adf70f4cbf9b8fe213","modified":1519700669000},{"_id":"themes/coney/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1519700669000},{"_id":"themes/coney/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1519700669000},{"_id":"themes/coney/source/img/booktags.png","hash":"be36d7daa956e34a8eb13307d3806794c59264ea","modified":1519700669000},{"_id":"themes/coney/source/img/coney.png","hash":"ec55414806c53a40e93fef0b2ce562e02e70398c","modified":1519700669000},{"_id":"themes/coney/source/img/dots-2x.png","hash":"2d900f9f8a0b53067401138d8cb411c83e747e8e","modified":1519700669000},{"_id":"themes/coney/source/img/favicon.ico","hash":"b5afb8238aaa6babe14c2bd0e940f95000d23190","modified":1519700669000},{"_id":"themes/coney/source/img/logo.svg","hash":"0eb0ae32d95c6f0b14adb9ab491775dcd1da3af3","modified":1519700669000},{"_id":"themes/coney/source/img/weixin.jpg","hash":"d1db06e73a53930e6477e4bebf3680879ae368c6","modified":1519700669000},{"_id":"themes/coney/source/img/zhifu.jpg","hash":"8eec11e85cb420bc2060dd70ca973793427caac4","modified":1519700669000},{"_id":"source/images/github/git1.jpg","hash":"4af6523b8604d94107ac59f67ac8c3f2d70f5a0d","modified":1519700669000},{"_id":"source/images/github/git2.jpg","hash":"9618f7d70393d6f57183323ed86838a4676b369f","modified":1519700669000},{"_id":"source/images/mouse-images/9.jpg","hash":"2d3b53b409470789b420060be5eaa8bd43027eaf","modified":1519700669000},{"_id":"source/images/webpack/picture8.png","hash":"106ee8b0643d9cefc45728dee51a9379b71b334c","modified":1519700669000},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1519700669000},{"_id":"themes/coney/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1519700669000},{"_id":"themes/coney/source/js/jquery-2.1.0.min.js","hash":"98884258cbdb0d939fa2c5e74fc7ac9e56d8170f","modified":1519700669000},{"_id":"themes/coney/layout/_partial/post/article.ejs","hash":"afe197d3fb911ce331f15a53f2e1929ac535f46f","modified":1519700669000},{"_id":"themes/coney/layout/_partial/post/catetags.ejs","hash":"f6b107078094333b6567d4a97700f559159675e1","modified":1519700669000},{"_id":"themes/coney/layout/_partial/post/comment.ejs","hash":"bfca4ac82bfe5486906c7cebcc90d9232a663ee6","modified":1519700669000},{"_id":"themes/coney/layout/_partial/post/footer.ejs","hash":"1350a19770b8113af2d461ccffabdb94ebfb711d","modified":1519700669000},{"_id":"themes/coney/layout/_partial/post/gallery.ejs","hash":"7ca5b1db9439be61a8b77f6f7d857b56fdf1517f","modified":1519700669000},{"_id":"themes/coney/layout/_partial/post/header.ejs","hash":"49ed038ec936131e7f933846868c40ed6d1ff3a1","modified":1519700669000},{"_id":"themes/coney/layout/_partial/post/jiathis.ejs","hash":"adc047d2bbd031092df86f3be2866ea9c3b5f3c9","modified":1519700669000},{"_id":"themes/coney/layout/_partial/post/pagination.ejs","hash":"ee261700e702d5002e260d7ca591031624c24933","modified":1519700669000},{"_id":"themes/coney/source/css/_base/code.styl","hash":"330209ebaebe69308e131fada85b9b619c85fbd9","modified":1519700669000},{"_id":"themes/coney/source/css/_base/font.styl","hash":"75f264bc742888dbe192e8d19eda70705d13c709","modified":1519700669000},{"_id":"themes/coney/source/css/_base/public.styl","hash":"c8a3d95f1b97a81b19e65391f4b3ddf4a28cdb9c","modified":1519700669000},{"_id":"themes/coney/source/css/_base/variable.styl","hash":"e4c7998447d46f7c180031634bb4d1e74912b220","modified":1519700669000},{"_id":"themes/coney/source/css/_partial/article.styl","hash":"56984b176f827d101680046694f5864d579e5a59","modified":1519700669000},{"_id":"themes/coney/source/css/_partial/aside.styl","hash":"914f9fdc420f22fc1e9b8e752b6cc99d3d491d72","modified":1519700669000},{"_id":"themes/coney/source/css/_partial/body","hash":"fa69096f3705f05690a694c697bd61a457849e42","modified":1519700669000},{"_id":"themes/coney/source/css/_partial/duoshuo.styl","hash":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1519700669000},{"_id":"themes/coney/source/css/_partial/footer.styl","hash":"38ae3f8d33352e6c884ed19cbfa9814863c94145","modified":1519700669000},{"_id":"themes/coney/source/css/_partial/gallery.styl","hash":"a544a58fdb4c8dd8274159323abd1e38cb03215e","modified":1519700669000},{"_id":"themes/coney/source/css/_partial/header.styl","hash":"f2d6d34551acfb1e4b5d488fa59a440aded2d4ca","modified":1519700669000},{"_id":"themes/coney/source/css/_partial/helper.styl","hash":"b1624de021304e36b8f3d6bb19f0196725314194","modified":1519700669000},{"_id":"themes/coney/source/css/_partial/index.styl","hash":"ca08e661a37b3b0797351ab7b0a8eff3badba30e","modified":1519700669000},{"_id":"themes/coney/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1519700669000},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1519700669000},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1519700669000},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1519700669000},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1519700669000},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1519700669000},{"_id":"themes/coney/source/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1519700669000},{"_id":"source/images/miss-feeling/5.gif","hash":"d75f2aa5ada221c6881941b915fe8bb1440000b8","modified":1519700669000},{"_id":"source/images/miss-feeling/9.gif","hash":"c383f0b562b77c21a6f05b424ed37abf74793a52","modified":1519700669000},{"_id":"source/images/cat-images/pp.jpg","hash":"eb2022c772e4915f0386c8d1baadcf29953be654","modified":1519700669000},{"_id":"source/images/cat-images/yj.jpg","hash":"178aa34089e757c7fbe0fa92f9885be7684a9412","modified":1519700669000},{"_id":"source/images/miss-feeling/1.gif","hash":"70475b19c0a904f00515b006e33b12b3699e83e7","modified":1519700669000},{"_id":"source/images/miss-feeling/3.gif","hash":"66312b6c66dd0855c1f0024cb53c5829ad8e3fab","modified":1519700669000},{"_id":"source/images/miss-feeling/8.gif","hash":"31ed988e77e388a6253e5c2abeed9ed03e227960","modified":1519700669000},{"_id":"source/images/cat-images/hs1.jpg","hash":"09a22cb5513704e90ee70d478b28542b2e741b09","modified":1519700669000},{"_id":"source/images/cat-images/hs2.jpg","hash":"3653ef22cf51fd5e56d201340448e7103b982162","modified":1519700669000},{"_id":"source/images/cat-images/yj2.jpg","hash":"4c6ee092341158d6f3262411d266a03252435336","modified":1519700669000},{"_id":"source/images/miss-feeling/4.gif","hash":"3908c537dfc0aec956b75378a8c7a762733b8b74","modified":1519700669000},{"_id":"source/images/cat-images/hd.jpg","hash":"f0b17abe43e44fbd242c72f969de4651db71339d","modified":1519700669000},{"_id":"source/images/miss-feeling/7.gif","hash":"9a0df61fe4d191669397be7829055e53ffce55c2","modified":1519700669000},{"_id":"source/images/miss-feeling/6.gif","hash":"7788ffc2913f6223aa8cc4551a3a08f32d351c8c","modified":1519700669000},{"_id":"source/images/miss-feeling/2.gif","hash":"5b32ae0e4286553641a0e663ecac60b4d9f4eab8","modified":1519700669000}],"Category":[{"name":"skill","_id":"cje52p0vf00046atfzt4w3jbq"},{"name":"note","_id":"cje52p0vq000b6atflwau8xuk"},{"name":"tool","_id":"cje52p0wd000w6atf9c2rd98q"},{"name":"coder","_id":"cje52p0x8001x6atfzjqgv7do"}],"Data":[],"Page":[{"layout":"categories","title":"coder","_content":"","source":"coder/index.md","raw":"layout: categories\ntitle: coder  \n---","date":"2018-02-27T03:04:29.000Z","updated":"2018-02-27T03:04:29.000Z","path":"coder/index.html","comments":1,"_id":"cje52p0v800016atfz5fb7hkf","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"categories","title":"note","_content":"","source":"note/index.md","raw":"layout: categories\ntitle: note \n---\n","date":"2018-02-27T03:04:29.000Z","updated":"2018-02-27T03:04:29.000Z","path":"note/index.html","comments":1,"_id":"cje52p0vd00036atfac0mg0bi","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"post table person","title":"简历","description":"积极向上，天道酬勤，我只想励志做一个不装逼的前端大神","keywords":"个人简历 Web前端 开发工程师","_content":"\n# 个人简历\n积极向上，天道酬勤，我只想励志做一个有能力装逼的前端大神\n\n### 基础资料\n\n* 姓&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;名： 何雪梅 \n* 性&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;别： 女\n* 年&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;龄： 27\n* 教&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;育： 桂林电子科技大学\n* 联系方式：130-7681-6601 &nbsp;&nbsp;&nbsp;  236096957@qq.com\n* 求职意向：Web前端开发工程师\n* 工作经验：4年\n![个人照片](/images/person.jpg)\n\n### 工作经验\n\n* 2015.11--至今 深圳联友科技有限公司 \n\n|职业| 参与项目名称  | 项目详情 | \n|:-:|:-:|:-|\n|Web前端开发工程师|1.事件申报</br>2.雷诺微信</br>3.易&nbsp;&nbsp;租&nbsp;&nbsp;车</br>4.风神物流| 负责微信公众号的前端页面设计及开发、JS、CSS代码优化压缩,H5、CSS3动画效果实现,用户体验优化，用到的框架有FrozenUI、WeUI|\n||5.雷诺微信|雷诺微信后台管理系统，利用前端热门框架Bootstrap开发前端页面，用户体验优化|\n||6.车主APP|原用Framework7前端UI框架开发前端页面，生成混合APP，后改用React-Native开发，生成原生APP|\n||7.智通车商|vue+node快速搭建开发环境，并进行组件式开发,用到的知识有，Vue、Vuex、Vue-Router、Axios|\n\n\n</br>\n\n* 2013.7--2015.11 鹏博医疗集团有限公司\n\n|职业| 职责 | 职责详情|\n|:-:|:-:|:-|\n|网页设计|官网设计及制作|网页制作或相关网络广告设计；熟练运用DIV+CSS进行网页布局，Jquery，Js等前端开发技术制作网页特效；熟悉Photoshop，Dreamweaver，Fireworks等设计软件|\n\n\n\n### 个人优势\n\n#### 个人工作技能展示\n\n*   1.掌握HTML5+CSS3+Js等基本语言\n*   2.熟悉React.js，Vue.js等主流的前端框架\n*   3.了解ES6，Node.js，Webpack前端模块构建工具等\n*   4.了解 Oracle、MongoDB等数据库\n*   5.熟悉HTML5+CSS3+实现语义化布局\n*   6.熟悉响应式布局与自适应布局，了解less&scss，了解CSS3动画\n*   7.掌握主流的前端框架、性能优化技术，熟悉前端工程化\n*   8.掌握各式各样的开发工具，包括webstorm、sublime Text3、atom、HBuilder、Dreamweaver、Photoshop、Fireworks、Axure RP等\n*   9.除了工作上的项目，个人在业余时间多次尝试开发部署自己的项目，目前比较完整的项目是用Vue+Node+MongDB等知识做的一个小商店销售登记项目。目前也拥有自己的[github](https://github.com/foxSnower)、[个人博客](https://foxsnower.github.io/)(欢迎点击阅览)\n\n#### 个人业余技能展示\n\n*   拥有乒乓球技术技能，在校时是院队的女子乒乓球球队队长，曾分别获得女子乒乓球团体第四、第二及第一；在联友担任乒协宣传委员兼会员教练，曾获得东风南方女子乒乓球赛冠军、东风日产团体赛冠军及2016年度优秀教练员称号，么么哒(づ￣ 3￣)づ\n\n### 个人意向\n\n*   希望下一份工作不离开移动端，而且能够在nodeJs、和vueJs上发挥水平\n","source":"personinfo/index.md","raw":"---\nlayout: post table person\ntitle: 简历\ndescription: 积极向上，天道酬勤，我只想励志做一个不装逼的前端大神\nkeywords: 个人简历 Web前端 开发工程师\n---\n\n# 个人简历\n积极向上，天道酬勤，我只想励志做一个有能力装逼的前端大神\n\n### 基础资料\n\n* 姓&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;名： 何雪梅 \n* 性&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;别： 女\n* 年&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;龄： 27\n* 教&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;育： 桂林电子科技大学\n* 联系方式：130-7681-6601 &nbsp;&nbsp;&nbsp;  236096957@qq.com\n* 求职意向：Web前端开发工程师\n* 工作经验：4年\n![个人照片](/images/person.jpg)\n\n### 工作经验\n\n* 2015.11--至今 深圳联友科技有限公司 \n\n|职业| 参与项目名称  | 项目详情 | \n|:-:|:-:|:-|\n|Web前端开发工程师|1.事件申报</br>2.雷诺微信</br>3.易&nbsp;&nbsp;租&nbsp;&nbsp;车</br>4.风神物流| 负责微信公众号的前端页面设计及开发、JS、CSS代码优化压缩,H5、CSS3动画效果实现,用户体验优化，用到的框架有FrozenUI、WeUI|\n||5.雷诺微信|雷诺微信后台管理系统，利用前端热门框架Bootstrap开发前端页面，用户体验优化|\n||6.车主APP|原用Framework7前端UI框架开发前端页面，生成混合APP，后改用React-Native开发，生成原生APP|\n||7.智通车商|vue+node快速搭建开发环境，并进行组件式开发,用到的知识有，Vue、Vuex、Vue-Router、Axios|\n\n\n</br>\n\n* 2013.7--2015.11 鹏博医疗集团有限公司\n\n|职业| 职责 | 职责详情|\n|:-:|:-:|:-|\n|网页设计|官网设计及制作|网页制作或相关网络广告设计；熟练运用DIV+CSS进行网页布局，Jquery，Js等前端开发技术制作网页特效；熟悉Photoshop，Dreamweaver，Fireworks等设计软件|\n\n\n\n### 个人优势\n\n#### 个人工作技能展示\n\n*   1.掌握HTML5+CSS3+Js等基本语言\n*   2.熟悉React.js，Vue.js等主流的前端框架\n*   3.了解ES6，Node.js，Webpack前端模块构建工具等\n*   4.了解 Oracle、MongoDB等数据库\n*   5.熟悉HTML5+CSS3+实现语义化布局\n*   6.熟悉响应式布局与自适应布局，了解less&scss，了解CSS3动画\n*   7.掌握主流的前端框架、性能优化技术，熟悉前端工程化\n*   8.掌握各式各样的开发工具，包括webstorm、sublime Text3、atom、HBuilder、Dreamweaver、Photoshop、Fireworks、Axure RP等\n*   9.除了工作上的项目，个人在业余时间多次尝试开发部署自己的项目，目前比较完整的项目是用Vue+Node+MongDB等知识做的一个小商店销售登记项目。目前也拥有自己的[github](https://github.com/foxSnower)、[个人博客](https://foxsnower.github.io/)(欢迎点击阅览)\n\n#### 个人业余技能展示\n\n*   拥有乒乓球技术技能，在校时是院队的女子乒乓球球队队长，曾分别获得女子乒乓球团体第四、第二及第一；在联友担任乒协宣传委员兼会员教练，曾获得东风南方女子乒乓球赛冠军、东风日产团体赛冠军及2016年度优秀教练员称号，么么哒(づ￣ 3￣)づ\n\n### 个人意向\n\n*   希望下一份工作不离开移动端，而且能够在nodeJs、和vueJs上发挥水平\n","date":"2018-02-27T03:04:29.000Z","updated":"2018-02-27T03:04:29.000Z","path":"personinfo/index.html","comments":1,"_id":"cje52p0vk00076atftkm55nns","content":"<h1 id=\"个人简历\"><a href=\"#个人简历\" class=\"headerlink\" title=\"个人简历\"></a>个人简历</h1><p>积极向上，天道酬勤，我只想励志做一个有能力装逼的前端大神</p>\n<h3 id=\"基础资料\"><a href=\"#基础资料\" class=\"headerlink\" title=\"基础资料\"></a>基础资料</h3><ul>\n<li>姓&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;名： 何雪梅 </li>\n<li>性&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;别： 女</li>\n<li>年&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;龄： 27</li>\n<li>教&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;育： 桂林电子科技大学</li>\n<li>联系方式：130-7681-6601 &nbsp;&nbsp;&nbsp;  <a href=\"mailto:236096957@qq.com\" target=\"_blank\" rel=\"noopener\">236096957@qq.com</a></li>\n<li>求职意向：Web前端开发工程师</li>\n<li>工作经验：4年<br><img src=\"/images/person.jpg\" alt=\"个人照片\"></li>\n</ul>\n<h3 id=\"工作经验\"><a href=\"#工作经验\" class=\"headerlink\" title=\"工作经验\"></a>工作经验</h3><ul>\n<li>2015.11–至今 深圳联友科技有限公司 </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">职业</th>\n<th style=\"text-align:center\">参与项目名称</th>\n<th style=\"text-align:left\">项目详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Web前端开发工程师</td>\n<td style=\"text-align:center\">1.事件申报<br>2.雷诺微信<br>3.易&nbsp;&nbsp;租&nbsp;&nbsp;车<br>4.风神物流</td>\n<td style=\"text-align:left\">负责微信公众号的前端页面设计及开发、JS、CSS代码优化压缩,H5、CSS3动画效果实现,用户体验优化，用到的框架有FrozenUI、WeUI</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">5.雷诺微信</td>\n<td style=\"text-align:left\">雷诺微信后台管理系统，利用前端热门框架Bootstrap开发前端页面，用户体验优化</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">6.车主APP</td>\n<td style=\"text-align:left\">原用Framework7前端UI框架开发前端页面，生成混合APP，后改用React-Native开发，生成原生APP</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">7.智通车商</td>\n<td style=\"text-align:left\">vue+node快速搭建开发环境，并进行组件式开发,用到的知识有，Vue、Vuex、Vue-Router、Axios</td>\n</tr>\n</tbody>\n</table>\n<p><br></p>\n<ul>\n<li>2013.7–2015.11 鹏博医疗集团有限公司</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">职业</th>\n<th style=\"text-align:center\">职责</th>\n<th style=\"text-align:left\">职责详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">网页设计</td>\n<td style=\"text-align:center\">官网设计及制作</td>\n<td style=\"text-align:left\">网页制作或相关网络广告设计；熟练运用DIV+CSS进行网页布局，Jquery，Js等前端开发技术制作网页特效；熟悉Photoshop，Dreamweaver，Fireworks等设计软件</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"个人优势\"><a href=\"#个人优势\" class=\"headerlink\" title=\"个人优势\"></a>个人优势</h3><h4 id=\"个人工作技能展示\"><a href=\"#个人工作技能展示\" class=\"headerlink\" title=\"个人工作技能展示\"></a>个人工作技能展示</h4><ul>\n<li>1.掌握HTML5+CSS3+Js等基本语言</li>\n<li>2.熟悉React.js，Vue.js等主流的前端框架</li>\n<li>3.了解ES6，Node.js，Webpack前端模块构建工具等</li>\n<li>4.了解 Oracle、MongoDB等数据库</li>\n<li>5.熟悉HTML5+CSS3+实现语义化布局</li>\n<li>6.熟悉响应式布局与自适应布局，了解less&amp;scss，了解CSS3动画</li>\n<li>7.掌握主流的前端框架、性能优化技术，熟悉前端工程化</li>\n<li>8.掌握各式各样的开发工具，包括webstorm、sublime Text3、atom、HBuilder、Dreamweaver、Photoshop、Fireworks、Axure RP等</li>\n<li>9.除了工作上的项目，个人在业余时间多次尝试开发部署自己的项目，目前比较完整的项目是用Vue+Node+MongDB等知识做的一个小商店销售登记项目。目前也拥有自己的<a href=\"https://github.com/foxSnower\" target=\"_blank\" rel=\"noopener\">github</a>、<a href=\"https://foxsnower.github.io/\" target=\"_blank\" rel=\"noopener\">个人博客</a>(欢迎点击阅览)</li>\n</ul>\n<h4 id=\"个人业余技能展示\"><a href=\"#个人业余技能展示\" class=\"headerlink\" title=\"个人业余技能展示\"></a>个人业余技能展示</h4><ul>\n<li>拥有乒乓球技术技能，在校时是院队的女子乒乓球球队队长，曾分别获得女子乒乓球团体第四、第二及第一；在联友担任乒协宣传委员兼会员教练，曾获得东风南方女子乒乓球赛冠军、东风日产团体赛冠军及2016年度优秀教练员称号，么么哒(づ￣ 3￣)づ</li>\n</ul>\n<h3 id=\"个人意向\"><a href=\"#个人意向\" class=\"headerlink\" title=\"个人意向\"></a>个人意向</h3><ul>\n<li>希望下一份工作不离开移动端，而且能够在nodeJs、和vueJs上发挥水平</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"个人简历\"><a href=\"#个人简历\" class=\"headerlink\" title=\"个人简历\"></a>个人简历</h1><p>积极向上，天道酬勤，我只想励志做一个有能力装逼的前端大神</p>\n<h3 id=\"基础资料\"><a href=\"#基础资料\" class=\"headerlink\" title=\"基础资料\"></a>基础资料</h3><ul>\n<li>姓&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;名： 何雪梅 </li>\n<li>性&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;别： 女</li>\n<li>年&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;龄： 27</li>\n<li>教&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;育： 桂林电子科技大学</li>\n<li>联系方式：130-7681-6601 &nbsp;&nbsp;&nbsp;  <a href=\"mailto:236096957@qq.com\" target=\"_blank\" rel=\"noopener\">236096957@qq.com</a></li>\n<li>求职意向：Web前端开发工程师</li>\n<li>工作经验：4年<br><img src=\"/images/person.jpg\" alt=\"个人照片\"></li>\n</ul>\n<h3 id=\"工作经验\"><a href=\"#工作经验\" class=\"headerlink\" title=\"工作经验\"></a>工作经验</h3><ul>\n<li>2015.11–至今 深圳联友科技有限公司 </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">职业</th>\n<th style=\"text-align:center\">参与项目名称</th>\n<th style=\"text-align:left\">项目详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Web前端开发工程师</td>\n<td style=\"text-align:center\">1.事件申报<br>2.雷诺微信<br>3.易&nbsp;&nbsp;租&nbsp;&nbsp;车<br>4.风神物流</td>\n<td style=\"text-align:left\">负责微信公众号的前端页面设计及开发、JS、CSS代码优化压缩,H5、CSS3动画效果实现,用户体验优化，用到的框架有FrozenUI、WeUI</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">5.雷诺微信</td>\n<td style=\"text-align:left\">雷诺微信后台管理系统，利用前端热门框架Bootstrap开发前端页面，用户体验优化</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">6.车主APP</td>\n<td style=\"text-align:left\">原用Framework7前端UI框架开发前端页面，生成混合APP，后改用React-Native开发，生成原生APP</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">7.智通车商</td>\n<td style=\"text-align:left\">vue+node快速搭建开发环境，并进行组件式开发,用到的知识有，Vue、Vuex、Vue-Router、Axios</td>\n</tr>\n</tbody>\n</table>\n<p><br></p>\n<ul>\n<li>2013.7–2015.11 鹏博医疗集团有限公司</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">职业</th>\n<th style=\"text-align:center\">职责</th>\n<th style=\"text-align:left\">职责详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">网页设计</td>\n<td style=\"text-align:center\">官网设计及制作</td>\n<td style=\"text-align:left\">网页制作或相关网络广告设计；熟练运用DIV+CSS进行网页布局，Jquery，Js等前端开发技术制作网页特效；熟悉Photoshop，Dreamweaver，Fireworks等设计软件</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"个人优势\"><a href=\"#个人优势\" class=\"headerlink\" title=\"个人优势\"></a>个人优势</h3><h4 id=\"个人工作技能展示\"><a href=\"#个人工作技能展示\" class=\"headerlink\" title=\"个人工作技能展示\"></a>个人工作技能展示</h4><ul>\n<li>1.掌握HTML5+CSS3+Js等基本语言</li>\n<li>2.熟悉React.js，Vue.js等主流的前端框架</li>\n<li>3.了解ES6，Node.js，Webpack前端模块构建工具等</li>\n<li>4.了解 Oracle、MongoDB等数据库</li>\n<li>5.熟悉HTML5+CSS3+实现语义化布局</li>\n<li>6.熟悉响应式布局与自适应布局，了解less&amp;scss，了解CSS3动画</li>\n<li>7.掌握主流的前端框架、性能优化技术，熟悉前端工程化</li>\n<li>8.掌握各式各样的开发工具，包括webstorm、sublime Text3、atom、HBuilder、Dreamweaver、Photoshop、Fireworks、Axure RP等</li>\n<li>9.除了工作上的项目，个人在业余时间多次尝试开发部署自己的项目，目前比较完整的项目是用Vue+Node+MongDB等知识做的一个小商店销售登记项目。目前也拥有自己的<a href=\"https://github.com/foxSnower\" target=\"_blank\" rel=\"noopener\">github</a>、<a href=\"https://foxsnower.github.io/\" target=\"_blank\" rel=\"noopener\">个人博客</a>(欢迎点击阅览)</li>\n</ul>\n<h4 id=\"个人业余技能展示\"><a href=\"#个人业余技能展示\" class=\"headerlink\" title=\"个人业余技能展示\"></a>个人业余技能展示</h4><ul>\n<li>拥有乒乓球技术技能，在校时是院队的女子乒乓球球队队长，曾分别获得女子乒乓球团体第四、第二及第一；在联友担任乒协宣传委员兼会员教练，曾获得东风南方女子乒乓球赛冠军、东风日产团体赛冠军及2016年度优秀教练员称号，么么哒(づ￣ 3￣)づ</li>\n</ul>\n<h3 id=\"个人意向\"><a href=\"#个人意向\" class=\"headerlink\" title=\"个人意向\"></a>个人意向</h3><ul>\n<li>希望下一份工作不离开移动端，而且能够在nodeJs、和vueJs上发挥水平</li>\n</ul>\n"},{"layout":"categories","title":"skill","_content":"","source":"skill/index.md","raw":"layout: categories\ntitle: skill \n---","date":"2018-02-27T03:04:29.000Z","updated":"2018-02-27T03:04:29.000Z","path":"skill/index.html","comments":1,"_id":"cje52p0vn00096atfwbjaoucf","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"title","_content":"\n","source":"tags/index.md","raw":"layout: tags\ntitle: title\n---\n\n","date":"2018-02-27T03:04:29.000Z","updated":"2018-02-27T03:04:29.000Z","path":"tags/index.html","comments":1,"_id":"cje52p0vr000d6atf36pcjijp","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"categories","title":"tool","_content":"","source":"tool/index.md","raw":"layout: categories\ntitle: tool \n---","date":"2018-02-27T03:04:29.000Z","updated":"2018-02-27T03:04:29.000Z","path":"tool/index.html","comments":1,"_id":"cje52p0vv000g6atfxz0schks","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"CSS常用背景图片定位方法","keywords":"前端 背景图片 定位方法","date":"2017-05-19T16:00:00.000Z","_content":"\nCSS背景图片定位其实对于每一位学习前端的同学来说，都已经非常熟悉了。网上铺天盖地的最常见的一种方案就是在父元素中relative，然后子元素absolute。这种方案当然好，不过带来的一个缺点就是会改变元素的层级关系，如果在多个地方使用，这样的层叠嵌套的关系会十分混乱。\n\n先暂时抛弃那种方案，给大家分享几种CSS背景图片定位的方案。\n\n整篇文章会按照如下思路：\n * 1.无依赖的absolute定位\n * 2.background-position扩展语法\n * 3.background-origin定位\n * 4.calc()定位\n<!--more-->\n\n## 无依赖的absolute定位\n\n在网络上，对absolute存在这样一个误解，认为绝对定位absolute的使用必须要设置父元素相对定位relative。这样的理解不能认为是错的，只能说对定义没有完全认识。在W3C文档中是这样定义absolute的：\n　　生成绝对定位的元素，相对于static定位以外的第一个父元素进行定位。元素的位置通过'left' , 'right' , 'bottom' , 'top' 属性进行规定。\n　　对这句话的理解应该如下(L : left，R：right，B：bottom，T：top)\n\n * a：当给一个元素设置position:absolute之后，如果父元素没有设置position:relative，则该元素是通过LRBT依据可视窗口区域的左上角进行定位;如果父元素设置了position:relative，则该元素是通过LRBT依据父元素容器的左上角进行定位。\n * b：在生成绝对定位的元素时，不管父元素是否设置了position:relative，使用margin-top , margin-left , margin-right , margin-bottom其中的两个非相反方向进行定位，其效果会像相对定位relative一样，根据自身位置进行定位。但是使用margin定位与relative唯一的区别就是，absolute脱离文档流，原来的物理空间已经消失，而relative没有脱离文档流，原来的物理空间依然占据。\n　　所以，可以使用无依赖relative的absolute进行定位，定位方法是使用margin，而不能使用LRBT。\n　　代码如下：\n        .keith {\n          margin: 2em;\n          width: 5em;\n          height: 5em;\n          background: lightgreen;\n        }\n\n        .keith .main {\n          position: absolute;\n          background: url(\"../images/my-icons/Loginicon.png\") scroll no-repeat 0 0;\n          width: 21px;\n          height: 21px;\n          margin-left: calc(5em - 25px);\n          margin-top: calc(5em - 25px);\n        }\n\n\n上面代码中，使用margin-left , margin-top 与 position:absolute来对图片进行定位。使用了CSS3中的calc()来计算需要定位的值。\n\n示例图片如下：\n\n ![无依赖的absolute定位](../../../../images/css-background-setting/1.png)\n\n## background-position扩展语法\n\n在CSS3背景与边框中，background-position属性已经得到扩展，它允许我们指定背景图片距离任意角的偏移量，只要我们在偏移量前面指定关键字即可。\n代码如下：\n\n        .keith{\n            margin:2em;\n            width:5em;\n            height:5em;\n            background:lightgreen url('../images/my-icons/Loginicon.png') scroll no-repeat ;\n            background-position:right 5px bottom 5px;\n        };\n上面代码中，使用background-position扩展语法即可实现距离右下角5px距离的定位。\n\n## background-origin定位\n\nbackground-origin是CSS3中新增的属性，主要用来决定background-position属性的参考原点，即决定背景图片定位的起点。在默认情况下，背景图片的background-position属性总是以元素左上角为坐标原定对背景图片进行背景定位。\n　　background-origin有三个属性值content-box , padding-box(默认值) , border-box 。\n　　看看如何使用这个属性来对背景图片进行右下角5px的定位，代码如下。\n\n        .keith {\n          margin: 2em;\n          width: 5em;\n          height: 5em;\n          padding: .5em;\n          background: lightgreen url(\"../images/my-icons/Loginicon.png\") scroll no-repeat;\n          background-position: right bottom;\n          -moz-background-origin: content;\n          -o-background-origin: content-box;\n          -webkit-background-origin: content;\n          background-origin: content-box;\n          -moz-box-sizing: border-box;\n          -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n        }\n\n上面代码中，给盒子设置了padding值。使用box-sizing属性来调整div在浏览器下的盒模型为IE盒模型，border-box的意思是总宽度=content area + padding + border 。这里给background-origin属性设置了content-box，可能大家会不太理解，为什么不是padding-box。看一个。\n\n![火狐下的截图](../../../../images/css-background-setting/2.png)\n\n上面图片中，黄色区域的是margin，紫色区域的是padding，浅蓝色区域的是content-area。如果给元素设置了padding-box，那么此时图片会定位在右下角，与右下角没有任何空间。所以此时要使用content-box进行定位。最终的效果如下。\n\n![background-origin定位](../../../../images/css-background-setting/1.png)\n\n## calc()定位\n\n如果我们希望通过内容来撑开容器的宽度和高度时，而不去固定高度和宽度时，这时需要使用calc属性+background-position属性结合使用，来对图片进行定位。因为这时候并不知道容器的高度和宽度，只能有100%来进行计算。\n　　\n这是一段文字，用于撑开容器。\n\n        <div class=\"keith\">\n                这是一段文字，用于撑开容器。<br>\n        </div>\n\n        .keith{\n            margin:2em;\n            padding:2em;\n            display:inline-block;\n            background:lightgreen url('../images/my-icons/Loginicon.png') scroll no-repeat;\n            background-position:calc(100% - 5px) calc(100% - 5px);\n        }\n\n示例图片如下：\n\n![calc()定位](../../../../images/css-background-setting/3.png)\n\n完。感谢大家的阅读。\n\n原文链接：[http://www.cnblogs.com/Uncle-Keith/p/5937180.html?utm_source=tuicool&utm_medium=referral](http://www.cnblogs.com/Uncle-Keith/p/5937180.html?utm_source=tuicool&utm_medium=referral)\n","source":"_posts/CSS常用背景图片定位方法.md","raw":"\n---\ntitle: CSS常用背景图片定位方法\nkeywords: 前端 背景图片 定位方法\ntags: CSS\ncategories: skill\ndate: 2017-05-20\n---\n\nCSS背景图片定位其实对于每一位学习前端的同学来说，都已经非常熟悉了。网上铺天盖地的最常见的一种方案就是在父元素中relative，然后子元素absolute。这种方案当然好，不过带来的一个缺点就是会改变元素的层级关系，如果在多个地方使用，这样的层叠嵌套的关系会十分混乱。\n\n先暂时抛弃那种方案，给大家分享几种CSS背景图片定位的方案。\n\n整篇文章会按照如下思路：\n * 1.无依赖的absolute定位\n * 2.background-position扩展语法\n * 3.background-origin定位\n * 4.calc()定位\n<!--more-->\n\n## 无依赖的absolute定位\n\n在网络上，对absolute存在这样一个误解，认为绝对定位absolute的使用必须要设置父元素相对定位relative。这样的理解不能认为是错的，只能说对定义没有完全认识。在W3C文档中是这样定义absolute的：\n　　生成绝对定位的元素，相对于static定位以外的第一个父元素进行定位。元素的位置通过'left' , 'right' , 'bottom' , 'top' 属性进行规定。\n　　对这句话的理解应该如下(L : left，R：right，B：bottom，T：top)\n\n * a：当给一个元素设置position:absolute之后，如果父元素没有设置position:relative，则该元素是通过LRBT依据可视窗口区域的左上角进行定位;如果父元素设置了position:relative，则该元素是通过LRBT依据父元素容器的左上角进行定位。\n * b：在生成绝对定位的元素时，不管父元素是否设置了position:relative，使用margin-top , margin-left , margin-right , margin-bottom其中的两个非相反方向进行定位，其效果会像相对定位relative一样，根据自身位置进行定位。但是使用margin定位与relative唯一的区别就是，absolute脱离文档流，原来的物理空间已经消失，而relative没有脱离文档流，原来的物理空间依然占据。\n　　所以，可以使用无依赖relative的absolute进行定位，定位方法是使用margin，而不能使用LRBT。\n　　代码如下：\n        .keith {\n          margin: 2em;\n          width: 5em;\n          height: 5em;\n          background: lightgreen;\n        }\n\n        .keith .main {\n          position: absolute;\n          background: url(\"../images/my-icons/Loginicon.png\") scroll no-repeat 0 0;\n          width: 21px;\n          height: 21px;\n          margin-left: calc(5em - 25px);\n          margin-top: calc(5em - 25px);\n        }\n\n\n上面代码中，使用margin-left , margin-top 与 position:absolute来对图片进行定位。使用了CSS3中的calc()来计算需要定位的值。\n\n示例图片如下：\n\n ![无依赖的absolute定位](../../../../images/css-background-setting/1.png)\n\n## background-position扩展语法\n\n在CSS3背景与边框中，background-position属性已经得到扩展，它允许我们指定背景图片距离任意角的偏移量，只要我们在偏移量前面指定关键字即可。\n代码如下：\n\n        .keith{\n            margin:2em;\n            width:5em;\n            height:5em;\n            background:lightgreen url('../images/my-icons/Loginicon.png') scroll no-repeat ;\n            background-position:right 5px bottom 5px;\n        };\n上面代码中，使用background-position扩展语法即可实现距离右下角5px距离的定位。\n\n## background-origin定位\n\nbackground-origin是CSS3中新增的属性，主要用来决定background-position属性的参考原点，即决定背景图片定位的起点。在默认情况下，背景图片的background-position属性总是以元素左上角为坐标原定对背景图片进行背景定位。\n　　background-origin有三个属性值content-box , padding-box(默认值) , border-box 。\n　　看看如何使用这个属性来对背景图片进行右下角5px的定位，代码如下。\n\n        .keith {\n          margin: 2em;\n          width: 5em;\n          height: 5em;\n          padding: .5em;\n          background: lightgreen url(\"../images/my-icons/Loginicon.png\") scroll no-repeat;\n          background-position: right bottom;\n          -moz-background-origin: content;\n          -o-background-origin: content-box;\n          -webkit-background-origin: content;\n          background-origin: content-box;\n          -moz-box-sizing: border-box;\n          -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n        }\n\n上面代码中，给盒子设置了padding值。使用box-sizing属性来调整div在浏览器下的盒模型为IE盒模型，border-box的意思是总宽度=content area + padding + border 。这里给background-origin属性设置了content-box，可能大家会不太理解，为什么不是padding-box。看一个。\n\n![火狐下的截图](../../../../images/css-background-setting/2.png)\n\n上面图片中，黄色区域的是margin，紫色区域的是padding，浅蓝色区域的是content-area。如果给元素设置了padding-box，那么此时图片会定位在右下角，与右下角没有任何空间。所以此时要使用content-box进行定位。最终的效果如下。\n\n![background-origin定位](../../../../images/css-background-setting/1.png)\n\n## calc()定位\n\n如果我们希望通过内容来撑开容器的宽度和高度时，而不去固定高度和宽度时，这时需要使用calc属性+background-position属性结合使用，来对图片进行定位。因为这时候并不知道容器的高度和宽度，只能有100%来进行计算。\n　　\n这是一段文字，用于撑开容器。\n\n        <div class=\"keith\">\n                这是一段文字，用于撑开容器。<br>\n        </div>\n\n        .keith{\n            margin:2em;\n            padding:2em;\n            display:inline-block;\n            background:lightgreen url('../images/my-icons/Loginicon.png') scroll no-repeat;\n            background-position:calc(100% - 5px) calc(100% - 5px);\n        }\n\n示例图片如下：\n\n![calc()定位](../../../../images/css-background-setting/3.png)\n\n完。感谢大家的阅读。\n\n原文链接：[http://www.cnblogs.com/Uncle-Keith/p/5937180.html?utm_source=tuicool&utm_medium=referral](http://www.cnblogs.com/Uncle-Keith/p/5937180.html?utm_source=tuicool&utm_medium=referral)\n","slug":"CSS常用背景图片定位方法","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0v200006atftq6ecmtm","content":"<p>CSS背景图片定位其实对于每一位学习前端的同学来说，都已经非常熟悉了。网上铺天盖地的最常见的一种方案就是在父元素中relative，然后子元素absolute。这种方案当然好，不过带来的一个缺点就是会改变元素的层级关系，如果在多个地方使用，这样的层叠嵌套的关系会十分混乱。</p>\n<p>先暂时抛弃那种方案，给大家分享几种CSS背景图片定位的方案。</p>\n<p>整篇文章会按照如下思路：</p>\n<ul>\n<li>1.无依赖的absolute定位</li>\n<li>2.background-position扩展语法</li>\n<li>3.background-origin定位</li>\n<li>4.calc()定位<a id=\"more\"></a>\n</li>\n</ul>\n<h2 id=\"无依赖的absolute定位\"><a href=\"#无依赖的absolute定位\" class=\"headerlink\" title=\"无依赖的absolute定位\"></a>无依赖的absolute定位</h2><p>在网络上，对absolute存在这样一个误解，认为绝对定位absolute的使用必须要设置父元素相对定位relative。这样的理解不能认为是错的，只能说对定义没有完全认识。在W3C文档中是这样定义absolute的：<br>　　生成绝对定位的元素，相对于static定位以外的第一个父元素进行定位。元素的位置通过’left’ , ‘right’ , ‘bottom’ , ‘top’ 属性进行规定。<br>　　对这句话的理解应该如下(L : left，R：right，B：bottom，T：top)</p>\n<ul>\n<li>a：当给一个元素设置position:absolute之后，如果父元素没有设置position:relative，则该元素是通过LRBT依据可视窗口区域的左上角进行定位;如果父元素设置了position:relative，则该元素是通过LRBT依据父元素容器的左上角进行定位。</li>\n<li><p>b：在生成绝对定位的元素时，不管父元素是否设置了position:relative，使用margin-top , margin-left , margin-right , margin-bottom其中的两个非相反方向进行定位，其效果会像相对定位relative一样，根据自身位置进行定位。但是使用margin定位与relative唯一的区别就是，absolute脱离文档流，原来的物理空间已经消失，而relative没有脱离文档流，原来的物理空间依然占据。<br>　　所以，可以使用无依赖relative的absolute进行定位，定位方法是使用margin，而不能使用LRBT。<br>　　代码如下：</p>\n<pre><code>.keith {\n  margin: 2em;\n  width: 5em;\n  height: 5em;\n  background: lightgreen;\n}\n\n.keith .main {\n  position: absolute;\n  background: url(&quot;../images/my-icons/Loginicon.png&quot;) scroll no-repeat 0 0;\n  width: 21px;\n  height: 21px;\n  margin-left: calc(5em - 25px);\n  margin-top: calc(5em - 25px);\n}\n</code></pre></li>\n</ul>\n<p>上面代码中，使用margin-left , margin-top 与 position:absolute来对图片进行定位。使用了CSS3中的calc()来计算需要定位的值。</p>\n<p>示例图片如下：</p>\n<p> <img src=\"../../../../images/css-background-setting/1.png\" alt=\"无依赖的absolute定位\"></p>\n<h2 id=\"background-position扩展语法\"><a href=\"#background-position扩展语法\" class=\"headerlink\" title=\"background-position扩展语法\"></a>background-position扩展语法</h2><p>在CSS3背景与边框中，background-position属性已经得到扩展，它允许我们指定背景图片距离任意角的偏移量，只要我们在偏移量前面指定关键字即可。<br>代码如下：</p>\n<pre><code>.keith{\n    margin:2em;\n    width:5em;\n    height:5em;\n    background:lightgreen url(&apos;../images/my-icons/Loginicon.png&apos;) scroll no-repeat ;\n    background-position:right 5px bottom 5px;\n};\n</code></pre><p>上面代码中，使用background-position扩展语法即可实现距离右下角5px距离的定位。</p>\n<h2 id=\"background-origin定位\"><a href=\"#background-origin定位\" class=\"headerlink\" title=\"background-origin定位\"></a>background-origin定位</h2><p>background-origin是CSS3中新增的属性，主要用来决定background-position属性的参考原点，即决定背景图片定位的起点。在默认情况下，背景图片的background-position属性总是以元素左上角为坐标原定对背景图片进行背景定位。<br>　　background-origin有三个属性值content-box , padding-box(默认值) , border-box 。<br>　　看看如何使用这个属性来对背景图片进行右下角5px的定位，代码如下。</p>\n<pre><code>.keith {\n  margin: 2em;\n  width: 5em;\n  height: 5em;\n  padding: .5em;\n  background: lightgreen url(&quot;../images/my-icons/Loginicon.png&quot;) scroll no-repeat;\n  background-position: right bottom;\n  -moz-background-origin: content;\n  -o-background-origin: content-box;\n  -webkit-background-origin: content;\n  background-origin: content-box;\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n</code></pre><p>上面代码中，给盒子设置了padding值。使用box-sizing属性来调整div在浏览器下的盒模型为IE盒模型，border-box的意思是总宽度=content area + padding + border 。这里给background-origin属性设置了content-box，可能大家会不太理解，为什么不是padding-box。看一个。</p>\n<p><img src=\"../../../../images/css-background-setting/2.png\" alt=\"火狐下的截图\"></p>\n<p>上面图片中，黄色区域的是margin，紫色区域的是padding，浅蓝色区域的是content-area。如果给元素设置了padding-box，那么此时图片会定位在右下角，与右下角没有任何空间。所以此时要使用content-box进行定位。最终的效果如下。</p>\n<p><img src=\"../../../../images/css-background-setting/1.png\" alt=\"background-origin定位\"></p>\n<h2 id=\"calc-定位\"><a href=\"#calc-定位\" class=\"headerlink\" title=\"calc()定位\"></a>calc()定位</h2><p>如果我们希望通过内容来撑开容器的宽度和高度时，而不去固定高度和宽度时，这时需要使用calc属性+background-position属性结合使用，来对图片进行定位。因为这时候并不知道容器的高度和宽度，只能有100%来进行计算。<br>　　<br>这是一段文字，用于撑开容器。</p>\n<pre><code>&lt;div class=&quot;keith&quot;&gt;\n        这是一段文字，用于撑开容器。&lt;br&gt;\n&lt;/div&gt;\n\n.keith{\n    margin:2em;\n    padding:2em;\n    display:inline-block;\n    background:lightgreen url(&apos;../images/my-icons/Loginicon.png&apos;) scroll no-repeat;\n    background-position:calc(100% - 5px) calc(100% - 5px);\n}\n</code></pre><p>示例图片如下：</p>\n<p><img src=\"../../../../images/css-background-setting/3.png\" alt=\"calc()定位\"></p>\n<p>完。感谢大家的阅读。</p>\n<p>原文链接：<a href=\"http://www.cnblogs.com/Uncle-Keith/p/5937180.html?utm_source=tuicool&amp;utm_medium=referral\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/Uncle-Keith/p/5937180.html?utm_source=tuicool&amp;utm_medium=referral</a></p>\n","site":{"data":{}},"excerpt":"<p>CSS背景图片定位其实对于每一位学习前端的同学来说，都已经非常熟悉了。网上铺天盖地的最常见的一种方案就是在父元素中relative，然后子元素absolute。这种方案当然好，不过带来的一个缺点就是会改变元素的层级关系，如果在多个地方使用，这样的层叠嵌套的关系会十分混乱。</p>\n<p>先暂时抛弃那种方案，给大家分享几种CSS背景图片定位的方案。</p>\n<p>整篇文章会按照如下思路：</p>\n<ul>\n<li>1.无依赖的absolute定位</li>\n<li>2.background-position扩展语法</li>\n<li>3.background-origin定位</li>\n<li>4.calc()定位","more":"</li>\n</ul>\n<h2 id=\"无依赖的absolute定位\"><a href=\"#无依赖的absolute定位\" class=\"headerlink\" title=\"无依赖的absolute定位\"></a>无依赖的absolute定位</h2><p>在网络上，对absolute存在这样一个误解，认为绝对定位absolute的使用必须要设置父元素相对定位relative。这样的理解不能认为是错的，只能说对定义没有完全认识。在W3C文档中是这样定义absolute的：<br>　　生成绝对定位的元素，相对于static定位以外的第一个父元素进行定位。元素的位置通过’left’ , ‘right’ , ‘bottom’ , ‘top’ 属性进行规定。<br>　　对这句话的理解应该如下(L : left，R：right，B：bottom，T：top)</p>\n<ul>\n<li>a：当给一个元素设置position:absolute之后，如果父元素没有设置position:relative，则该元素是通过LRBT依据可视窗口区域的左上角进行定位;如果父元素设置了position:relative，则该元素是通过LRBT依据父元素容器的左上角进行定位。</li>\n<li><p>b：在生成绝对定位的元素时，不管父元素是否设置了position:relative，使用margin-top , margin-left , margin-right , margin-bottom其中的两个非相反方向进行定位，其效果会像相对定位relative一样，根据自身位置进行定位。但是使用margin定位与relative唯一的区别就是，absolute脱离文档流，原来的物理空间已经消失，而relative没有脱离文档流，原来的物理空间依然占据。<br>　　所以，可以使用无依赖relative的absolute进行定位，定位方法是使用margin，而不能使用LRBT。<br>　　代码如下：</p>\n<pre><code>.keith {\n  margin: 2em;\n  width: 5em;\n  height: 5em;\n  background: lightgreen;\n}\n\n.keith .main {\n  position: absolute;\n  background: url(&quot;../images/my-icons/Loginicon.png&quot;) scroll no-repeat 0 0;\n  width: 21px;\n  height: 21px;\n  margin-left: calc(5em - 25px);\n  margin-top: calc(5em - 25px);\n}\n</code></pre></li>\n</ul>\n<p>上面代码中，使用margin-left , margin-top 与 position:absolute来对图片进行定位。使用了CSS3中的calc()来计算需要定位的值。</p>\n<p>示例图片如下：</p>\n<p> <img src=\"../../../../images/css-background-setting/1.png\" alt=\"无依赖的absolute定位\"></p>\n<h2 id=\"background-position扩展语法\"><a href=\"#background-position扩展语法\" class=\"headerlink\" title=\"background-position扩展语法\"></a>background-position扩展语法</h2><p>在CSS3背景与边框中，background-position属性已经得到扩展，它允许我们指定背景图片距离任意角的偏移量，只要我们在偏移量前面指定关键字即可。<br>代码如下：</p>\n<pre><code>.keith{\n    margin:2em;\n    width:5em;\n    height:5em;\n    background:lightgreen url(&apos;../images/my-icons/Loginicon.png&apos;) scroll no-repeat ;\n    background-position:right 5px bottom 5px;\n};\n</code></pre><p>上面代码中，使用background-position扩展语法即可实现距离右下角5px距离的定位。</p>\n<h2 id=\"background-origin定位\"><a href=\"#background-origin定位\" class=\"headerlink\" title=\"background-origin定位\"></a>background-origin定位</h2><p>background-origin是CSS3中新增的属性，主要用来决定background-position属性的参考原点，即决定背景图片定位的起点。在默认情况下，背景图片的background-position属性总是以元素左上角为坐标原定对背景图片进行背景定位。<br>　　background-origin有三个属性值content-box , padding-box(默认值) , border-box 。<br>　　看看如何使用这个属性来对背景图片进行右下角5px的定位，代码如下。</p>\n<pre><code>.keith {\n  margin: 2em;\n  width: 5em;\n  height: 5em;\n  padding: .5em;\n  background: lightgreen url(&quot;../images/my-icons/Loginicon.png&quot;) scroll no-repeat;\n  background-position: right bottom;\n  -moz-background-origin: content;\n  -o-background-origin: content-box;\n  -webkit-background-origin: content;\n  background-origin: content-box;\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n</code></pre><p>上面代码中，给盒子设置了padding值。使用box-sizing属性来调整div在浏览器下的盒模型为IE盒模型，border-box的意思是总宽度=content area + padding + border 。这里给background-origin属性设置了content-box，可能大家会不太理解，为什么不是padding-box。看一个。</p>\n<p><img src=\"../../../../images/css-background-setting/2.png\" alt=\"火狐下的截图\"></p>\n<p>上面图片中，黄色区域的是margin，紫色区域的是padding，浅蓝色区域的是content-area。如果给元素设置了padding-box，那么此时图片会定位在右下角，与右下角没有任何空间。所以此时要使用content-box进行定位。最终的效果如下。</p>\n<p><img src=\"../../../../images/css-background-setting/1.png\" alt=\"background-origin定位\"></p>\n<h2 id=\"calc-定位\"><a href=\"#calc-定位\" class=\"headerlink\" title=\"calc()定位\"></a>calc()定位</h2><p>如果我们希望通过内容来撑开容器的宽度和高度时，而不去固定高度和宽度时，这时需要使用calc属性+background-position属性结合使用，来对图片进行定位。因为这时候并不知道容器的高度和宽度，只能有100%来进行计算。<br>　　<br>这是一段文字，用于撑开容器。</p>\n<pre><code>&lt;div class=&quot;keith&quot;&gt;\n        这是一段文字，用于撑开容器。&lt;br&gt;\n&lt;/div&gt;\n\n.keith{\n    margin:2em;\n    padding:2em;\n    display:inline-block;\n    background:lightgreen url(&apos;../images/my-icons/Loginicon.png&apos;) scroll no-repeat;\n    background-position:calc(100% - 5px) calc(100% - 5px);\n}\n</code></pre><p>示例图片如下：</p>\n<p><img src=\"../../../../images/css-background-setting/3.png\" alt=\"calc()定位\"></p>\n<p>完。感谢大家的阅读。</p>\n<p>原文链接：<a href=\"http://www.cnblogs.com/Uncle-Keith/p/5937180.html?utm_source=tuicool&amp;utm_medium=referral\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/Uncle-Keith/p/5937180.html?utm_source=tuicool&amp;utm_medium=referral</a></p>"},{"title":"引进外部字体or图标","keywords":"引进字体 图标 CSS","date":"2016-11-19T16:00:00.000Z","_content":"\n### 引进外部字体\n\n\t@font-face {\n\t    font-family: 'iconfont';\n\t    src: url('iconfont.eot'); /* IE9*/\n\t    src: url('iconfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\n\t    url('iconfont.woff') format('woff'), /* chrome、firefox */\n\t    url('iconfont.ttf') format('truetype'), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/\n\t    url('iconfont.svg#iconfont') format('svg'); /* iOS 4.1- */\n\t}\n\n\n\tfont-family:'Hiragino Sans GB','Microsoft Yahei',\"WenQuanYi Micro Hei\",SimSun,Tahoma,Arial,Helvetica,STHeiti;\n\n### 引进外部图标\n\n\t/*图标字体*/\n\n\t@font-face {\n\t  font-family: 'fontello';\n\t  src: url('font/fontello.eot');\n\t  src: url('font/fontello.eot#iefix') format('embedded-opentype'),\n\t       url('font/fontello.woff') format('woff'),\n\t       url('font/fontello.ttf') format('truetype'),\n\t       url('font/fontello.svg#fontello') format('svg');\n\t  font-weight: normal;\n\t  font-style: normal;\n\t}\n\t.ficon,[class^=\"ficon-\"],[class^=\"ficon-\"]:before,[class*=\" ficon-\"]:before {\n\t  font-family: \"fontello\";\n\t  font-style: normal;\n\t  font-weight: normal;\n\t  speak: none;\n\t  display: inline-block;\n\t  text-decoration: inherit;\n\t  width: 1em;\n\t  margin-right: .2em;\n\t  text-align: center;\n\t  font-variant: normal;\n\t  text-transform: none;\n\t  line-height: 1em;\n\t  margin-left: .2em;\n\t}","source":"_posts/CSS引进外部字体or图标.md","raw":"\n---\ntitle: 引进外部字体or图标\nkeywords:  引进字体 图标 CSS\ncategories: note\ntags: CSS\ndate: 2016-11-20\n---\n\n### 引进外部字体\n\n\t@font-face {\n\t    font-family: 'iconfont';\n\t    src: url('iconfont.eot'); /* IE9*/\n\t    src: url('iconfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\n\t    url('iconfont.woff') format('woff'), /* chrome、firefox */\n\t    url('iconfont.ttf') format('truetype'), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/\n\t    url('iconfont.svg#iconfont') format('svg'); /* iOS 4.1- */\n\t}\n\n\n\tfont-family:'Hiragino Sans GB','Microsoft Yahei',\"WenQuanYi Micro Hei\",SimSun,Tahoma,Arial,Helvetica,STHeiti;\n\n### 引进外部图标\n\n\t/*图标字体*/\n\n\t@font-face {\n\t  font-family: 'fontello';\n\t  src: url('font/fontello.eot');\n\t  src: url('font/fontello.eot#iefix') format('embedded-opentype'),\n\t       url('font/fontello.woff') format('woff'),\n\t       url('font/fontello.ttf') format('truetype'),\n\t       url('font/fontello.svg#fontello') format('svg');\n\t  font-weight: normal;\n\t  font-style: normal;\n\t}\n\t.ficon,[class^=\"ficon-\"],[class^=\"ficon-\"]:before,[class*=\" ficon-\"]:before {\n\t  font-family: \"fontello\";\n\t  font-style: normal;\n\t  font-weight: normal;\n\t  speak: none;\n\t  display: inline-block;\n\t  text-decoration: inherit;\n\t  width: 1em;\n\t  margin-right: .2em;\n\t  text-align: center;\n\t  font-variant: normal;\n\t  text-transform: none;\n\t  line-height: 1em;\n\t  margin-left: .2em;\n\t}","slug":"CSS引进外部字体or图标","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0vb00026atf4aa8h5gp","content":"<h3 id=\"引进外部字体\"><a href=\"#引进外部字体\" class=\"headerlink\" title=\"引进外部字体\"></a>引进外部字体</h3><pre><code>@font-face {\n    font-family: &apos;iconfont&apos;;\n    src: url(&apos;iconfont.eot&apos;); /* IE9*/\n    src: url(&apos;iconfont.eot?#iefix&apos;) format(&apos;embedded-opentype&apos;), /* IE6-IE8 */\n    url(&apos;iconfont.woff&apos;) format(&apos;woff&apos;), /* chrome、firefox */\n    url(&apos;iconfont.ttf&apos;) format(&apos;truetype&apos;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/\n    url(&apos;iconfont.svg#iconfont&apos;) format(&apos;svg&apos;); /* iOS 4.1- */\n}\n\n\nfont-family:&apos;Hiragino Sans GB&apos;,&apos;Microsoft Yahei&apos;,&quot;WenQuanYi Micro Hei&quot;,SimSun,Tahoma,Arial,Helvetica,STHeiti;\n</code></pre><h3 id=\"引进外部图标\"><a href=\"#引进外部图标\" class=\"headerlink\" title=\"引进外部图标\"></a>引进外部图标</h3><pre><code>/*图标字体*/\n\n@font-face {\n  font-family: &apos;fontello&apos;;\n  src: url(&apos;font/fontello.eot&apos;);\n  src: url(&apos;font/fontello.eot#iefix&apos;) format(&apos;embedded-opentype&apos;),\n       url(&apos;font/fontello.woff&apos;) format(&apos;woff&apos;),\n       url(&apos;font/fontello.ttf&apos;) format(&apos;truetype&apos;),\n       url(&apos;font/fontello.svg#fontello&apos;) format(&apos;svg&apos;);\n  font-weight: normal;\n  font-style: normal;\n}\n.ficon,[class^=&quot;ficon-&quot;],[class^=&quot;ficon-&quot;]:before,[class*=&quot; ficon-&quot;]:before {\n  font-family: &quot;fontello&quot;;\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1em;\n  margin-left: .2em;\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"引进外部字体\"><a href=\"#引进外部字体\" class=\"headerlink\" title=\"引进外部字体\"></a>引进外部字体</h3><pre><code>@font-face {\n    font-family: &apos;iconfont&apos;;\n    src: url(&apos;iconfont.eot&apos;); /* IE9*/\n    src: url(&apos;iconfont.eot?#iefix&apos;) format(&apos;embedded-opentype&apos;), /* IE6-IE8 */\n    url(&apos;iconfont.woff&apos;) format(&apos;woff&apos;), /* chrome、firefox */\n    url(&apos;iconfont.ttf&apos;) format(&apos;truetype&apos;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/\n    url(&apos;iconfont.svg#iconfont&apos;) format(&apos;svg&apos;); /* iOS 4.1- */\n}\n\n\nfont-family:&apos;Hiragino Sans GB&apos;,&apos;Microsoft Yahei&apos;,&quot;WenQuanYi Micro Hei&quot;,SimSun,Tahoma,Arial,Helvetica,STHeiti;\n</code></pre><h3 id=\"引进外部图标\"><a href=\"#引进外部图标\" class=\"headerlink\" title=\"引进外部图标\"></a>引进外部图标</h3><pre><code>/*图标字体*/\n\n@font-face {\n  font-family: &apos;fontello&apos;;\n  src: url(&apos;font/fontello.eot&apos;);\n  src: url(&apos;font/fontello.eot#iefix&apos;) format(&apos;embedded-opentype&apos;),\n       url(&apos;font/fontello.woff&apos;) format(&apos;woff&apos;),\n       url(&apos;font/fontello.ttf&apos;) format(&apos;truetype&apos;),\n       url(&apos;font/fontello.svg#fontello&apos;) format(&apos;svg&apos;);\n  font-weight: normal;\n  font-style: normal;\n}\n.ficon,[class^=&quot;ficon-&quot;],[class^=&quot;ficon-&quot;]:before,[class*=&quot; ficon-&quot;]:before {\n  font-family: &quot;fontello&quot;;\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1em;\n  margin-left: .2em;\n}\n</code></pre>"},{"title":"用纯CSS改变下拉列表select框的默认样式","keywords":"CSS 下拉列表样式 select","date":"2015-03-19T16:00:00.000Z","_content":"\n\n\tselect {\n\t  /*Chrome和Firefox里面的边框是不一样的，所以复写了一下*/\n\t  border: solid 1px #000;\n\n\t  /*很关键：将默认的select选择框样式清除*/\n\t  appearance:none;\n\t  -moz-appearance:none;\n\t  -webkit-appearance:none;\n\n\t  /*在选择框的最右侧中间显示小箭头图片*/\n\t  background: url(\"http://ourjs.github.io/static/2015/arrow.png\") no-repeat scroll right center transparent;\n\n\n\t  /*为下拉小箭头留出一点位置，避免被文字覆盖*/\n\t  padding-right: 14px;\n\t}\n\n\n\t/*清除ie的默认选择框样式清除，隐藏下拉箭头*/\n\tselect::-ms-expand { display: none; }","source":"_posts/CSS改变下拉列表select框的默认样式.md","raw":"\n---\ntitle: 用纯CSS改变下拉列表select框的默认样式\nkeywords: CSS 下拉列表样式 select\ncategories: note\ntags: CSS\ndate: 2015-03-20\n---\n\n\n\tselect {\n\t  /*Chrome和Firefox里面的边框是不一样的，所以复写了一下*/\n\t  border: solid 1px #000;\n\n\t  /*很关键：将默认的select选择框样式清除*/\n\t  appearance:none;\n\t  -moz-appearance:none;\n\t  -webkit-appearance:none;\n\n\t  /*在选择框的最右侧中间显示小箭头图片*/\n\t  background: url(\"http://ourjs.github.io/static/2015/arrow.png\") no-repeat scroll right center transparent;\n\n\n\t  /*为下拉小箭头留出一点位置，避免被文字覆盖*/\n\t  padding-right: 14px;\n\t}\n\n\n\t/*清除ie的默认选择框样式清除，隐藏下拉箭头*/\n\tselect::-ms-expand { display: none; }","slug":"CSS改变下拉列表select框的默认样式","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0vi00066atfi0pwb66g","content":"<pre><code>select {\n  /*Chrome和Firefox里面的边框是不一样的，所以复写了一下*/\n  border: solid 1px #000;\n\n  /*很关键：将默认的select选择框样式清除*/\n  appearance:none;\n  -moz-appearance:none;\n  -webkit-appearance:none;\n\n  /*在选择框的最右侧中间显示小箭头图片*/\n  background: url(&quot;http://ourjs.github.io/static/2015/arrow.png&quot;) no-repeat scroll right center transparent;\n\n\n  /*为下拉小箭头留出一点位置，避免被文字覆盖*/\n  padding-right: 14px;\n}\n\n\n/*清除ie的默认选择框样式清除，隐藏下拉箭头*/\nselect::-ms-expand { display: none; }\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<pre><code>select {\n  /*Chrome和Firefox里面的边框是不一样的，所以复写了一下*/\n  border: solid 1px #000;\n\n  /*很关键：将默认的select选择框样式清除*/\n  appearance:none;\n  -moz-appearance:none;\n  -webkit-appearance:none;\n\n  /*在选择框的最右侧中间显示小箭头图片*/\n  background: url(&quot;http://ourjs.github.io/static/2015/arrow.png&quot;) no-repeat scroll right center transparent;\n\n\n  /*为下拉小箭头留出一点位置，避免被文字覆盖*/\n  padding-right: 14px;\n}\n\n\n/*清除ie的默认选择框样式清除，隐藏下拉箭头*/\nselect::-ms-expand { display: none; }\n</code></pre>"},{"title":"移动web标配html头部+全身模板","keywords":"html 移动web 标配html头部","date":"2017-06-09T16:00:00.000Z","_content":"\n# 移动web标配html头部\n\n`Meta`标签中的`format-detection`属性及含义\n标签： `format-detection telephoneno meta html` 移动网页\t分类： 移动端开发\n`format-detection`翻译成中文的意思是“格式检测”，顾名思义，它是用来检测html里的一些格式的，那关于meta的\n\nformat-detection属性主要是有以下几个设置：\n`meta name=\"format-detection\" content=\"telephone=no\"`\n`meta name=\"format-detection\" content=\"email=no\"`\n`meta name=\"format-detection\" content=\"adress=no\"`\n也可以连写：`meta name=\"format-detection\" content=\"telephone=no,email=no,adress=no\"`\n下面具体说下每个设置的作用：\n\n## telephone\n\n你明明写的一串数字没加链接样式，而`iPhone`会自动把你这个文字加链接样式、并且点击这个数字还会自动拨号！想去掉\n\n这个拨号链接该如何操作呢？这时我们的`meta`又该大显神通了，代码如下：\n`telephone=no`就禁止了把数字转化为拨号链接！\n`telephone=yes`就开启了把数字转化为拨号链接，要开启转化功能，这个`meta`就不用写了,在默认是情况下就是开启！\n\n## email\n\n告诉设备不识别邮箱，点击之后不自动发送\n`email=no`禁止作为邮箱地址！\n`email=yes`就开启了把文字默认为邮箱地址，这个`meta`就不用写了,在默认是情况下就是开启！\n\n## adress\n\n`adress=no`禁止跳转至地图！\n`adress=yes`就开启了点击地址直接跳转至地图的功能,在默认是情况下就是开启！\n\n## 代码\n\n```html\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-\nscale=1.0,user-scalable=no\">\n<!--删除默认的苹果工具栏和菜单栏-->\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />    \n<!--控制状态栏显示样式//black-translucent灰色 //black黑色--> \n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" />\n<!--电话、邮件、地址默认格式取消-->\n<meta name=\"format-detection\" content=\"telephone=yes,email=no,adress=yes\"/>\n<!--手机端点击时，禁止出现灰色区域-->\n<meta name=\"msapplication-tap-highlight\" content=\"no\" />\n<meta name=\"format-detection\" content=\"telephone=yes\"/>\n```\n\n# 移动web标配全身模板\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh_cmn\">\n<head>\n    <meta name=\"description\" content=\"CSS position:flex in mobile\" />\n    <meta charset=utf-8 />\n    <!--\n    Created using JS Bin\n    http://jsbin.com\n    Copyright (c) 2016 by maxzhang (http://jsbin.com/omaCOSir/53/edit)\n    Released under the MIT license: http://jsbin.mit-license.org\n    -->\n    <meta name=\"robots\" content=\"noindex\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0\" />\n    <title>CSS position:flex in mobile</title>\n    <style id=\"jsbin-css\">\n        @font-face {\n            font-family: 'Glyphicons Halflings';\n            src: url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.eot');\n            src: url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.woff') format('woff'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');\n        }\n        .glyphicon {\n            font-family: 'Glyphicons Halflings';\n            font-size: 24px;\n            font-style: normal;\n            font-weight: normal;\n            line-height: 1;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n        }\n        .glyphicon-film:before {\n            content: \"\\e009\";\n        }\n        .glyphicon-qrcode:before {\n            content: \"\\e039\";\n        }\n        .glyphicon-list:before {\n            content: \"\\e056\";\n        }\n        .glyphicon-picture:before {\n            content: \"\\e060\";\n        }\n        .glyphicon-chevron-left:before {\n            content: \"\\e079\";\n        }\n        .glyphicon-calendar:before {\n            content: \"\\e109\";\n        }\n        * {\n            margin: 0;\n            padding: 0;\n            font-size: 16px;\n        }\n        a {\n            color: #fff;\n        }\n        header,\n        footer {\n            width: 100%;\n            height: 50px;\n        }\n        header .fixed,\n        footer .fixed {\n            position: fixed;\n            left: 0;\n            width: 100%;\n            height: 50px;\n        }\n        header .fixed .wrap,\n        footer .fixed .wrap {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n        }\n        header .fixed .wrap.float h1,\n        footer .fixed .wrap.float h1 {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            font-size: 20px;\n            line-height: 50px;\n            color: #fff;\n            text-align: center;\n        }\n        header .fixed .wrap.float .glyphicon,\n        footer .fixed .wrap.float .glyphicon {\n            display: inline-block;\n            margin: 12px 10px;\n            color: #fff;\n        }\n        header .fixed .wrap.float .left-icon,\n        footer .fixed .wrap.float .left-icon {\n            float: left;\n        }\n        header .fixed .wrap.float .right-icon,\n        footer .fixed .wrap.float .right-icon {\n            float: right;\n        }\n        header .fixed .wrap.float:before,\n        footer .fixed .wrap.float:before,\n        header .fixed .wrap.float:after,\n        footer .fixed .wrap.float:after {\n            content: \" \";\n            /* 1 */\n            display: table;\n            /* 2 */\n        }\n        header .fixed .wrap.float:after,\n        footer .fixed .wrap.float:after {\n            clear: both;\n        }\n        header .fixed .wrap.flex,\n        footer .fixed .wrap.flex {\n            display: -moz-box;\n            display: -webkit-box;\n            display: -webkit-flex;\n            display: -moz-flex;\n            display: -ms-flexbox;\n            display: -ms-flex;\n            display: flex;\n        }\n        header .fixed .wrap.flex > a,\n        footer .fixed .wrap.flex > a {\n            -webkit-box-sizing: border-box;\n            -moz-box-sizing: border-box;\n            box-sizing: border-box;\n            display: block;\n            -webkit-box-flex: 1;\n            -moz-box-flex: 1;\n            -webkit-flex: 1 1 0;\n            -moz-flex: 1 1 0;\n            -ms-flex: 1 1 0;\n            flex: 1 1 0;\n            text-align: center;\n        }\n        header .fixed .wrap.flex > a .glyphicon,\n        footer .fixed .wrap.flex > a .glyphicon {\n            vertical-align: -20px;\n        }\n        header .fixed {\n            top: 0;\n            background-color: #45b97c;\n        }\n        footer .fixed {\n            bottom: 0;\n            background-color: #464547;\n        }\n        .main {\n            margin: 15px 10px;\n        }\n    </style>\n</head>\n<body>\n<header>\n    <div class=\"fixed\">\n        <div class=\"wrap float\">\n            <div class=\"left-icon\">\n                <span class=\"glyphicon glyphicon-chevron-left\"></span>\n            </div>\n            <h1>HEADER</h1>\n            <div class=\"right-icon\">\n                <span class=\"glyphicon glyphicon-calendar\"></span><span class=\"glyphicon glyphicon-list\"></span>\n            </div>\n        </div>\n    </div>\n</header>\n<div class=\"main\">\n    -------------- start --------------<br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    --------------- end ---------------\n</div>\n<footer>\n    <div class=\"fixed\">\n        <div class=\"wrap flex\">\n            <a href=\"#\"><span class=\"glyphicon glyphicon-picture\"></span></a>\n            <a href=\"#\"><span class=\"glyphicon glyphicon-film\"></span></a>\n            <a href=\"#\"><span class=\"glyphicon glyphicon-qrcode\"></span></a>\n        </div>\n    </div>\n</footer>\n<script src=\"http://static.jsbin.com/js/render/edit.js?3.38.11\"></script>\n<script>jsbinShowEdit && jsbinShowEdit({\"static\":\"http://static.jsbin.com\",\"root\":\"http://jsbin.com\"});</script>\n<script>\n    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n                (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n    ga('create', 'UA-1656750-34', 'auto');\n    ga('require', 'linkid', 'linkid.js');\n    ga('require', 'displayfeatures');\n    ga('send', 'pageview');\n</script>\n</body>\n</html>\n```","source":"_posts/HTML移动web标配头部.md","raw":"---\ntitle: 移动web标配html头部+全身模板\n\nkeywords: html 移动web 标配html头部\n\ncategories: note\n\ntags: \n - HTML\n\ndate: 2017-06-10\n---\n\n# 移动web标配html头部\n\n`Meta`标签中的`format-detection`属性及含义\n标签： `format-detection telephoneno meta html` 移动网页\t分类： 移动端开发\n`format-detection`翻译成中文的意思是“格式检测”，顾名思义，它是用来检测html里的一些格式的，那关于meta的\n\nformat-detection属性主要是有以下几个设置：\n`meta name=\"format-detection\" content=\"telephone=no\"`\n`meta name=\"format-detection\" content=\"email=no\"`\n`meta name=\"format-detection\" content=\"adress=no\"`\n也可以连写：`meta name=\"format-detection\" content=\"telephone=no,email=no,adress=no\"`\n下面具体说下每个设置的作用：\n\n## telephone\n\n你明明写的一串数字没加链接样式，而`iPhone`会自动把你这个文字加链接样式、并且点击这个数字还会自动拨号！想去掉\n\n这个拨号链接该如何操作呢？这时我们的`meta`又该大显神通了，代码如下：\n`telephone=no`就禁止了把数字转化为拨号链接！\n`telephone=yes`就开启了把数字转化为拨号链接，要开启转化功能，这个`meta`就不用写了,在默认是情况下就是开启！\n\n## email\n\n告诉设备不识别邮箱，点击之后不自动发送\n`email=no`禁止作为邮箱地址！\n`email=yes`就开启了把文字默认为邮箱地址，这个`meta`就不用写了,在默认是情况下就是开启！\n\n## adress\n\n`adress=no`禁止跳转至地图！\n`adress=yes`就开启了点击地址直接跳转至地图的功能,在默认是情况下就是开启！\n\n## 代码\n\n```html\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-\nscale=1.0,user-scalable=no\">\n<!--删除默认的苹果工具栏和菜单栏-->\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />    \n<!--控制状态栏显示样式//black-translucent灰色 //black黑色--> \n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" />\n<!--电话、邮件、地址默认格式取消-->\n<meta name=\"format-detection\" content=\"telephone=yes,email=no,adress=yes\"/>\n<!--手机端点击时，禁止出现灰色区域-->\n<meta name=\"msapplication-tap-highlight\" content=\"no\" />\n<meta name=\"format-detection\" content=\"telephone=yes\"/>\n```\n\n# 移动web标配全身模板\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh_cmn\">\n<head>\n    <meta name=\"description\" content=\"CSS position:flex in mobile\" />\n    <meta charset=utf-8 />\n    <!--\n    Created using JS Bin\n    http://jsbin.com\n    Copyright (c) 2016 by maxzhang (http://jsbin.com/omaCOSir/53/edit)\n    Released under the MIT license: http://jsbin.mit-license.org\n    -->\n    <meta name=\"robots\" content=\"noindex\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0\" />\n    <title>CSS position:flex in mobile</title>\n    <style id=\"jsbin-css\">\n        @font-face {\n            font-family: 'Glyphicons Halflings';\n            src: url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.eot');\n            src: url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.woff') format('woff'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');\n        }\n        .glyphicon {\n            font-family: 'Glyphicons Halflings';\n            font-size: 24px;\n            font-style: normal;\n            font-weight: normal;\n            line-height: 1;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n        }\n        .glyphicon-film:before {\n            content: \"\\e009\";\n        }\n        .glyphicon-qrcode:before {\n            content: \"\\e039\";\n        }\n        .glyphicon-list:before {\n            content: \"\\e056\";\n        }\n        .glyphicon-picture:before {\n            content: \"\\e060\";\n        }\n        .glyphicon-chevron-left:before {\n            content: \"\\e079\";\n        }\n        .glyphicon-calendar:before {\n            content: \"\\e109\";\n        }\n        * {\n            margin: 0;\n            padding: 0;\n            font-size: 16px;\n        }\n        a {\n            color: #fff;\n        }\n        header,\n        footer {\n            width: 100%;\n            height: 50px;\n        }\n        header .fixed,\n        footer .fixed {\n            position: fixed;\n            left: 0;\n            width: 100%;\n            height: 50px;\n        }\n        header .fixed .wrap,\n        footer .fixed .wrap {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n        }\n        header .fixed .wrap.float h1,\n        footer .fixed .wrap.float h1 {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            font-size: 20px;\n            line-height: 50px;\n            color: #fff;\n            text-align: center;\n        }\n        header .fixed .wrap.float .glyphicon,\n        footer .fixed .wrap.float .glyphicon {\n            display: inline-block;\n            margin: 12px 10px;\n            color: #fff;\n        }\n        header .fixed .wrap.float .left-icon,\n        footer .fixed .wrap.float .left-icon {\n            float: left;\n        }\n        header .fixed .wrap.float .right-icon,\n        footer .fixed .wrap.float .right-icon {\n            float: right;\n        }\n        header .fixed .wrap.float:before,\n        footer .fixed .wrap.float:before,\n        header .fixed .wrap.float:after,\n        footer .fixed .wrap.float:after {\n            content: \" \";\n            /* 1 */\n            display: table;\n            /* 2 */\n        }\n        header .fixed .wrap.float:after,\n        footer .fixed .wrap.float:after {\n            clear: both;\n        }\n        header .fixed .wrap.flex,\n        footer .fixed .wrap.flex {\n            display: -moz-box;\n            display: -webkit-box;\n            display: -webkit-flex;\n            display: -moz-flex;\n            display: -ms-flexbox;\n            display: -ms-flex;\n            display: flex;\n        }\n        header .fixed .wrap.flex > a,\n        footer .fixed .wrap.flex > a {\n            -webkit-box-sizing: border-box;\n            -moz-box-sizing: border-box;\n            box-sizing: border-box;\n            display: block;\n            -webkit-box-flex: 1;\n            -moz-box-flex: 1;\n            -webkit-flex: 1 1 0;\n            -moz-flex: 1 1 0;\n            -ms-flex: 1 1 0;\n            flex: 1 1 0;\n            text-align: center;\n        }\n        header .fixed .wrap.flex > a .glyphicon,\n        footer .fixed .wrap.flex > a .glyphicon {\n            vertical-align: -20px;\n        }\n        header .fixed {\n            top: 0;\n            background-color: #45b97c;\n        }\n        footer .fixed {\n            bottom: 0;\n            background-color: #464547;\n        }\n        .main {\n            margin: 15px 10px;\n        }\n    </style>\n</head>\n<body>\n<header>\n    <div class=\"fixed\">\n        <div class=\"wrap float\">\n            <div class=\"left-icon\">\n                <span class=\"glyphicon glyphicon-chevron-left\"></span>\n            </div>\n            <h1>HEADER</h1>\n            <div class=\"right-icon\">\n                <span class=\"glyphicon glyphicon-calendar\"></span><span class=\"glyphicon glyphicon-list\"></span>\n            </div>\n        </div>\n    </div>\n</header>\n<div class=\"main\">\n    -------------- start --------------<br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    content <br>\n    --------------- end ---------------\n</div>\n<footer>\n    <div class=\"fixed\">\n        <div class=\"wrap flex\">\n            <a href=\"#\"><span class=\"glyphicon glyphicon-picture\"></span></a>\n            <a href=\"#\"><span class=\"glyphicon glyphicon-film\"></span></a>\n            <a href=\"#\"><span class=\"glyphicon glyphicon-qrcode\"></span></a>\n        </div>\n    </div>\n</footer>\n<script src=\"http://static.jsbin.com/js/render/edit.js?3.38.11\"></script>\n<script>jsbinShowEdit && jsbinShowEdit({\"static\":\"http://static.jsbin.com\",\"root\":\"http://jsbin.com\"});</script>\n<script>\n    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n                (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n    ga('create', 'UA-1656750-34', 'auto');\n    ga('require', 'linkid', 'linkid.js');\n    ga('require', 'displayfeatures');\n    ga('send', 'pageview');\n</script>\n</body>\n</html>\n```","slug":"HTML移动web标配头部","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0vm00086atfmhhfrxqe","content":"<h1 id=\"移动web标配html头部\"><a href=\"#移动web标配html头部\" class=\"headerlink\" title=\"移动web标配html头部\"></a>移动web标配html头部</h1><p><code>Meta</code>标签中的<code>format-detection</code>属性及含义<br>标签： <code>format-detection telephoneno meta html</code> 移动网页    分类： 移动端开发<br><code>format-detection</code>翻译成中文的意思是“格式检测”，顾名思义，它是用来检测html里的一些格式的，那关于meta的</p>\n<p>format-detection属性主要是有以下几个设置：<br><code>meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;</code><br><code>meta name=&quot;format-detection&quot; content=&quot;email=no&quot;</code><br><code>meta name=&quot;format-detection&quot; content=&quot;adress=no&quot;</code><br>也可以连写：<code>meta name=&quot;format-detection&quot; content=&quot;telephone=no,email=no,adress=no&quot;</code><br>下面具体说下每个设置的作用：</p>\n<h2 id=\"telephone\"><a href=\"#telephone\" class=\"headerlink\" title=\"telephone\"></a>telephone</h2><p>你明明写的一串数字没加链接样式，而<code>iPhone</code>会自动把你这个文字加链接样式、并且点击这个数字还会自动拨号！想去掉</p>\n<p>这个拨号链接该如何操作呢？这时我们的<code>meta</code>又该大显神通了，代码如下：<br><code>telephone=no</code>就禁止了把数字转化为拨号链接！<br><code>telephone=yes</code>就开启了把数字转化为拨号链接，要开启转化功能，这个<code>meta</code>就不用写了,在默认是情况下就是开启！</p>\n<h2 id=\"email\"><a href=\"#email\" class=\"headerlink\" title=\"email\"></a>email</h2><p>告诉设备不识别邮箱，点击之后不自动发送<br><code>email=no</code>禁止作为邮箱地址！<br><code>email=yes</code>就开启了把文字默认为邮箱地址，这个<code>meta</code>就不用写了,在默认是情况下就是开启！</p>\n<h2 id=\"adress\"><a href=\"#adress\" class=\"headerlink\" title=\"adress\"></a>adress</h2><p><code>adress=no</code>禁止跳转至地图！<br><code>adress=yes</code>就开启了点击地址直接跳转至地图的功能,在默认是情况下就是开启！</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">scale=1.0,user-scalable=no\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--删除默认的苹果工具栏和菜单栏--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span> /&gt;</span>    </span><br><span class=\"line\"><span class=\"comment\">&lt;!--控制状态栏显示样式//black-translucent灰色 //black黑色--&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"black-translucent\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--电话、邮件、地址默认格式取消--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telephone=yes,email=no,adress=yes\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--手机端点击时，禁止出现灰色区域--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"msapplication-tap-highlight\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telephone=yes\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"移动web标配全身模板\"><a href=\"#移动web标配全身模板\" class=\"headerlink\" title=\"移动web标配全身模板\"></a>移动web标配全身模板</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh_cmn\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"CSS position:flex in mobile\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">utf-8</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    Created using JS Bin</span></span><br><span class=\"line\"><span class=\"comment\">    http://jsbin.com</span></span><br><span class=\"line\"><span class=\"comment\">    Copyright (c) 2016 by maxzhang (http://jsbin.com/omaCOSir/53/edit)</span></span><br><span class=\"line\"><span class=\"comment\">    Released under the MIT license: http://jsbin.mit-license.org</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"robots\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"noindex\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS position:flex in mobile<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jsbin-css\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        @font-face &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-family: 'Glyphicons Halflings';</span></span><br><span class=\"line\"><span class=\"undefined\">            src: url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.eot');</span></span><br><span class=\"line\"><span class=\"undefined\">            src: url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.woff') format('woff'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-family: 'Glyphicons Halflings';</span></span><br><span class=\"line\"><span class=\"undefined\">            font-size: 24px;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-style: normal;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-weight: normal;</span></span><br><span class=\"line\"><span class=\"undefined\">            line-height: 1;</span></span><br><span class=\"line\"><span class=\"undefined\">            -webkit-font-smoothing: antialiased;</span></span><br><span class=\"line\"><span class=\"undefined\">            -moz-osx-font-smoothing: grayscale;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-film:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e009\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-qrcode:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e039\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-list:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e056\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-picture:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e060\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-chevron-left:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e079\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-calendar:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e109\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        * &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            padding: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-size: 16px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        a &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            color: #fff;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">            height: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            position: fixed;</span></span><br><span class=\"line\"><span class=\"undefined\">            left: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">            height: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">            top: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            left: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">            height: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float h1,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float h1 &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">            top: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            left: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-size: 20px;</span></span><br><span class=\"line\"><span class=\"undefined\">            line-height: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">            color: #fff;</span></span><br><span class=\"line\"><span class=\"undefined\">            text-align: center;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float .glyphicon,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float .glyphicon &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: inline-block;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin: 12px 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">            color: #fff;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float .left-icon,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float .left-icon &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            float: left;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float .right-icon,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float .right-icon &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            float: right;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float:before,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float:before,</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float:after,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float:after &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \" \";</span></span><br><span class=\"line\"><span class=\"undefined\">            /* 1 */</span></span><br><span class=\"line\"><span class=\"undefined\">            display: table;</span></span><br><span class=\"line\"><span class=\"undefined\">            /* 2 */</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float:after,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float:after &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            clear: both;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.flex,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.flex &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -moz-box;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -webkit-box;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -webkit-flex;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -moz-flex;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -ms-flexbox;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -ms-flex;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.flex &gt; a,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.flex &gt; a &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            -webkit-box-sizing: border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">            -moz-box-sizing: border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">            box-sizing: border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: block;</span></span><br><span class=\"line\"><span class=\"undefined\">            -webkit-box-flex: 1;</span></span><br><span class=\"line\"><span class=\"undefined\">            -moz-box-flex: 1;</span></span><br><span class=\"line\"><span class=\"undefined\">            -webkit-flex: 1 1 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            -moz-flex: 1 1 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            -ms-flex: 1 1 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            flex: 1 1 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            text-align: center;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.flex &gt; a .glyphicon,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.flex &gt; a .glyphicon &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            vertical-align: -20px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            top: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: #45b97c;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            bottom: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: #464547;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .main &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin: 15px 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fixed\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap float\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left-icon\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-chevron-left\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>HEADER<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right-icon\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-calendar\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"main\"</span>&gt;</span></span><br><span class=\"line\">    -------------- start --------------<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    --------------- end ---------------</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fixed\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap flex\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-picture\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-film\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-qrcode\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://static.jsbin.com/js/render/edit.js?3.38.11\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">jsbinShowEdit &amp;&amp; jsbinShowEdit(&#123;\"static\":\"http://static.jsbin.com\",\"root\":\"http://jsbin.com\"&#125;);</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    (function(i,s,o,g,r,a,m)&#123;i['GoogleAnalyticsObject']=r;i[r]=i[r]||function()&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">                (i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),</span></span><br><span class=\"line\"><span class=\"undefined\">            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;)(window,document,'script','https://www.google-analytics.com/analytics.js','ga');</span></span><br><span class=\"line\"><span class=\"undefined\">    ga('create', 'UA-1656750-34', 'auto');</span></span><br><span class=\"line\"><span class=\"undefined\">    ga('require', 'linkid', 'linkid.js');</span></span><br><span class=\"line\"><span class=\"undefined\">    ga('require', 'displayfeatures');</span></span><br><span class=\"line\"><span class=\"undefined\">    ga('send', 'pageview');</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"移动web标配html头部\"><a href=\"#移动web标配html头部\" class=\"headerlink\" title=\"移动web标配html头部\"></a>移动web标配html头部</h1><p><code>Meta</code>标签中的<code>format-detection</code>属性及含义<br>标签： <code>format-detection telephoneno meta html</code> 移动网页    分类： 移动端开发<br><code>format-detection</code>翻译成中文的意思是“格式检测”，顾名思义，它是用来检测html里的一些格式的，那关于meta的</p>\n<p>format-detection属性主要是有以下几个设置：<br><code>meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;</code><br><code>meta name=&quot;format-detection&quot; content=&quot;email=no&quot;</code><br><code>meta name=&quot;format-detection&quot; content=&quot;adress=no&quot;</code><br>也可以连写：<code>meta name=&quot;format-detection&quot; content=&quot;telephone=no,email=no,adress=no&quot;</code><br>下面具体说下每个设置的作用：</p>\n<h2 id=\"telephone\"><a href=\"#telephone\" class=\"headerlink\" title=\"telephone\"></a>telephone</h2><p>你明明写的一串数字没加链接样式，而<code>iPhone</code>会自动把你这个文字加链接样式、并且点击这个数字还会自动拨号！想去掉</p>\n<p>这个拨号链接该如何操作呢？这时我们的<code>meta</code>又该大显神通了，代码如下：<br><code>telephone=no</code>就禁止了把数字转化为拨号链接！<br><code>telephone=yes</code>就开启了把数字转化为拨号链接，要开启转化功能，这个<code>meta</code>就不用写了,在默认是情况下就是开启！</p>\n<h2 id=\"email\"><a href=\"#email\" class=\"headerlink\" title=\"email\"></a>email</h2><p>告诉设备不识别邮箱，点击之后不自动发送<br><code>email=no</code>禁止作为邮箱地址！<br><code>email=yes</code>就开启了把文字默认为邮箱地址，这个<code>meta</code>就不用写了,在默认是情况下就是开启！</p>\n<h2 id=\"adress\"><a href=\"#adress\" class=\"headerlink\" title=\"adress\"></a>adress</h2><p><code>adress=no</code>禁止跳转至地图！<br><code>adress=yes</code>就开启了点击地址直接跳转至地图的功能,在默认是情况下就是开启！</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">scale=1.0,user-scalable=no\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--删除默认的苹果工具栏和菜单栏--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span> /&gt;</span>    </span><br><span class=\"line\"><span class=\"comment\">&lt;!--控制状态栏显示样式//black-translucent灰色 //black黑色--&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"black-translucent\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--电话、邮件、地址默认格式取消--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telephone=yes,email=no,adress=yes\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--手机端点击时，禁止出现灰色区域--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"msapplication-tap-highlight\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telephone=yes\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"移动web标配全身模板\"><a href=\"#移动web标配全身模板\" class=\"headerlink\" title=\"移动web标配全身模板\"></a>移动web标配全身模板</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh_cmn\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"CSS position:flex in mobile\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">utf-8</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    Created using JS Bin</span></span><br><span class=\"line\"><span class=\"comment\">    http://jsbin.com</span></span><br><span class=\"line\"><span class=\"comment\">    Copyright (c) 2016 by maxzhang (http://jsbin.com/omaCOSir/53/edit)</span></span><br><span class=\"line\"><span class=\"comment\">    Released under the MIT license: http://jsbin.mit-license.org</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"robots\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"noindex\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS position:flex in mobile<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jsbin-css\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        @font-face &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-family: 'Glyphicons Halflings';</span></span><br><span class=\"line\"><span class=\"undefined\">            src: url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.eot');</span></span><br><span class=\"line\"><span class=\"undefined\">            src: url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.woff') format('woff'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('http://cdn.bootcss.com/bootstrap/3.2.0/fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-family: 'Glyphicons Halflings';</span></span><br><span class=\"line\"><span class=\"undefined\">            font-size: 24px;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-style: normal;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-weight: normal;</span></span><br><span class=\"line\"><span class=\"undefined\">            line-height: 1;</span></span><br><span class=\"line\"><span class=\"undefined\">            -webkit-font-smoothing: antialiased;</span></span><br><span class=\"line\"><span class=\"undefined\">            -moz-osx-font-smoothing: grayscale;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-film:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e009\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-qrcode:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e039\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-list:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e056\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-picture:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e060\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-chevron-left:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e079\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .glyphicon-calendar:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \"\\e109\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        * &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            padding: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-size: 16px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        a &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            color: #fff;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">            height: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            position: fixed;</span></span><br><span class=\"line\"><span class=\"undefined\">            left: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">            height: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">            top: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            left: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">            height: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float h1,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float h1 &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">            top: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            left: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">            font-size: 20px;</span></span><br><span class=\"line\"><span class=\"undefined\">            line-height: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">            color: #fff;</span></span><br><span class=\"line\"><span class=\"undefined\">            text-align: center;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float .glyphicon,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float .glyphicon &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: inline-block;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin: 12px 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">            color: #fff;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float .left-icon,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float .left-icon &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            float: left;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float .right-icon,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float .right-icon &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            float: right;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float:before,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float:before,</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float:after,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float:after &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            content: \" \";</span></span><br><span class=\"line\"><span class=\"undefined\">            /* 1 */</span></span><br><span class=\"line\"><span class=\"undefined\">            display: table;</span></span><br><span class=\"line\"><span class=\"undefined\">            /* 2 */</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.float:after,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.float:after &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            clear: both;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.flex,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.flex &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -moz-box;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -webkit-box;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -webkit-flex;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -moz-flex;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -ms-flexbox;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: -ms-flex;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.flex &gt; a,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.flex &gt; a &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            -webkit-box-sizing: border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">            -moz-box-sizing: border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">            box-sizing: border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">            display: block;</span></span><br><span class=\"line\"><span class=\"undefined\">            -webkit-box-flex: 1;</span></span><br><span class=\"line\"><span class=\"undefined\">            -moz-box-flex: 1;</span></span><br><span class=\"line\"><span class=\"undefined\">            -webkit-flex: 1 1 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            -moz-flex: 1 1 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            -ms-flex: 1 1 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            flex: 1 1 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            text-align: center;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed .wrap.flex &gt; a .glyphicon,</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed .wrap.flex &gt; a .glyphicon &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            vertical-align: -20px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        header .fixed &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            top: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: #45b97c;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        footer .fixed &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            bottom: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: #464547;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .main &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin: 15px 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fixed\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap float\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left-icon\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-chevron-left\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>HEADER<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right-icon\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-calendar\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"main\"</span>&gt;</span></span><br><span class=\"line\">    -------------- start --------------<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    content <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    --------------- end ---------------</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fixed\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap flex\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-picture\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-film\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"glyphicon glyphicon-qrcode\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://static.jsbin.com/js/render/edit.js?3.38.11\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">jsbinShowEdit &amp;&amp; jsbinShowEdit(&#123;\"static\":\"http://static.jsbin.com\",\"root\":\"http://jsbin.com\"&#125;);</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    (function(i,s,o,g,r,a,m)&#123;i['GoogleAnalyticsObject']=r;i[r]=i[r]||function()&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">                (i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),</span></span><br><span class=\"line\"><span class=\"undefined\">            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;)(window,document,'script','https://www.google-analytics.com/analytics.js','ga');</span></span><br><span class=\"line\"><span class=\"undefined\">    ga('create', 'UA-1656750-34', 'auto');</span></span><br><span class=\"line\"><span class=\"undefined\">    ga('require', 'linkid', 'linkid.js');</span></span><br><span class=\"line\"><span class=\"undefined\">    ga('require', 'displayfeatures');</span></span><br><span class=\"line\"><span class=\"undefined\">    ga('send', 'pageview');</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"自适应网页设计的核心","keywords":"自适应网页 HTML","date":"2016-04-19T16:00:00.000Z","_content":"\"自适应网页设计\"的核心，就是CSS3引入的Media Query模块。\n它的意思就是，自动探测屏幕宽度，然后加载相应的CSS文件。\n\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and max-device-width:400px)\" href=\"tinyScreen.css\" />\n<!-- more-->\n上面的代码意思是，如果屏幕宽度小于400像素（max-device-width: 400px），就加载tinyScreen.css文件。\n\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (min-width: 400px) and (max-device-width: 600px)\" href=\"smallScreen.css\" />\n如果屏幕宽度在400像素到600像素之间，则加载smallScreen.css文件。\n除了用html标签加载CSS文件，还可以在现有CSS文件中加载。\n\n    @import url(\"tinyScreen.css\") screen and (max-device-width: 400px);\n最后给个自定义标准head作为参考：\n\n```html\n<head>\n    <meta charset=\"UTF-8\">\n    <!--如果安装了GCF，则使用GCF来渲染页面，如果未安装GCF，则使用最高版本的IE内核进行渲染-->\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <!--视图默认比例，用户不可缩放视图设置-->\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0, minimum-scale=1.0,user-scalable=no\">\n    <!--删除默认的苹果工具栏和菜单栏-->\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"/>\n    <!--控制状态栏显示样式-->\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"/>\n    <!--电话、邮件、地址默认格式取消-->\n    <meta name=\"format-detection\" content=\"telephone=no,email=no,adress=no\"/>\n    <!--手机端点击时，禁止出现灰色区域-->\n    <meta name=\"msapplication-tap-highlight\" content=\"no\"/>\n    <title>web移动端标准head参考</title>\n    <!--自动探测屏幕宽度，然后加载相应的CSS文件-->\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (max-device-width: 375px)\" href=\"../css/screen-css/tinyScreen.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (min-width: 375px) and (max-device-width: 414px)\" href=\"../css/screen-css/smallScreen.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (min-width: 414px) and (max-device-width: 500px)\" href=\"../css/screen-css/middleScreen.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (min-width: 500px) and (max-device-width: 600px)\" href=\"../css/screen-css/biggerScreen.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (min-width: 600px)\" href=\"../css/screen-css/hugeScreen.css\" />\n    <!--公共样式-->\n    <link rel=\"stylesheet\" href=\"../css/public-css/public.css\">\n    <!--字体图标样式-->\n    <link rel=\"stylesheet\" href=\"../css/font-icon-css/font-icon.css\">\n    <!--头部与底部样式-->\n    <link rel=\"stylesheet\" href=\"../css/fixed-header-footer-css/fixed-header-footer.css\">\n</head>\n```\n\n\n","source":"_posts/HTML自适应网页设计的核心.md","raw":"---\ntitle: 自适应网页设计的核心\nkeywords: 自适应网页 HTML\ntags: \n- 自适应\n- HTML\ncategories: skill\ndate: 2016-04-20\n---\n\"自适应网页设计\"的核心，就是CSS3引入的Media Query模块。\n它的意思就是，自动探测屏幕宽度，然后加载相应的CSS文件。\n\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and max-device-width:400px)\" href=\"tinyScreen.css\" />\n<!-- more-->\n上面的代码意思是，如果屏幕宽度小于400像素（max-device-width: 400px），就加载tinyScreen.css文件。\n\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (min-width: 400px) and (max-device-width: 600px)\" href=\"smallScreen.css\" />\n如果屏幕宽度在400像素到600像素之间，则加载smallScreen.css文件。\n除了用html标签加载CSS文件，还可以在现有CSS文件中加载。\n\n    @import url(\"tinyScreen.css\") screen and (max-device-width: 400px);\n最后给个自定义标准head作为参考：\n\n```html\n<head>\n    <meta charset=\"UTF-8\">\n    <!--如果安装了GCF，则使用GCF来渲染页面，如果未安装GCF，则使用最高版本的IE内核进行渲染-->\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <!--视图默认比例，用户不可缩放视图设置-->\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0, minimum-scale=1.0,user-scalable=no\">\n    <!--删除默认的苹果工具栏和菜单栏-->\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"/>\n    <!--控制状态栏显示样式-->\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"/>\n    <!--电话、邮件、地址默认格式取消-->\n    <meta name=\"format-detection\" content=\"telephone=no,email=no,adress=no\"/>\n    <!--手机端点击时，禁止出现灰色区域-->\n    <meta name=\"msapplication-tap-highlight\" content=\"no\"/>\n    <title>web移动端标准head参考</title>\n    <!--自动探测屏幕宽度，然后加载相应的CSS文件-->\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (max-device-width: 375px)\" href=\"../css/screen-css/tinyScreen.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (min-width: 375px) and (max-device-width: 414px)\" href=\"../css/screen-css/smallScreen.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (min-width: 414px) and (max-device-width: 500px)\" href=\"../css/screen-css/middleScreen.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (min-width: 500px) and (max-device-width: 600px)\" href=\"../css/screen-css/biggerScreen.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"screen and (min-width: 600px)\" href=\"../css/screen-css/hugeScreen.css\" />\n    <!--公共样式-->\n    <link rel=\"stylesheet\" href=\"../css/public-css/public.css\">\n    <!--字体图标样式-->\n    <link rel=\"stylesheet\" href=\"../css/font-icon-css/font-icon.css\">\n    <!--头部与底部样式-->\n    <link rel=\"stylesheet\" href=\"../css/fixed-header-footer-css/fixed-header-footer.css\">\n</head>\n```\n\n\n","slug":"HTML自适应网页设计的核心","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0vo000a6atf5qyp2uab","content":"<p>“自适应网页设计”的核心，就是CSS3引入的Media Query模块。<br>它的意思就是，自动探测屏幕宽度，然后加载相应的CSS文件。</p>\n<pre><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;screen and max-device-width:400px)&quot; href=&quot;tinyScreen.css&quot; /&gt;\n</code></pre><a id=\"more\"></a>\n<p>上面的代码意思是，如果屏幕宽度小于400像素（max-device-width: 400px），就加载tinyScreen.css文件。</p>\n<pre><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;screen and (min-width: 400px) and (max-device-width: 600px)&quot; href=&quot;smallScreen.css&quot; /&gt;\n</code></pre><p>如果屏幕宽度在400像素到600像素之间，则加载smallScreen.css文件。<br>除了用html标签加载CSS文件，还可以在现有CSS文件中加载。</p>\n<pre><code>@import url(&quot;tinyScreen.css&quot;) screen and (max-device-width: 400px);\n</code></pre><p>最后给个自定义标准head作为参考：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--如果安装了GCF，则使用GCF来渲染页面，如果未安装GCF，则使用最高版本的IE内核进行渲染--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--视图默认比例，用户不可缩放视图设置--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1.0,maximum-scale=1.0, minimum-scale=1.0,user-scalable=no\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--删除默认的苹果工具栏和菜单栏--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--控制状态栏显示样式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"black\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--电话、邮件、地址默认格式取消--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telephone=no,email=no,adress=no\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--手机端点击时，禁止出现灰色区域--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"msapplication-tap-highlight\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>web移动端标准head参考<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--自动探测屏幕宽度，然后加载相应的CSS文件--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen and (max-device-width: 375px)\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/screen-css/tinyScreen.css\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen and (min-width: 375px) and (max-device-width: 414px)\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/screen-css/smallScreen.css\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen and (min-width: 414px) and (max-device-width: 500px)\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/screen-css/middleScreen.css\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen and (min-width: 500px) and (max-device-width: 600px)\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/screen-css/biggerScreen.css\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen and (min-width: 600px)\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/screen-css/hugeScreen.css\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--公共样式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/public-css/public.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--字体图标样式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/font-icon-css/font-icon.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--头部与底部样式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/fixed-header-footer-css/fixed-header-footer.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>“自适应网页设计”的核心，就是CSS3引入的Media Query模块。<br>它的意思就是，自动探测屏幕宽度，然后加载相应的CSS文件。</p>\n<pre><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;screen and max-device-width:400px)&quot; href=&quot;tinyScreen.css&quot; /&gt;\n</code></pre>","more":"<p>上面的代码意思是，如果屏幕宽度小于400像素（max-device-width: 400px），就加载tinyScreen.css文件。</p>\n<pre><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;screen and (min-width: 400px) and (max-device-width: 600px)&quot; href=&quot;smallScreen.css&quot; /&gt;\n</code></pre><p>如果屏幕宽度在400像素到600像素之间，则加载smallScreen.css文件。<br>除了用html标签加载CSS文件，还可以在现有CSS文件中加载。</p>\n<pre><code>@import url(&quot;tinyScreen.css&quot;) screen and (max-device-width: 400px);\n</code></pre><p>最后给个自定义标准head作为参考：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--如果安装了GCF，则使用GCF来渲染页面，如果未安装GCF，则使用最高版本的IE内核进行渲染--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--视图默认比例，用户不可缩放视图设置--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1.0,maximum-scale=1.0, minimum-scale=1.0,user-scalable=no\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--删除默认的苹果工具栏和菜单栏--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--控制状态栏显示样式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"black\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--电话、邮件、地址默认格式取消--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telephone=no,email=no,adress=no\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--手机端点击时，禁止出现灰色区域--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"msapplication-tap-highlight\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>web移动端标准head参考<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--自动探测屏幕宽度，然后加载相应的CSS文件--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen and (max-device-width: 375px)\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/screen-css/tinyScreen.css\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen and (min-width: 375px) and (max-device-width: 414px)\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/screen-css/smallScreen.css\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen and (min-width: 414px) and (max-device-width: 500px)\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/screen-css/middleScreen.css\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen and (min-width: 500px) and (max-device-width: 600px)\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/screen-css/biggerScreen.css\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"screen and (min-width: 600px)\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/screen-css/hugeScreen.css\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--公共样式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/public-css/public.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--字体图标样式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/font-icon-css/font-icon.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--头部与底部样式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"../css/fixed-header-footer-css/fixed-header-footer.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"Hexo主题运行笔记","keywords":"Hexo主题 运行笔记","date":"2016-03-19T16:00:00.000Z","_content":"\n# clean\n\n      $ hexo clean\n\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。\n\n      $ hexo g\n\n建工程项目\n\n      $ hexo d\n\n上传github\n\n      $ hexo s\n运行\n","source":"_posts/Hexo运行方法.md","raw":"---\ntitle: Hexo主题运行笔记\nkeywords: Hexo主题 运行笔记\ntags: Hexo\ncategories: skill\ndate: 2016-03-20\n---\n\n# clean\n\n      $ hexo clean\n\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。\n\n      $ hexo g\n\n建工程项目\n\n      $ hexo d\n\n上传github\n\n      $ hexo s\n运行\n","slug":"Hexo运行方法","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0vu000f6atfcuh302lf","content":"<h1 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h1><pre><code>$ hexo clean\n</code></pre><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>\n<pre><code>$ hexo g\n</code></pre><p>建工程项目</p>\n<pre><code>$ hexo d\n</code></pre><p>上传github</p>\n<pre><code>$ hexo s\n</code></pre><p>运行</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h1><pre><code>$ hexo clean\n</code></pre><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>\n<pre><code>$ hexo g\n</code></pre><p>建工程项目</p>\n<pre><code>$ hexo d\n</code></pre><p>上传github</p>\n<pre><code>$ hexo s\n</code></pre><p>运行</p>\n"},{"title":"JavaScript参考手册","date":"2017-06-19T16:00:00.000Z","_content":"\n本部分提供完整的 `JavaScript` 参考手册：\n\n* `JavaScript` 本地对象和内置对象\n* `Browser` 对象（`BOM`）\n* `HTML` `DOM`对象\n\n# JavaScript 对象参考手册\n\n本参考手册描述每个对象的属性和方法，并提供实例。\n\n## Array 对象\n\n**Array 对象** \n\n`Array` 对象用于在单个的变量中存储多个值。\n\n**Array 对象创建的语法**\n\n```js\nnew Array();\nnew Array(size);\nnew Array(element0,element1,...,elementn);\n```\n\n**Array 参数**\n\n参数`size` 是期望的数组个数。返回的数组，`length`字段将被设为`size`的值。\n\n参数`element0,...,elementn`是参数列表。当使用这些参数来调用构造函数`Array()`时\n，新创建的数组的元素就会被初始化为这些值。它的`length`字段也会被设置为参数的个数。\n\n**Array 返回值**\n\n返回新创建并被初始化了的数组\n\n如果调用构造函数`Array()`时没有使用参数，那么返回的数组为空，`length`字段为 0 。\n\n当调用构造函数时只传递给它一个数字参数，该构造函数将返回具有指定个数、元素为`undefined`的数组。\n\n当其他参数调用`Array()`时，该构造函数将用参数指定的值初始化数组。\n\n当把构造函数作为函数调用，不使用 `new` 运算符时，它的行为与使用`new`运算符调用它时的行为完全一样。\n\n**Array 对象属性**\n\n* constructor &nbsp;返回对创建此对象的数组函数的引用。\n* length &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设置或返回数组中元素的数目。\n* prototye &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使您有能力对对象添加属性的方法。\n\n**Array 对象方法**\n\n* concat() 链接两个或更多的数组，并返回结果。\n* join() 把数组的所有元素放入一个字符串。元素通过指定的分格符进行分隔。\n* pop() 删除并返回数组的最后一个元素。\n* push() 向数组的末尾添加一个或更多元素，并返回新的长度。\n* reverse() 颠倒数组中元素的顺序。\n* shift() 删除并返回数组的第一个元素。\n* slice() 从某个已有的数组返回选定的元素\n* sort() 对数组的元素进行排序\n\n## Boolean\n\n## Date\n\n## Math\n\n## Number\n\n## String\n\n## RegExp\n\n## Global\n\n# Browser 对象参考手册\n\n本参考手册描述每个对象的属性和方法，并提供实例。\n\n## Window\n\n## Navigator\n\n## Screen\n\n## History\n\n## Location\n\n# HTML DOM 对象参考手册\n\n本参考手册描述每个对象的属性和方法，并提供实例。\n\n## Document\n\n## Anchor\n\n## Area\n\n## Base \n\n## Body \n\n## Button \n\n## Canvas \n\n## Event\n\n## Form\n\n## Frame \n\n## Frameset \n\n## IFrame\n\n## Image\n\n## Input Button \n\n## Input Checkbox\n\n## Input File \n\n## Input Hidden\n\n## Input Password\n\n## Input Radio\n\n## Input Reset\n\n## Input Submit\n\n## Input Text \n\n## Link\n\n## Meta\n\n## Object \n\n## Option \n\n## Select \n\n## Style \n\n## Table \n\n## TableCell\n\n## TableRow\n\n## Textarea \n\n# 相关页面\n\n如果更多有关 `JavaScript` 对象的知识，请阅读 `Javascript` 高级教程的相关内容：\n\n## 面向对象技术\n\n## 对象应用\n\n## 对象类型\n\n## 对象作用域\n\n## 定义类或对象\n\n## 修改对象\n\n","source":"_posts/JavaScript参考手册.md","raw":"---\ntitle: JavaScript参考手册\ntags: js\ncategories: tool\ndate: 2017-06-20\n---\n\n本部分提供完整的 `JavaScript` 参考手册：\n\n* `JavaScript` 本地对象和内置对象\n* `Browser` 对象（`BOM`）\n* `HTML` `DOM`对象\n\n# JavaScript 对象参考手册\n\n本参考手册描述每个对象的属性和方法，并提供实例。\n\n## Array 对象\n\n**Array 对象** \n\n`Array` 对象用于在单个的变量中存储多个值。\n\n**Array 对象创建的语法**\n\n```js\nnew Array();\nnew Array(size);\nnew Array(element0,element1,...,elementn);\n```\n\n**Array 参数**\n\n参数`size` 是期望的数组个数。返回的数组，`length`字段将被设为`size`的值。\n\n参数`element0,...,elementn`是参数列表。当使用这些参数来调用构造函数`Array()`时\n，新创建的数组的元素就会被初始化为这些值。它的`length`字段也会被设置为参数的个数。\n\n**Array 返回值**\n\n返回新创建并被初始化了的数组\n\n如果调用构造函数`Array()`时没有使用参数，那么返回的数组为空，`length`字段为 0 。\n\n当调用构造函数时只传递给它一个数字参数，该构造函数将返回具有指定个数、元素为`undefined`的数组。\n\n当其他参数调用`Array()`时，该构造函数将用参数指定的值初始化数组。\n\n当把构造函数作为函数调用，不使用 `new` 运算符时，它的行为与使用`new`运算符调用它时的行为完全一样。\n\n**Array 对象属性**\n\n* constructor &nbsp;返回对创建此对象的数组函数的引用。\n* length &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设置或返回数组中元素的数目。\n* prototye &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使您有能力对对象添加属性的方法。\n\n**Array 对象方法**\n\n* concat() 链接两个或更多的数组，并返回结果。\n* join() 把数组的所有元素放入一个字符串。元素通过指定的分格符进行分隔。\n* pop() 删除并返回数组的最后一个元素。\n* push() 向数组的末尾添加一个或更多元素，并返回新的长度。\n* reverse() 颠倒数组中元素的顺序。\n* shift() 删除并返回数组的第一个元素。\n* slice() 从某个已有的数组返回选定的元素\n* sort() 对数组的元素进行排序\n\n## Boolean\n\n## Date\n\n## Math\n\n## Number\n\n## String\n\n## RegExp\n\n## Global\n\n# Browser 对象参考手册\n\n本参考手册描述每个对象的属性和方法，并提供实例。\n\n## Window\n\n## Navigator\n\n## Screen\n\n## History\n\n## Location\n\n# HTML DOM 对象参考手册\n\n本参考手册描述每个对象的属性和方法，并提供实例。\n\n## Document\n\n## Anchor\n\n## Area\n\n## Base \n\n## Body \n\n## Button \n\n## Canvas \n\n## Event\n\n## Form\n\n## Frame \n\n## Frameset \n\n## IFrame\n\n## Image\n\n## Input Button \n\n## Input Checkbox\n\n## Input File \n\n## Input Hidden\n\n## Input Password\n\n## Input Radio\n\n## Input Reset\n\n## Input Submit\n\n## Input Text \n\n## Link\n\n## Meta\n\n## Object \n\n## Option \n\n## Select \n\n## Style \n\n## Table \n\n## TableCell\n\n## TableRow\n\n## Textarea \n\n# 相关页面\n\n如果更多有关 `JavaScript` 对象的知识，请阅读 `Javascript` 高级教程的相关内容：\n\n## 面向对象技术\n\n## 对象应用\n\n## 对象类型\n\n## 对象作用域\n\n## 定义类或对象\n\n## 修改对象\n\n","slug":"JavaScript参考手册","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0vy000h6atfmg7xbvaj","content":"<p>本部分提供完整的 <code>JavaScript</code> 参考手册：</p>\n<ul>\n<li><code>JavaScript</code> 本地对象和内置对象</li>\n<li><code>Browser</code> 对象（<code>BOM</code>）</li>\n<li><code>HTML</code> <code>DOM</code>对象</li>\n</ul>\n<h1 id=\"JavaScript-对象参考手册\"><a href=\"#JavaScript-对象参考手册\" class=\"headerlink\" title=\"JavaScript 对象参考手册\"></a>JavaScript 对象参考手册</h1><p>本参考手册描述每个对象的属性和方法，并提供实例。</p>\n<h2 id=\"Array-对象\"><a href=\"#Array-对象\" class=\"headerlink\" title=\"Array 对象\"></a>Array 对象</h2><p><strong>Array 对象</strong> </p>\n<p><code>Array</code> 对象用于在单个的变量中存储多个值。</p>\n<p><strong>Array 对象创建的语法</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(size);</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(element0,element1,...,elementn);</span><br></pre></td></tr></table></figure>\n<p><strong>Array 参数</strong></p>\n<p>参数<code>size</code> 是期望的数组个数。返回的数组，<code>length</code>字段将被设为<code>size</code>的值。</p>\n<p>参数<code>element0,...,elementn</code>是参数列表。当使用这些参数来调用构造函数<code>Array()</code>时<br>，新创建的数组的元素就会被初始化为这些值。它的<code>length</code>字段也会被设置为参数的个数。</p>\n<p><strong>Array 返回值</strong></p>\n<p>返回新创建并被初始化了的数组</p>\n<p>如果调用构造函数<code>Array()</code>时没有使用参数，那么返回的数组为空，<code>length</code>字段为 0 。</p>\n<p>当调用构造函数时只传递给它一个数字参数，该构造函数将返回具有指定个数、元素为<code>undefined</code>的数组。</p>\n<p>当其他参数调用<code>Array()</code>时，该构造函数将用参数指定的值初始化数组。</p>\n<p>当把构造函数作为函数调用，不使用 <code>new</code> 运算符时，它的行为与使用<code>new</code>运算符调用它时的行为完全一样。</p>\n<p><strong>Array 对象属性</strong></p>\n<ul>\n<li>constructor &nbsp;返回对创建此对象的数组函数的引用。</li>\n<li>length &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设置或返回数组中元素的数目。</li>\n<li>prototye &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使您有能力对对象添加属性的方法。</li>\n</ul>\n<p><strong>Array 对象方法</strong></p>\n<ul>\n<li>concat() 链接两个或更多的数组，并返回结果。</li>\n<li>join() 把数组的所有元素放入一个字符串。元素通过指定的分格符进行分隔。</li>\n<li>pop() 删除并返回数组的最后一个元素。</li>\n<li>push() 向数组的末尾添加一个或更多元素，并返回新的长度。</li>\n<li>reverse() 颠倒数组中元素的顺序。</li>\n<li>shift() 删除并返回数组的第一个元素。</li>\n<li>slice() 从某个已有的数组返回选定的元素</li>\n<li>sort() 对数组的元素进行排序</li>\n</ul>\n<h2 id=\"Boolean\"><a href=\"#Boolean\" class=\"headerlink\" title=\"Boolean\"></a>Boolean</h2><h2 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h2><h2 id=\"Math\"><a href=\"#Math\" class=\"headerlink\" title=\"Math\"></a>Math</h2><h2 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h2><h2 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h2><h2 id=\"RegExp\"><a href=\"#RegExp\" class=\"headerlink\" title=\"RegExp\"></a>RegExp</h2><h2 id=\"Global\"><a href=\"#Global\" class=\"headerlink\" title=\"Global\"></a>Global</h2><h1 id=\"Browser-对象参考手册\"><a href=\"#Browser-对象参考手册\" class=\"headerlink\" title=\"Browser 对象参考手册\"></a>Browser 对象参考手册</h1><p>本参考手册描述每个对象的属性和方法，并提供实例。</p>\n<h2 id=\"Window\"><a href=\"#Window\" class=\"headerlink\" title=\"Window\"></a>Window</h2><h2 id=\"Navigator\"><a href=\"#Navigator\" class=\"headerlink\" title=\"Navigator\"></a>Navigator</h2><h2 id=\"Screen\"><a href=\"#Screen\" class=\"headerlink\" title=\"Screen\"></a>Screen</h2><h2 id=\"History\"><a href=\"#History\" class=\"headerlink\" title=\"History\"></a>History</h2><h2 id=\"Location\"><a href=\"#Location\" class=\"headerlink\" title=\"Location\"></a>Location</h2><h1 id=\"HTML-DOM-对象参考手册\"><a href=\"#HTML-DOM-对象参考手册\" class=\"headerlink\" title=\"HTML DOM 对象参考手册\"></a>HTML DOM 对象参考手册</h1><p>本参考手册描述每个对象的属性和方法，并提供实例。</p>\n<h2 id=\"Document\"><a href=\"#Document\" class=\"headerlink\" title=\"Document\"></a>Document</h2><h2 id=\"Anchor\"><a href=\"#Anchor\" class=\"headerlink\" title=\"Anchor\"></a>Anchor</h2><h2 id=\"Area\"><a href=\"#Area\" class=\"headerlink\" title=\"Area\"></a>Area</h2><h2 id=\"Base\"><a href=\"#Base\" class=\"headerlink\" title=\"Base\"></a>Base</h2><h2 id=\"Body\"><a href=\"#Body\" class=\"headerlink\" title=\"Body\"></a>Body</h2><h2 id=\"Button\"><a href=\"#Button\" class=\"headerlink\" title=\"Button\"></a>Button</h2><h2 id=\"Canvas\"><a href=\"#Canvas\" class=\"headerlink\" title=\"Canvas\"></a>Canvas</h2><h2 id=\"Event\"><a href=\"#Event\" class=\"headerlink\" title=\"Event\"></a>Event</h2><h2 id=\"Form\"><a href=\"#Form\" class=\"headerlink\" title=\"Form\"></a>Form</h2><h2 id=\"Frame\"><a href=\"#Frame\" class=\"headerlink\" title=\"Frame\"></a>Frame</h2><h2 id=\"Frameset\"><a href=\"#Frameset\" class=\"headerlink\" title=\"Frameset\"></a>Frameset</h2><h2 id=\"IFrame\"><a href=\"#IFrame\" class=\"headerlink\" title=\"IFrame\"></a>IFrame</h2><h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><h2 id=\"Input-Button\"><a href=\"#Input-Button\" class=\"headerlink\" title=\"Input Button\"></a>Input Button</h2><h2 id=\"Input-Checkbox\"><a href=\"#Input-Checkbox\" class=\"headerlink\" title=\"Input Checkbox\"></a>Input Checkbox</h2><h2 id=\"Input-File\"><a href=\"#Input-File\" class=\"headerlink\" title=\"Input File\"></a>Input File</h2><h2 id=\"Input-Hidden\"><a href=\"#Input-Hidden\" class=\"headerlink\" title=\"Input Hidden\"></a>Input Hidden</h2><h2 id=\"Input-Password\"><a href=\"#Input-Password\" class=\"headerlink\" title=\"Input Password\"></a>Input Password</h2><h2 id=\"Input-Radio\"><a href=\"#Input-Radio\" class=\"headerlink\" title=\"Input Radio\"></a>Input Radio</h2><h2 id=\"Input-Reset\"><a href=\"#Input-Reset\" class=\"headerlink\" title=\"Input Reset\"></a>Input Reset</h2><h2 id=\"Input-Submit\"><a href=\"#Input-Submit\" class=\"headerlink\" title=\"Input Submit\"></a>Input Submit</h2><h2 id=\"Input-Text\"><a href=\"#Input-Text\" class=\"headerlink\" title=\"Input Text\"></a>Input Text</h2><h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><h2 id=\"Meta\"><a href=\"#Meta\" class=\"headerlink\" title=\"Meta\"></a>Meta</h2><h2 id=\"Object\"><a href=\"#Object\" class=\"headerlink\" title=\"Object\"></a>Object</h2><h2 id=\"Option\"><a href=\"#Option\" class=\"headerlink\" title=\"Option\"></a>Option</h2><h2 id=\"Select\"><a href=\"#Select\" class=\"headerlink\" title=\"Select\"></a>Select</h2><h2 id=\"Style\"><a href=\"#Style\" class=\"headerlink\" title=\"Style\"></a>Style</h2><h2 id=\"Table\"><a href=\"#Table\" class=\"headerlink\" title=\"Table\"></a>Table</h2><h2 id=\"TableCell\"><a href=\"#TableCell\" class=\"headerlink\" title=\"TableCell\"></a>TableCell</h2><h2 id=\"TableRow\"><a href=\"#TableRow\" class=\"headerlink\" title=\"TableRow\"></a>TableRow</h2><h2 id=\"Textarea\"><a href=\"#Textarea\" class=\"headerlink\" title=\"Textarea\"></a>Textarea</h2><h1 id=\"相关页面\"><a href=\"#相关页面\" class=\"headerlink\" title=\"相关页面\"></a>相关页面</h1><p>如果更多有关 <code>JavaScript</code> 对象的知识，请阅读 <code>Javascript</code> 高级教程的相关内容：</p>\n<h2 id=\"面向对象技术\"><a href=\"#面向对象技术\" class=\"headerlink\" title=\"面向对象技术\"></a>面向对象技术</h2><h2 id=\"对象应用\"><a href=\"#对象应用\" class=\"headerlink\" title=\"对象应用\"></a>对象应用</h2><h2 id=\"对象类型\"><a href=\"#对象类型\" class=\"headerlink\" title=\"对象类型\"></a>对象类型</h2><h2 id=\"对象作用域\"><a href=\"#对象作用域\" class=\"headerlink\" title=\"对象作用域\"></a>对象作用域</h2><h2 id=\"定义类或对象\"><a href=\"#定义类或对象\" class=\"headerlink\" title=\"定义类或对象\"></a>定义类或对象</h2><h2 id=\"修改对象\"><a href=\"#修改对象\" class=\"headerlink\" title=\"修改对象\"></a>修改对象</h2>","site":{"data":{}},"excerpt":"","more":"<p>本部分提供完整的 <code>JavaScript</code> 参考手册：</p>\n<ul>\n<li><code>JavaScript</code> 本地对象和内置对象</li>\n<li><code>Browser</code> 对象（<code>BOM</code>）</li>\n<li><code>HTML</code> <code>DOM</code>对象</li>\n</ul>\n<h1 id=\"JavaScript-对象参考手册\"><a href=\"#JavaScript-对象参考手册\" class=\"headerlink\" title=\"JavaScript 对象参考手册\"></a>JavaScript 对象参考手册</h1><p>本参考手册描述每个对象的属性和方法，并提供实例。</p>\n<h2 id=\"Array-对象\"><a href=\"#Array-对象\" class=\"headerlink\" title=\"Array 对象\"></a>Array 对象</h2><p><strong>Array 对象</strong> </p>\n<p><code>Array</code> 对象用于在单个的变量中存储多个值。</p>\n<p><strong>Array 对象创建的语法</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(size);</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(element0,element1,...,elementn);</span><br></pre></td></tr></table></figure>\n<p><strong>Array 参数</strong></p>\n<p>参数<code>size</code> 是期望的数组个数。返回的数组，<code>length</code>字段将被设为<code>size</code>的值。</p>\n<p>参数<code>element0,...,elementn</code>是参数列表。当使用这些参数来调用构造函数<code>Array()</code>时<br>，新创建的数组的元素就会被初始化为这些值。它的<code>length</code>字段也会被设置为参数的个数。</p>\n<p><strong>Array 返回值</strong></p>\n<p>返回新创建并被初始化了的数组</p>\n<p>如果调用构造函数<code>Array()</code>时没有使用参数，那么返回的数组为空，<code>length</code>字段为 0 。</p>\n<p>当调用构造函数时只传递给它一个数字参数，该构造函数将返回具有指定个数、元素为<code>undefined</code>的数组。</p>\n<p>当其他参数调用<code>Array()</code>时，该构造函数将用参数指定的值初始化数组。</p>\n<p>当把构造函数作为函数调用，不使用 <code>new</code> 运算符时，它的行为与使用<code>new</code>运算符调用它时的行为完全一样。</p>\n<p><strong>Array 对象属性</strong></p>\n<ul>\n<li>constructor &nbsp;返回对创建此对象的数组函数的引用。</li>\n<li>length &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设置或返回数组中元素的数目。</li>\n<li>prototye &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使您有能力对对象添加属性的方法。</li>\n</ul>\n<p><strong>Array 对象方法</strong></p>\n<ul>\n<li>concat() 链接两个或更多的数组，并返回结果。</li>\n<li>join() 把数组的所有元素放入一个字符串。元素通过指定的分格符进行分隔。</li>\n<li>pop() 删除并返回数组的最后一个元素。</li>\n<li>push() 向数组的末尾添加一个或更多元素，并返回新的长度。</li>\n<li>reverse() 颠倒数组中元素的顺序。</li>\n<li>shift() 删除并返回数组的第一个元素。</li>\n<li>slice() 从某个已有的数组返回选定的元素</li>\n<li>sort() 对数组的元素进行排序</li>\n</ul>\n<h2 id=\"Boolean\"><a href=\"#Boolean\" class=\"headerlink\" title=\"Boolean\"></a>Boolean</h2><h2 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h2><h2 id=\"Math\"><a href=\"#Math\" class=\"headerlink\" title=\"Math\"></a>Math</h2><h2 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h2><h2 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h2><h2 id=\"RegExp\"><a href=\"#RegExp\" class=\"headerlink\" title=\"RegExp\"></a>RegExp</h2><h2 id=\"Global\"><a href=\"#Global\" class=\"headerlink\" title=\"Global\"></a>Global</h2><h1 id=\"Browser-对象参考手册\"><a href=\"#Browser-对象参考手册\" class=\"headerlink\" title=\"Browser 对象参考手册\"></a>Browser 对象参考手册</h1><p>本参考手册描述每个对象的属性和方法，并提供实例。</p>\n<h2 id=\"Window\"><a href=\"#Window\" class=\"headerlink\" title=\"Window\"></a>Window</h2><h2 id=\"Navigator\"><a href=\"#Navigator\" class=\"headerlink\" title=\"Navigator\"></a>Navigator</h2><h2 id=\"Screen\"><a href=\"#Screen\" class=\"headerlink\" title=\"Screen\"></a>Screen</h2><h2 id=\"History\"><a href=\"#History\" class=\"headerlink\" title=\"History\"></a>History</h2><h2 id=\"Location\"><a href=\"#Location\" class=\"headerlink\" title=\"Location\"></a>Location</h2><h1 id=\"HTML-DOM-对象参考手册\"><a href=\"#HTML-DOM-对象参考手册\" class=\"headerlink\" title=\"HTML DOM 对象参考手册\"></a>HTML DOM 对象参考手册</h1><p>本参考手册描述每个对象的属性和方法，并提供实例。</p>\n<h2 id=\"Document\"><a href=\"#Document\" class=\"headerlink\" title=\"Document\"></a>Document</h2><h2 id=\"Anchor\"><a href=\"#Anchor\" class=\"headerlink\" title=\"Anchor\"></a>Anchor</h2><h2 id=\"Area\"><a href=\"#Area\" class=\"headerlink\" title=\"Area\"></a>Area</h2><h2 id=\"Base\"><a href=\"#Base\" class=\"headerlink\" title=\"Base\"></a>Base</h2><h2 id=\"Body\"><a href=\"#Body\" class=\"headerlink\" title=\"Body\"></a>Body</h2><h2 id=\"Button\"><a href=\"#Button\" class=\"headerlink\" title=\"Button\"></a>Button</h2><h2 id=\"Canvas\"><a href=\"#Canvas\" class=\"headerlink\" title=\"Canvas\"></a>Canvas</h2><h2 id=\"Event\"><a href=\"#Event\" class=\"headerlink\" title=\"Event\"></a>Event</h2><h2 id=\"Form\"><a href=\"#Form\" class=\"headerlink\" title=\"Form\"></a>Form</h2><h2 id=\"Frame\"><a href=\"#Frame\" class=\"headerlink\" title=\"Frame\"></a>Frame</h2><h2 id=\"Frameset\"><a href=\"#Frameset\" class=\"headerlink\" title=\"Frameset\"></a>Frameset</h2><h2 id=\"IFrame\"><a href=\"#IFrame\" class=\"headerlink\" title=\"IFrame\"></a>IFrame</h2><h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><h2 id=\"Input-Button\"><a href=\"#Input-Button\" class=\"headerlink\" title=\"Input Button\"></a>Input Button</h2><h2 id=\"Input-Checkbox\"><a href=\"#Input-Checkbox\" class=\"headerlink\" title=\"Input Checkbox\"></a>Input Checkbox</h2><h2 id=\"Input-File\"><a href=\"#Input-File\" class=\"headerlink\" title=\"Input File\"></a>Input File</h2><h2 id=\"Input-Hidden\"><a href=\"#Input-Hidden\" class=\"headerlink\" title=\"Input Hidden\"></a>Input Hidden</h2><h2 id=\"Input-Password\"><a href=\"#Input-Password\" class=\"headerlink\" title=\"Input Password\"></a>Input Password</h2><h2 id=\"Input-Radio\"><a href=\"#Input-Radio\" class=\"headerlink\" title=\"Input Radio\"></a>Input Radio</h2><h2 id=\"Input-Reset\"><a href=\"#Input-Reset\" class=\"headerlink\" title=\"Input Reset\"></a>Input Reset</h2><h2 id=\"Input-Submit\"><a href=\"#Input-Submit\" class=\"headerlink\" title=\"Input Submit\"></a>Input Submit</h2><h2 id=\"Input-Text\"><a href=\"#Input-Text\" class=\"headerlink\" title=\"Input Text\"></a>Input Text</h2><h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><h2 id=\"Meta\"><a href=\"#Meta\" class=\"headerlink\" title=\"Meta\"></a>Meta</h2><h2 id=\"Object\"><a href=\"#Object\" class=\"headerlink\" title=\"Object\"></a>Object</h2><h2 id=\"Option\"><a href=\"#Option\" class=\"headerlink\" title=\"Option\"></a>Option</h2><h2 id=\"Select\"><a href=\"#Select\" class=\"headerlink\" title=\"Select\"></a>Select</h2><h2 id=\"Style\"><a href=\"#Style\" class=\"headerlink\" title=\"Style\"></a>Style</h2><h2 id=\"Table\"><a href=\"#Table\" class=\"headerlink\" title=\"Table\"></a>Table</h2><h2 id=\"TableCell\"><a href=\"#TableCell\" class=\"headerlink\" title=\"TableCell\"></a>TableCell</h2><h2 id=\"TableRow\"><a href=\"#TableRow\" class=\"headerlink\" title=\"TableRow\"></a>TableRow</h2><h2 id=\"Textarea\"><a href=\"#Textarea\" class=\"headerlink\" title=\"Textarea\"></a>Textarea</h2><h1 id=\"相关页面\"><a href=\"#相关页面\" class=\"headerlink\" title=\"相关页面\"></a>相关页面</h1><p>如果更多有关 <code>JavaScript</code> 对象的知识，请阅读 <code>Javascript</code> 高级教程的相关内容：</p>\n<h2 id=\"面向对象技术\"><a href=\"#面向对象技术\" class=\"headerlink\" title=\"面向对象技术\"></a>面向对象技术</h2><h2 id=\"对象应用\"><a href=\"#对象应用\" class=\"headerlink\" title=\"对象应用\"></a>对象应用</h2><h2 id=\"对象类型\"><a href=\"#对象类型\" class=\"headerlink\" title=\"对象类型\"></a>对象类型</h2><h2 id=\"对象作用域\"><a href=\"#对象作用域\" class=\"headerlink\" title=\"对象作用域\"></a>对象作用域</h2><h2 id=\"定义类或对象\"><a href=\"#定义类或对象\" class=\"headerlink\" title=\"定义类或对象\"></a>定义类或对象</h2><h2 id=\"修改对象\"><a href=\"#修改对象\" class=\"headerlink\" title=\"修改对象\"></a>修改对象</h2>"},{"title":"关闭微信页面回到菜单页面","keywords":"微信","date":"2017-08-19T16:00:00.000Z","_content":"\n# 关闭微信页面回到菜单页面\n\n```javascript\n//关闭微信页面\nfunction weixinClosePage() {\n\tif (typeof WeixinJSBridge == \"undefined\") {\n\t\tif (document.addEventListener) {\n\t\t\tdocument.addEventListener('WeixinJSBridgeReady', weixin_ClosePage, false);\n\t\t} else if (document.attachEvent) {\n\t\t\tdocument.attachEvent('WeixinJSBridgeReady', weixin_ClosePage);\n\t\t\tdocument.attachEvent('onWeixinJSBridgeReady', weixin_ClosePage);\n\t\t}\n\t} else {\n\t\tweixin_ClosePage();\n\t}\n}\nfunction weixin_ClosePage() {\n\tWeixinJSBridge.call('closeWindow');\n}\n```","source":"_posts/Js关闭微信页面回到菜单页面.md","raw":"---\ntitle: 关闭微信页面回到菜单页面\nkeywords: 微信\ntags: \n- 微信\n- Js\ndate: 2017-08-20\n---\n\n# 关闭微信页面回到菜单页面\n\n```javascript\n//关闭微信页面\nfunction weixinClosePage() {\n\tif (typeof WeixinJSBridge == \"undefined\") {\n\t\tif (document.addEventListener) {\n\t\t\tdocument.addEventListener('WeixinJSBridgeReady', weixin_ClosePage, false);\n\t\t} else if (document.attachEvent) {\n\t\t\tdocument.attachEvent('WeixinJSBridgeReady', weixin_ClosePage);\n\t\t\tdocument.attachEvent('onWeixinJSBridgeReady', weixin_ClosePage);\n\t\t}\n\t} else {\n\t\tweixin_ClosePage();\n\t}\n}\nfunction weixin_ClosePage() {\n\tWeixinJSBridge.call('closeWindow');\n}\n```","slug":"Js关闭微信页面回到菜单页面","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0w2000m6atfn1hj0p0j","content":"<h1 id=\"关闭微信页面回到菜单页面\"><a href=\"#关闭微信页面回到菜单页面\" class=\"headerlink\" title=\"关闭微信页面回到菜单页面\"></a>关闭微信页面回到菜单页面</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//关闭微信页面</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">weixinClosePage</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> WeixinJSBridge == <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, weixin_ClosePage, <span class=\"literal\">false</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.attachEvent) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'WeixinJSBridgeReady'</span>, weixin_ClosePage);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'onWeixinJSBridgeReady'</span>, weixin_ClosePage);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tweixin_ClosePage();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">weixin_ClosePage</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\tWeixinJSBridge.call(<span class=\"string\">'closeWindow'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关闭微信页面回到菜单页面\"><a href=\"#关闭微信页面回到菜单页面\" class=\"headerlink\" title=\"关闭微信页面回到菜单页面\"></a>关闭微信页面回到菜单页面</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//关闭微信页面</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">weixinClosePage</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> WeixinJSBridge == <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, weixin_ClosePage, <span class=\"literal\">false</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.attachEvent) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'WeixinJSBridgeReady'</span>, weixin_ClosePage);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'onWeixinJSBridgeReady'</span>, weixin_ClosePage);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tweixin_ClosePage();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">weixin_ClosePage</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\tWeixinJSBridge.call(<span class=\"string\">'closeWindow'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"地图定位到当前城市","description":"引进百度地图API","keywords":"地图定位 当前城市 引进","date":"2017-01-27T16:00:00.000Z","_content":"\n首先：html  引进百度地图API\n\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=4afe44bcbcda66feb8ab579866d5d1fa\"></script>\n    <script src=\"scripts/jquery-2.1.4.js\"></script>\n\n其次：主要的 js 代码\n<!-- more -->\n\n    var currentProvince;\n    var currentCity;\n    //百度地图获取 省 市\n    function getCurrentProCity(callback) {\n        $.showLoading(\"正在加载...\");\n        var geolocation = new BMap.Geolocation();\n        var gc = new BMap.Geocoder();\n        geolocation.getCurrentPosition(function (r) {//定位结果对象会传递给r变量\n                $.hideLoading();\n                if (this.getStatus() == BMAP_STATUS_SUCCESS) {  //通过Geolocation类的getStatus()可以判断是否成功定位。\n                    var pt = r.point;\n                    gc.getLocation(pt, function (rs) {\n                        var addComp = rs.addressComponents;\n                        console.log(addComp.province);\n                        console.log(addComp.city);\n                        currentProvince = addComp.province;\n                        currentCity = addComp.city;\n                        //getDRL(currentProvince,currentCity);\n                        $(\"#getCarCity,#getBackCity\").val(currentCity);\n                        //alert(currentCity);\n                        // alert(addComp.province + addComp.city + addComp.district + addComp.street + addComp.streetNumber);\n                        //callback();\n                    });\n                }\n                else {\n                    //关于状态码\n                    //BMAP_STATUS_SUCCESS   检索成功。对应数值“0”。\n                    //BMAP_STATUS_CITY_LIST 城市列表。对应数值“1”。\n                    //BMAP_STATUS_UNKNOWN_LOCATION  位置结果未知。对应数值“2”。\n                    //BMAP_STATUS_UNKNOWN_ROUTE 导航结果未知。对应数值“3”。\n                    //BMAP_STATUS_INVALID_KEY   非法密钥。对应数值“4”。\n                    //BMAP_STATUS_INVALID_REQUEST   非法请求。对应数值“5”。\n                    //BMAP_STATUS_PERMISSION_DENIED 没有权限。对应数值“6”。(自 1.1 新增)\n                    //BMAP_STATUS_SERVICE_UNAVAILABLE   服务不可用。对应数值“7”。(自 1.1 新增)\n                    //BMAP_STATUS_TIMEOUT   超时。对应数值“8”。(自 1.1 新增)\n                    switch (this.getStatus()) {\n                        case 2:\n                            alert('位置结果未知 获取位置失败.');\n                            break;\n                        case 3:\n                            alert('导航结果未知 获取位置失败..');\n                            break;\n                        case 4:\n                            alert('非法密钥 获取位置失败.');\n                            break;\n                        case 5:\n                            alert('对不起,非法请求位置  获取位置失败.');\n                            break;\n                        case 6:\n                            alert('对不起,当前 没有权限 获取位置失败.');\n                            break;\n                        case 7:\n                            alert('对不起,服务不可用 获取位置失败.');\n                            break;\n                        case 8:\n                            alert('对不起,请求超时 获取位置失败.');\n                            break;\n                    }\n                }\n            },\n            {enableHighAccuracy: true}\n        );\n    }","source":"_posts/Js地图定位到当前城市.md","raw":"---\ntitle: 地图定位到当前城市\ndescription: 引进百度地图API\nkeywords: 地图定位 当前城市 引进\ncategories: skill\ntags: \n- 地图\n- Js\ndate: 2017-01-28\n---\n\n首先：html  引进百度地图API\n\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=4afe44bcbcda66feb8ab579866d5d1fa\"></script>\n    <script src=\"scripts/jquery-2.1.4.js\"></script>\n\n其次：主要的 js 代码\n<!-- more -->\n\n    var currentProvince;\n    var currentCity;\n    //百度地图获取 省 市\n    function getCurrentProCity(callback) {\n        $.showLoading(\"正在加载...\");\n        var geolocation = new BMap.Geolocation();\n        var gc = new BMap.Geocoder();\n        geolocation.getCurrentPosition(function (r) {//定位结果对象会传递给r变量\n                $.hideLoading();\n                if (this.getStatus() == BMAP_STATUS_SUCCESS) {  //通过Geolocation类的getStatus()可以判断是否成功定位。\n                    var pt = r.point;\n                    gc.getLocation(pt, function (rs) {\n                        var addComp = rs.addressComponents;\n                        console.log(addComp.province);\n                        console.log(addComp.city);\n                        currentProvince = addComp.province;\n                        currentCity = addComp.city;\n                        //getDRL(currentProvince,currentCity);\n                        $(\"#getCarCity,#getBackCity\").val(currentCity);\n                        //alert(currentCity);\n                        // alert(addComp.province + addComp.city + addComp.district + addComp.street + addComp.streetNumber);\n                        //callback();\n                    });\n                }\n                else {\n                    //关于状态码\n                    //BMAP_STATUS_SUCCESS   检索成功。对应数值“0”。\n                    //BMAP_STATUS_CITY_LIST 城市列表。对应数值“1”。\n                    //BMAP_STATUS_UNKNOWN_LOCATION  位置结果未知。对应数值“2”。\n                    //BMAP_STATUS_UNKNOWN_ROUTE 导航结果未知。对应数值“3”。\n                    //BMAP_STATUS_INVALID_KEY   非法密钥。对应数值“4”。\n                    //BMAP_STATUS_INVALID_REQUEST   非法请求。对应数值“5”。\n                    //BMAP_STATUS_PERMISSION_DENIED 没有权限。对应数值“6”。(自 1.1 新增)\n                    //BMAP_STATUS_SERVICE_UNAVAILABLE   服务不可用。对应数值“7”。(自 1.1 新增)\n                    //BMAP_STATUS_TIMEOUT   超时。对应数值“8”。(自 1.1 新增)\n                    switch (this.getStatus()) {\n                        case 2:\n                            alert('位置结果未知 获取位置失败.');\n                            break;\n                        case 3:\n                            alert('导航结果未知 获取位置失败..');\n                            break;\n                        case 4:\n                            alert('非法密钥 获取位置失败.');\n                            break;\n                        case 5:\n                            alert('对不起,非法请求位置  获取位置失败.');\n                            break;\n                        case 6:\n                            alert('对不起,当前 没有权限 获取位置失败.');\n                            break;\n                        case 7:\n                            alert('对不起,服务不可用 获取位置失败.');\n                            break;\n                        case 8:\n                            alert('对不起,请求超时 获取位置失败.');\n                            break;\n                    }\n                }\n            },\n            {enableHighAccuracy: true}\n        );\n    }","slug":"Js地图定位到当前城市","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0w4000o6atf3ybjn1rq","content":"<p>首先：html  引进百度地图API</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;http://api.map.baidu.com/api?v=2.0&amp;ak=4afe44bcbcda66feb8ab579866d5d1fa&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;scripts/jquery-2.1.4.js&quot;&gt;&lt;/script&gt;\n</code></pre><p>其次：主要的 js 代码<br><a id=\"more\"></a></p>\n<pre><code>var currentProvince;\nvar currentCity;\n//百度地图获取 省 市\nfunction getCurrentProCity(callback) {\n    $.showLoading(&quot;正在加载...&quot;);\n    var geolocation = new BMap.Geolocation();\n    var gc = new BMap.Geocoder();\n    geolocation.getCurrentPosition(function (r) {//定位结果对象会传递给r变量\n            $.hideLoading();\n            if (this.getStatus() == BMAP_STATUS_SUCCESS) {  //通过Geolocation类的getStatus()可以判断是否成功定位。\n                var pt = r.point;\n                gc.getLocation(pt, function (rs) {\n                    var addComp = rs.addressComponents;\n                    console.log(addComp.province);\n                    console.log(addComp.city);\n                    currentProvince = addComp.province;\n                    currentCity = addComp.city;\n                    //getDRL(currentProvince,currentCity);\n                    $(&quot;#getCarCity,#getBackCity&quot;).val(currentCity);\n                    //alert(currentCity);\n                    // alert(addComp.province + addComp.city + addComp.district + addComp.street + addComp.streetNumber);\n                    //callback();\n                });\n            }\n            else {\n                //关于状态码\n                //BMAP_STATUS_SUCCESS   检索成功。对应数值“0”。\n                //BMAP_STATUS_CITY_LIST 城市列表。对应数值“1”。\n                //BMAP_STATUS_UNKNOWN_LOCATION  位置结果未知。对应数值“2”。\n                //BMAP_STATUS_UNKNOWN_ROUTE 导航结果未知。对应数值“3”。\n                //BMAP_STATUS_INVALID_KEY   非法密钥。对应数值“4”。\n                //BMAP_STATUS_INVALID_REQUEST   非法请求。对应数值“5”。\n                //BMAP_STATUS_PERMISSION_DENIED 没有权限。对应数值“6”。(自 1.1 新增)\n                //BMAP_STATUS_SERVICE_UNAVAILABLE   服务不可用。对应数值“7”。(自 1.1 新增)\n                //BMAP_STATUS_TIMEOUT   超时。对应数值“8”。(自 1.1 新增)\n                switch (this.getStatus()) {\n                    case 2:\n                        alert(&apos;位置结果未知 获取位置失败.&apos;);\n                        break;\n                    case 3:\n                        alert(&apos;导航结果未知 获取位置失败..&apos;);\n                        break;\n                    case 4:\n                        alert(&apos;非法密钥 获取位置失败.&apos;);\n                        break;\n                    case 5:\n                        alert(&apos;对不起,非法请求位置  获取位置失败.&apos;);\n                        break;\n                    case 6:\n                        alert(&apos;对不起,当前 没有权限 获取位置失败.&apos;);\n                        break;\n                    case 7:\n                        alert(&apos;对不起,服务不可用 获取位置失败.&apos;);\n                        break;\n                    case 8:\n                        alert(&apos;对不起,请求超时 获取位置失败.&apos;);\n                        break;\n                }\n            }\n        },\n        {enableHighAccuracy: true}\n    );\n}\n</code></pre>","site":{"data":{}},"excerpt":"<p>首先：html  引进百度地图API</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;http://api.map.baidu.com/api?v=2.0&amp;ak=4afe44bcbcda66feb8ab579866d5d1fa&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;scripts/jquery-2.1.4.js&quot;&gt;&lt;/script&gt;\n</code></pre><p>其次：主要的 js 代码<br>","more":"</p>\n<pre><code>var currentProvince;\nvar currentCity;\n//百度地图获取 省 市\nfunction getCurrentProCity(callback) {\n    $.showLoading(&quot;正在加载...&quot;);\n    var geolocation = new BMap.Geolocation();\n    var gc = new BMap.Geocoder();\n    geolocation.getCurrentPosition(function (r) {//定位结果对象会传递给r变量\n            $.hideLoading();\n            if (this.getStatus() == BMAP_STATUS_SUCCESS) {  //通过Geolocation类的getStatus()可以判断是否成功定位。\n                var pt = r.point;\n                gc.getLocation(pt, function (rs) {\n                    var addComp = rs.addressComponents;\n                    console.log(addComp.province);\n                    console.log(addComp.city);\n                    currentProvince = addComp.province;\n                    currentCity = addComp.city;\n                    //getDRL(currentProvince,currentCity);\n                    $(&quot;#getCarCity,#getBackCity&quot;).val(currentCity);\n                    //alert(currentCity);\n                    // alert(addComp.province + addComp.city + addComp.district + addComp.street + addComp.streetNumber);\n                    //callback();\n                });\n            }\n            else {\n                //关于状态码\n                //BMAP_STATUS_SUCCESS   检索成功。对应数值“0”。\n                //BMAP_STATUS_CITY_LIST 城市列表。对应数值“1”。\n                //BMAP_STATUS_UNKNOWN_LOCATION  位置结果未知。对应数值“2”。\n                //BMAP_STATUS_UNKNOWN_ROUTE 导航结果未知。对应数值“3”。\n                //BMAP_STATUS_INVALID_KEY   非法密钥。对应数值“4”。\n                //BMAP_STATUS_INVALID_REQUEST   非法请求。对应数值“5”。\n                //BMAP_STATUS_PERMISSION_DENIED 没有权限。对应数值“6”。(自 1.1 新增)\n                //BMAP_STATUS_SERVICE_UNAVAILABLE   服务不可用。对应数值“7”。(自 1.1 新增)\n                //BMAP_STATUS_TIMEOUT   超时。对应数值“8”。(自 1.1 新增)\n                switch (this.getStatus()) {\n                    case 2:\n                        alert(&apos;位置结果未知 获取位置失败.&apos;);\n                        break;\n                    case 3:\n                        alert(&apos;导航结果未知 获取位置失败..&apos;);\n                        break;\n                    case 4:\n                        alert(&apos;非法密钥 获取位置失败.&apos;);\n                        break;\n                    case 5:\n                        alert(&apos;对不起,非法请求位置  获取位置失败.&apos;);\n                        break;\n                    case 6:\n                        alert(&apos;对不起,当前 没有权限 获取位置失败.&apos;);\n                        break;\n                    case 7:\n                        alert(&apos;对不起,服务不可用 获取位置失败.&apos;);\n                        break;\n                    case 8:\n                        alert(&apos;对不起,请求超时 获取位置失败.&apos;);\n                        break;\n                }\n            }\n        },\n        {enableHighAccuracy: true}\n    );\n}\n</code></pre>"},{"title":"JS 控制CSS样式表的语法对照","keywords":"Js 控制CSS样式 语法对照","date":"2017-02-09T16:00:00.000Z","_content":"\n福利：JavaScript获取demo节点\n\n    var ID=document.getElementById(\"myId\");\n    var name=document.getElementsByName(\"myName\");\n    var tagName=document.getElementsByTagName(\"tagName\");\n\n主题：下面就是JS 控制CSS样式表的语法对照： \nCSS语法 (不区分大小写)  JavaScript语法 (区分大小写) \nJavaScript改变CSS样式语法为：\n`Object.style.color=\"red\";`\n`Object.style.backgroundColor=\"red\";`\n<!--more -->\n\n    border  border \n    border-bottom   borderBottom \n    border-bottom-color borderBottomColor \n    border-bottom-style borderBottomStyle \n    border-bottom-width borderBottomWidth \n    border-color    borderColor \n    border-left borderLeft \n    border-left-color   borderLeftColor \n    border-left-style   borderLeftStyle \n    border-left-width   borderLeftWidth \n    border-right    borderRight \n    border-right-color  borderRightColor \n    border-right-style  borderRightStyle \n    border-right-width  borderRightWidth \n    border-style    borderStyle \n    border-top  borderTop \n    border-top-color    borderTopColor \n    border-top-style    borderTopStyle \n    border-top-width    borderTopWidth \n    border-width    borderWidth \n    clear   clear \n    float   floatStyle \n    margin  margin \n    margin-bottom   marginBottom \n    margin-left marginLeft \n    margin-right    marginRight \n    margin-top  marginTop \n    padding padding \n    padding-bottom  paddingBottom \n    padding-left    paddingLeft \n    padding-right   paddingRight \n    padding-top paddingTop\n    background  background \n    background-attachment   backgroundAttachment \n    background-color    backgroundColor \n    background-image    backgroundImage \n    background-position backgroundPosition \n    background-repeat   backgroundRepeat \n    color   color \n    display display \n    list-style-type listStyleType \n    list-style-image    listStyleImage \n    list-style-position listStylePosition \n    list-style  listStyle \n    white-space whiteSpace \n    font    font \n    font-family fontFamily \n    font-size   fontSize \n    font-style  fontStyle \n    font-variant    fontVariant \n    font-weight fontWeight \n    letter-spacing  letterSpacing \n    line-break  lineBreak \n    line-height lineHeight \n    text-align  textAlign \n    text-decoration textDecoration \n    text-indent textIndent \n    text-justify    textJustify \n    text-transform  textTransform \n    vertical-align  verticalAlign","source":"_posts/Js控制CSS样式表的语法对照.md","raw":"---\ntitle: JS 控制CSS样式表的语法对照\nkeywords: Js 控制CSS样式 语法对照\ntags: Js\ncategories: skill\ndate: 2017-02-10\n---\n\n福利：JavaScript获取demo节点\n\n    var ID=document.getElementById(\"myId\");\n    var name=document.getElementsByName(\"myName\");\n    var tagName=document.getElementsByTagName(\"tagName\");\n\n主题：下面就是JS 控制CSS样式表的语法对照： \nCSS语法 (不区分大小写)  JavaScript语法 (区分大小写) \nJavaScript改变CSS样式语法为：\n`Object.style.color=\"red\";`\n`Object.style.backgroundColor=\"red\";`\n<!--more -->\n\n    border  border \n    border-bottom   borderBottom \n    border-bottom-color borderBottomColor \n    border-bottom-style borderBottomStyle \n    border-bottom-width borderBottomWidth \n    border-color    borderColor \n    border-left borderLeft \n    border-left-color   borderLeftColor \n    border-left-style   borderLeftStyle \n    border-left-width   borderLeftWidth \n    border-right    borderRight \n    border-right-color  borderRightColor \n    border-right-style  borderRightStyle \n    border-right-width  borderRightWidth \n    border-style    borderStyle \n    border-top  borderTop \n    border-top-color    borderTopColor \n    border-top-style    borderTopStyle \n    border-top-width    borderTopWidth \n    border-width    borderWidth \n    clear   clear \n    float   floatStyle \n    margin  margin \n    margin-bottom   marginBottom \n    margin-left marginLeft \n    margin-right    marginRight \n    margin-top  marginTop \n    padding padding \n    padding-bottom  paddingBottom \n    padding-left    paddingLeft \n    padding-right   paddingRight \n    padding-top paddingTop\n    background  background \n    background-attachment   backgroundAttachment \n    background-color    backgroundColor \n    background-image    backgroundImage \n    background-position backgroundPosition \n    background-repeat   backgroundRepeat \n    color   color \n    display display \n    list-style-type listStyleType \n    list-style-image    listStyleImage \n    list-style-position listStylePosition \n    list-style  listStyle \n    white-space whiteSpace \n    font    font \n    font-family fontFamily \n    font-size   fontSize \n    font-style  fontStyle \n    font-variant    fontVariant \n    font-weight fontWeight \n    letter-spacing  letterSpacing \n    line-break  lineBreak \n    line-height lineHeight \n    text-align  textAlign \n    text-decoration textDecoration \n    text-indent textIndent \n    text-justify    textJustify \n    text-transform  textTransform \n    vertical-align  verticalAlign","slug":"Js控制CSS样式表的语法对照","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0w7000t6atfe19yfagh","content":"<p>福利：JavaScript获取demo节点</p>\n<pre><code>var ID=document.getElementById(&quot;myId&quot;);\nvar name=document.getElementsByName(&quot;myName&quot;);\nvar tagName=document.getElementsByTagName(&quot;tagName&quot;);\n</code></pre><p>主题：下面就是JS 控制CSS样式表的语法对照：<br>CSS语法 (不区分大小写)  JavaScript语法 (区分大小写)<br>JavaScript改变CSS样式语法为：<br><code>Object.style.color=&quot;red&quot;;</code><br><code>Object.style.backgroundColor=&quot;red&quot;;</code><br><a id=\"more\"></a></p>\n<pre><code>border  border \nborder-bottom   borderBottom \nborder-bottom-color borderBottomColor \nborder-bottom-style borderBottomStyle \nborder-bottom-width borderBottomWidth \nborder-color    borderColor \nborder-left borderLeft \nborder-left-color   borderLeftColor \nborder-left-style   borderLeftStyle \nborder-left-width   borderLeftWidth \nborder-right    borderRight \nborder-right-color  borderRightColor \nborder-right-style  borderRightStyle \nborder-right-width  borderRightWidth \nborder-style    borderStyle \nborder-top  borderTop \nborder-top-color    borderTopColor \nborder-top-style    borderTopStyle \nborder-top-width    borderTopWidth \nborder-width    borderWidth \nclear   clear \nfloat   floatStyle \nmargin  margin \nmargin-bottom   marginBottom \nmargin-left marginLeft \nmargin-right    marginRight \nmargin-top  marginTop \npadding padding \npadding-bottom  paddingBottom \npadding-left    paddingLeft \npadding-right   paddingRight \npadding-top paddingTop\nbackground  background \nbackground-attachment   backgroundAttachment \nbackground-color    backgroundColor \nbackground-image    backgroundImage \nbackground-position backgroundPosition \nbackground-repeat   backgroundRepeat \ncolor   color \ndisplay display \nlist-style-type listStyleType \nlist-style-image    listStyleImage \nlist-style-position listStylePosition \nlist-style  listStyle \nwhite-space whiteSpace \nfont    font \nfont-family fontFamily \nfont-size   fontSize \nfont-style  fontStyle \nfont-variant    fontVariant \nfont-weight fontWeight \nletter-spacing  letterSpacing \nline-break  lineBreak \nline-height lineHeight \ntext-align  textAlign \ntext-decoration textDecoration \ntext-indent textIndent \ntext-justify    textJustify \ntext-transform  textTransform \nvertical-align  verticalAlign\n</code></pre>","site":{"data":{}},"excerpt":"<p>福利：JavaScript获取demo节点</p>\n<pre><code>var ID=document.getElementById(&quot;myId&quot;);\nvar name=document.getElementsByName(&quot;myName&quot;);\nvar tagName=document.getElementsByTagName(&quot;tagName&quot;);\n</code></pre><p>主题：下面就是JS 控制CSS样式表的语法对照：<br>CSS语法 (不区分大小写)  JavaScript语法 (区分大小写)<br>JavaScript改变CSS样式语法为：<br><code>Object.style.color=&quot;red&quot;;</code><br><code>Object.style.backgroundColor=&quot;red&quot;;</code><br>","more":"</p>\n<pre><code>border  border \nborder-bottom   borderBottom \nborder-bottom-color borderBottomColor \nborder-bottom-style borderBottomStyle \nborder-bottom-width borderBottomWidth \nborder-color    borderColor \nborder-left borderLeft \nborder-left-color   borderLeftColor \nborder-left-style   borderLeftStyle \nborder-left-width   borderLeftWidth \nborder-right    borderRight \nborder-right-color  borderRightColor \nborder-right-style  borderRightStyle \nborder-right-width  borderRightWidth \nborder-style    borderStyle \nborder-top  borderTop \nborder-top-color    borderTopColor \nborder-top-style    borderTopStyle \nborder-top-width    borderTopWidth \nborder-width    borderWidth \nclear   clear \nfloat   floatStyle \nmargin  margin \nmargin-bottom   marginBottom \nmargin-left marginLeft \nmargin-right    marginRight \nmargin-top  marginTop \npadding padding \npadding-bottom  paddingBottom \npadding-left    paddingLeft \npadding-right   paddingRight \npadding-top paddingTop\nbackground  background \nbackground-attachment   backgroundAttachment \nbackground-color    backgroundColor \nbackground-image    backgroundImage \nbackground-position backgroundPosition \nbackground-repeat   backgroundRepeat \ncolor   color \ndisplay display \nlist-style-type listStyleType \nlist-style-image    listStyleImage \nlist-style-position listStylePosition \nlist-style  listStyle \nwhite-space whiteSpace \nfont    font \nfont-family fontFamily \nfont-size   fontSize \nfont-style  fontStyle \nfont-variant    fontVariant \nfont-weight fontWeight \nletter-spacing  letterSpacing \nline-break  lineBreak \nline-height lineHeight \ntext-align  textAlign \ntext-decoration textDecoration \ntext-indent textIndent \ntext-justify    textJustify \ntext-transform  textTransform \nvertical-align  verticalAlign\n</code></pre>"},{"title":"Js星空极速飞入效果","keywords":"背景图片 加载失败","date":"2015-11-19T16:00:00.000Z","_content":"\n# 星空极速飞入效果\n\n```js\n<html>\n<head>\n    <title>星空极速飞入效果</title>\n    <style type=\"text/css\">\n        <!--\n        body {\n            background-color: #000066;\n            overflow:hidden;\n        }\n        -->\n    </style>\n</head>\n<body>\n<script language=\"JavaScript\">\n    xL=8;\n    xH=xW=xR=xE=xMY=xMX=xWd=xHd=0;\n    xF=new Array();\n    xY=new Array();\n    xX=new Array();\n    xS=new Array();\n    xA=new Array();\n    xB=new Array();\n    ini=new Array();\n    document.write('<div id=\"sdiv\" style=\"position:absolute;top:0px;left:0px\"><div style=\"position:relative\">');\n    for (i=0; i < xL; i++){\n        document.write('<div id=\"div\" style=\"position:absolute;top:0;left:0;width:5px;height:5px;'+'font-size:10px;color:#ffffff\">.</div>');\n    }\n    document.write('</div></div>');\n    function Set(){\n        for (i=0; i < xL; i++){\n            transfer(i)\n            xF[i]=xW/14;\n        }\n    }\n    function Assign(){\n        sdiv.style.top=document.body.scrollTop;\n        for (i=0; i < xL; i++){\n            xF[i]-=xS[i]*25;\n            if (xF[i] < 4) xF[i]=3;\n            div[i].style.top =xY[i];\n            div[i].style.left=xX[i];\n            div[i].style.fontSize=xF[i];\n        }\n    }\n    function fly(){\n        xMY=window.document.body.clientHeight/2;\n        xMX=window.document.body.clientWidth/2;\n        xWd=Math.round(Math.random()*40+5);\n        xHd=Math.round(Math.random()*30+5);\n        for (i=0; i < xL; i++){\n            xY[i]=xA[i]+=(xMY-xA[i])*(xS[i]);\n            xX[i]=xB[i]+=(xMX-xB[i])*(xS[i]);\n            if ((xX[i] > xMX-xWd) && (xX[i] < xMX+xWd) && (xY[i] > xMY-xHd) && (xY[i] < xMY+xHd)){\n                transfer(i)\n            }\n            if ((xX[i]<0)||(xX[i]>xW)||(xY[i]<0)||(xY[i]>xH)){\n                xF[i]=xW/14;\n            }\n        }\n        Assign();\n        setTimeout('fly()',1);\n    }\n    function transfer(i){\n        xH=window.document.body.offsetHeight;\n        xW=window.document.body.offsetWidth;\n        xA[i]=Math.round(Math.random()*xH);\n        xB[i]=Math.round(Math.random()*xW);\n        xS[i]=Math.random()*0.05+0.05;\n        xR=Math.round(Math.random()*3);\n        xE=Math.round(Math.random()*50+50);\n        if (xR == 3) xB[i]=-xE;\n        if (xR == 2) xB[i]=xW+xE;\n        if (xR == 1) xA[i]=-xE;\n        if (xR == 0) xA[i]=xH;\n    }\n    Set();\n    fly();\n</script>\n</body>\n</html>\n```","source":"_posts/Js星空极速飞入效果.md","raw":"---\ntitle: Js星空极速飞入效果\nkeywords: 背景图片 加载失败\ntags: \n- Js\n- 图片\ncategories: note\ndate: 2015-11-20\n---\n\n# 星空极速飞入效果\n\n```js\n<html>\n<head>\n    <title>星空极速飞入效果</title>\n    <style type=\"text/css\">\n        <!--\n        body {\n            background-color: #000066;\n            overflow:hidden;\n        }\n        -->\n    </style>\n</head>\n<body>\n<script language=\"JavaScript\">\n    xL=8;\n    xH=xW=xR=xE=xMY=xMX=xWd=xHd=0;\n    xF=new Array();\n    xY=new Array();\n    xX=new Array();\n    xS=new Array();\n    xA=new Array();\n    xB=new Array();\n    ini=new Array();\n    document.write('<div id=\"sdiv\" style=\"position:absolute;top:0px;left:0px\"><div style=\"position:relative\">');\n    for (i=0; i < xL; i++){\n        document.write('<div id=\"div\" style=\"position:absolute;top:0;left:0;width:5px;height:5px;'+'font-size:10px;color:#ffffff\">.</div>');\n    }\n    document.write('</div></div>');\n    function Set(){\n        for (i=0; i < xL; i++){\n            transfer(i)\n            xF[i]=xW/14;\n        }\n    }\n    function Assign(){\n        sdiv.style.top=document.body.scrollTop;\n        for (i=0; i < xL; i++){\n            xF[i]-=xS[i]*25;\n            if (xF[i] < 4) xF[i]=3;\n            div[i].style.top =xY[i];\n            div[i].style.left=xX[i];\n            div[i].style.fontSize=xF[i];\n        }\n    }\n    function fly(){\n        xMY=window.document.body.clientHeight/2;\n        xMX=window.document.body.clientWidth/2;\n        xWd=Math.round(Math.random()*40+5);\n        xHd=Math.round(Math.random()*30+5);\n        for (i=0; i < xL; i++){\n            xY[i]=xA[i]+=(xMY-xA[i])*(xS[i]);\n            xX[i]=xB[i]+=(xMX-xB[i])*(xS[i]);\n            if ((xX[i] > xMX-xWd) && (xX[i] < xMX+xWd) && (xY[i] > xMY-xHd) && (xY[i] < xMY+xHd)){\n                transfer(i)\n            }\n            if ((xX[i]<0)||(xX[i]>xW)||(xY[i]<0)||(xY[i]>xH)){\n                xF[i]=xW/14;\n            }\n        }\n        Assign();\n        setTimeout('fly()',1);\n    }\n    function transfer(i){\n        xH=window.document.body.offsetHeight;\n        xW=window.document.body.offsetWidth;\n        xA[i]=Math.round(Math.random()*xH);\n        xB[i]=Math.round(Math.random()*xW);\n        xS[i]=Math.random()*0.05+0.05;\n        xR=Math.round(Math.random()*3);\n        xE=Math.round(Math.random()*50+50);\n        if (xR == 3) xB[i]=-xE;\n        if (xR == 2) xB[i]=xW+xE;\n        if (xR == 1) xA[i]=-xE;\n        if (xR == 0) xA[i]=xH;\n    }\n    Set();\n    fly();\n</script>\n</body>\n</html>\n```","slug":"Js星空极速飞入效果","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0wb000v6atfm1zmf50i","content":"<h1 id=\"星空极速飞入效果\"><a href=\"#星空极速飞入效果\" class=\"headerlink\" title=\"星空极速飞入效果\"></a>星空极速飞入效果</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;星空极速飞入效果&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;style type=\"text/</span>css<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;!--</span></span><br><span class=\"line\"><span class=\"string\">        body &#123;</span></span><br><span class=\"line\"><span class=\"string\">            background-color: #000066;</span></span><br><span class=\"line\"><span class=\"string\">            overflow:hidden;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">        --&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/style&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;script language=\"</span>JavaScript<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">    xL=8;</span></span><br><span class=\"line\"><span class=\"string\">    xH=xW=xR=xE=xMY=xMX=xWd=xHd=0;</span></span><br><span class=\"line\"><span class=\"string\">    xF=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    xY=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    xX=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    xS=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    xA=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    xB=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    ini=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    document.write('&lt;div id=\"</span>sdiv<span class=\"string\">\" style=\"</span>position:absolute;top:<span class=\"number\">0</span>px;left:<span class=\"number\">0</span>px<span class=\"string\">\"&gt;&lt;div style=\"</span>position:relative<span class=\"string\">\"&gt;');</span></span><br><span class=\"line\"><span class=\"string\">    for (i=0; i &lt; xL; i++)&#123;</span></span><br><span class=\"line\">        document.write('&lt;div id=\"div\" style=\"position:absolute;top:0;left:0;width:5px;height:5px;'+'font-size:10px;color:#ffffff\"&gt;.&lt;/div&gt;');</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;/div&gt;&lt;/div&gt;'</span>);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Set</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>; i &lt; xL; i++)&#123;</span><br><span class=\"line\">            transfer(i)</span><br><span class=\"line\">            xF[i]=xW/<span class=\"number\">14</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Assign</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        sdiv.style.top=<span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>; i &lt; xL; i++)&#123;</span><br><span class=\"line\">            xF[i]-=xS[i]*<span class=\"number\">25</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (xF[i] &lt; <span class=\"number\">4</span>) xF[i]=<span class=\"number\">3</span>;</span><br><span class=\"line\">            div[i].style.top =xY[i];</span><br><span class=\"line\">            div[i].style.left=xX[i];</span><br><span class=\"line\">            div[i].style.fontSize=xF[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fly</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        xMY=<span class=\"built_in\">window</span>.document.body.clientHeight/<span class=\"number\">2</span>;</span><br><span class=\"line\">        xMX=<span class=\"built_in\">window</span>.document.body.clientWidth/<span class=\"number\">2</span>;</span><br><span class=\"line\">        xWd=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">40</span>+<span class=\"number\">5</span>);</span><br><span class=\"line\">        xHd=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">30</span>+<span class=\"number\">5</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>; i &lt; xL; i++)&#123;</span><br><span class=\"line\">            xY[i]=xA[i]+=(xMY-xA[i])*(xS[i]);</span><br><span class=\"line\">            xX[i]=xB[i]+=(xMX-xB[i])*(xS[i]);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((xX[i] &gt; xMX-xWd) &amp;&amp; (xX[i] &lt; xMX+xWd) &amp;&amp; (xY[i] &gt; xMY-xHd) &amp;&amp; (xY[i] &lt; xMY+xHd))&#123;</span><br><span class=\"line\">                transfer(i)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((xX[i]&lt;<span class=\"number\">0</span>)||(xX[i]&gt;xW)||(xY[i]&lt;<span class=\"number\">0</span>)||(xY[i]&gt;xH))&#123;</span><br><span class=\"line\">                xF[i]=xW/<span class=\"number\">14</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Assign();</span><br><span class=\"line\">        setTimeout(<span class=\"string\">'fly()'</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">transfer</span>(<span class=\"params\">i</span>)</span>&#123;</span><br><span class=\"line\">        xH=<span class=\"built_in\">window</span>.document.body.offsetHeight;</span><br><span class=\"line\">        xW=<span class=\"built_in\">window</span>.document.body.offsetWidth;</span><br><span class=\"line\">        xA[i]=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*xH);</span><br><span class=\"line\">        xB[i]=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*xW);</span><br><span class=\"line\">        xS[i]=<span class=\"built_in\">Math</span>.random()*<span class=\"number\">0.05</span>+<span class=\"number\">0.05</span>;</span><br><span class=\"line\">        xR=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">3</span>);</span><br><span class=\"line\">        xE=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">50</span>+<span class=\"number\">50</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (xR == <span class=\"number\">3</span>) xB[i]=-xE;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (xR == <span class=\"number\">2</span>) xB[i]=xW+xE;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (xR == <span class=\"number\">1</span>) xA[i]=-xE;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (xR == <span class=\"number\">0</span>) xA[i]=xH;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">Set</span>();</span><br><span class=\"line\">    fly();</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>body&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/html&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"星空极速飞入效果\"><a href=\"#星空极速飞入效果\" class=\"headerlink\" title=\"星空极速飞入效果\"></a>星空极速飞入效果</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;星空极速飞入效果&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;style type=\"text/</span>css<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;!--</span></span><br><span class=\"line\"><span class=\"string\">        body &#123;</span></span><br><span class=\"line\"><span class=\"string\">            background-color: #000066;</span></span><br><span class=\"line\"><span class=\"string\">            overflow:hidden;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">        --&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/style&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;script language=\"</span>JavaScript<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">    xL=8;</span></span><br><span class=\"line\"><span class=\"string\">    xH=xW=xR=xE=xMY=xMX=xWd=xHd=0;</span></span><br><span class=\"line\"><span class=\"string\">    xF=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    xY=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    xX=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    xS=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    xA=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    xB=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    ini=new Array();</span></span><br><span class=\"line\"><span class=\"string\">    document.write('&lt;div id=\"</span>sdiv<span class=\"string\">\" style=\"</span>position:absolute;top:<span class=\"number\">0</span>px;left:<span class=\"number\">0</span>px<span class=\"string\">\"&gt;&lt;div style=\"</span>position:relative<span class=\"string\">\"&gt;');</span></span><br><span class=\"line\"><span class=\"string\">    for (i=0; i &lt; xL; i++)&#123;</span></span><br><span class=\"line\">        document.write('&lt;div id=\"div\" style=\"position:absolute;top:0;left:0;width:5px;height:5px;'+'font-size:10px;color:#ffffff\"&gt;.&lt;/div&gt;');</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;/div&gt;&lt;/div&gt;'</span>);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Set</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>; i &lt; xL; i++)&#123;</span><br><span class=\"line\">            transfer(i)</span><br><span class=\"line\">            xF[i]=xW/<span class=\"number\">14</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Assign</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        sdiv.style.top=<span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>; i &lt; xL; i++)&#123;</span><br><span class=\"line\">            xF[i]-=xS[i]*<span class=\"number\">25</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (xF[i] &lt; <span class=\"number\">4</span>) xF[i]=<span class=\"number\">3</span>;</span><br><span class=\"line\">            div[i].style.top =xY[i];</span><br><span class=\"line\">            div[i].style.left=xX[i];</span><br><span class=\"line\">            div[i].style.fontSize=xF[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fly</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        xMY=<span class=\"built_in\">window</span>.document.body.clientHeight/<span class=\"number\">2</span>;</span><br><span class=\"line\">        xMX=<span class=\"built_in\">window</span>.document.body.clientWidth/<span class=\"number\">2</span>;</span><br><span class=\"line\">        xWd=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">40</span>+<span class=\"number\">5</span>);</span><br><span class=\"line\">        xHd=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">30</span>+<span class=\"number\">5</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>; i &lt; xL; i++)&#123;</span><br><span class=\"line\">            xY[i]=xA[i]+=(xMY-xA[i])*(xS[i]);</span><br><span class=\"line\">            xX[i]=xB[i]+=(xMX-xB[i])*(xS[i]);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((xX[i] &gt; xMX-xWd) &amp;&amp; (xX[i] &lt; xMX+xWd) &amp;&amp; (xY[i] &gt; xMY-xHd) &amp;&amp; (xY[i] &lt; xMY+xHd))&#123;</span><br><span class=\"line\">                transfer(i)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((xX[i]&lt;<span class=\"number\">0</span>)||(xX[i]&gt;xW)||(xY[i]&lt;<span class=\"number\">0</span>)||(xY[i]&gt;xH))&#123;</span><br><span class=\"line\">                xF[i]=xW/<span class=\"number\">14</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Assign();</span><br><span class=\"line\">        setTimeout(<span class=\"string\">'fly()'</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">transfer</span>(<span class=\"params\">i</span>)</span>&#123;</span><br><span class=\"line\">        xH=<span class=\"built_in\">window</span>.document.body.offsetHeight;</span><br><span class=\"line\">        xW=<span class=\"built_in\">window</span>.document.body.offsetWidth;</span><br><span class=\"line\">        xA[i]=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*xH);</span><br><span class=\"line\">        xB[i]=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*xW);</span><br><span class=\"line\">        xS[i]=<span class=\"built_in\">Math</span>.random()*<span class=\"number\">0.05</span>+<span class=\"number\">0.05</span>;</span><br><span class=\"line\">        xR=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">3</span>);</span><br><span class=\"line\">        xE=<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">50</span>+<span class=\"number\">50</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (xR == <span class=\"number\">3</span>) xB[i]=-xE;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (xR == <span class=\"number\">2</span>) xB[i]=xW+xE;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (xR == <span class=\"number\">1</span>) xA[i]=-xE;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (xR == <span class=\"number\">0</span>) xA[i]=xH;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">Set</span>();</span><br><span class=\"line\">    fly();</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>body&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/html&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"用一个二维码做下载地址，自动区分是 ios 还是 android","keywords":"二维码 自动区分是 ios android","date":"2017-08-25T16:00:00.000Z","_content":"\n用一个二维码做下载地址，自动区分是 ios 还是 android, 甚至区分 iphone  和 ipad。\n\n<!-- more -->\n\n```html\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>二维码下载</title>   \n \n        <script type=\"text/javascript\">\n            /*\n             * 智能机浏览器版本信息:\n             *\n             */\n            var browser = {\n                versions: function() {\n                    var u = navigator.userAgent, app = navigator.appVersion;\n                    return {//移动终端浏览器版本信息\n                        trident: u.indexOf('Trident') > -1, //IE内核\n                        presto: u.indexOf('Presto') > -1, //opera内核\n                        webKit: u.indexOf('AppleWebKit') > -1, //苹果、谷歌内核\n                        gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1, //火狐内核\n                        mobile: !!u.match(/AppleWebKit.*Mobile.*/) || !!u.match(/AppleWebKit/), //是否为移动终端\n                        ios: !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/), //ios终端\n                        android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1, //android终端或者uc浏览器\n                        iPhone: u.indexOf('iPhone') > -1 || u.indexOf('Mac') > -1, //是否为iPhone或者QQHD浏览器\n                        iPad: u.indexOf('iPad') > -1, //是否iPad\n                        webApp: u.indexOf('Safari') == -1 //是否web应该程序，没有头部与底部\n                    };\n                }(),\n                language: (navigator.browserLanguage || navigator.language).toLowerCase()\n            }\n \n            if (browser.versions.ios || browser.versions.iPhone || browser.versions.iPad) {\n                window.location=\"https://itunes.apple.com/cn/app/xxx\";\n            }\n            else if (browser.versions.android) {\n                window.location=\"http://zhj8.aliapp.com/xxx.apk\";\n            }\n \n//            document.writeln(\"语言版本: \" + browser.language);\n//            document.writeln(\" 是否为移动终端: \" + browser.versions.mobile);\n//            document.writeln(\" ios终端: \" + browser.versions.ios);\n//            document.writeln(\" android终端: \" + browser.versions.android);\n//            document.writeln(\" 是否为iPhone: \" + browser.versions.iPhone);\n//            document.writeln(\" 是否iPad: \" + browser.versions.iPad);\n//            document.writeln(navigator.userAgent);\n \n \n        </script>\n    </head>\n    <body>\n         \n    </body>\n</html>\n```\n\n本文来源：[http://www.cnblogs.com/pengxl/p/3476588.html](http://www.cnblogs.com/pengxl/p/3476588.html)","source":"_posts/Js用一个二维码做下载地址，自动区分是ios还是android.md","raw":"---\ntitle: 用一个二维码做下载地址，自动区分是 ios 还是 android\nkeywords: 二维码 自动区分是 ios android\ntags: \n- 二维码\n- Js\ncategories: skill\ndate: 2017-08-26\n---\n\n用一个二维码做下载地址，自动区分是 ios 还是 android, 甚至区分 iphone  和 ipad。\n\n<!-- more -->\n\n```html\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>二维码下载</title>   \n \n        <script type=\"text/javascript\">\n            /*\n             * 智能机浏览器版本信息:\n             *\n             */\n            var browser = {\n                versions: function() {\n                    var u = navigator.userAgent, app = navigator.appVersion;\n                    return {//移动终端浏览器版本信息\n                        trident: u.indexOf('Trident') > -1, //IE内核\n                        presto: u.indexOf('Presto') > -1, //opera内核\n                        webKit: u.indexOf('AppleWebKit') > -1, //苹果、谷歌内核\n                        gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1, //火狐内核\n                        mobile: !!u.match(/AppleWebKit.*Mobile.*/) || !!u.match(/AppleWebKit/), //是否为移动终端\n                        ios: !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/), //ios终端\n                        android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1, //android终端或者uc浏览器\n                        iPhone: u.indexOf('iPhone') > -1 || u.indexOf('Mac') > -1, //是否为iPhone或者QQHD浏览器\n                        iPad: u.indexOf('iPad') > -1, //是否iPad\n                        webApp: u.indexOf('Safari') == -1 //是否web应该程序，没有头部与底部\n                    };\n                }(),\n                language: (navigator.browserLanguage || navigator.language).toLowerCase()\n            }\n \n            if (browser.versions.ios || browser.versions.iPhone || browser.versions.iPad) {\n                window.location=\"https://itunes.apple.com/cn/app/xxx\";\n            }\n            else if (browser.versions.android) {\n                window.location=\"http://zhj8.aliapp.com/xxx.apk\";\n            }\n \n//            document.writeln(\"语言版本: \" + browser.language);\n//            document.writeln(\" 是否为移动终端: \" + browser.versions.mobile);\n//            document.writeln(\" ios终端: \" + browser.versions.ios);\n//            document.writeln(\" android终端: \" + browser.versions.android);\n//            document.writeln(\" 是否为iPhone: \" + browser.versions.iPhone);\n//            document.writeln(\" 是否iPad: \" + browser.versions.iPad);\n//            document.writeln(navigator.userAgent);\n \n \n        </script>\n    </head>\n    <body>\n         \n    </body>\n</html>\n```\n\n本文来源：[http://www.cnblogs.com/pengxl/p/3476588.html](http://www.cnblogs.com/pengxl/p/3476588.html)","slug":"Js用一个二维码做下载地址，自动区分是ios还是android","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0we000z6atfd4p27dob","content":"<p>用一个二维码做下载地址，自动区分是 ios 还是 android, 甚至区分 iphone  和 ipad。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>二维码下载<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span>   </span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">            /*</span></span><br><span class=\"line\"><span class=\"undefined\">             * 智能机浏览器版本信息:</span></span><br><span class=\"line\"><span class=\"undefined\">             *</span></span><br><span class=\"line\"><span class=\"undefined\">             */</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> browser = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                versions: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">var</span> u = navigator.userAgent, app = navigator.appVersion;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> &#123;<span class=\"comment\">//移动终端浏览器版本信息</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        trident: u.indexOf(<span class=\"string\">'Trident'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//IE内核</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        presto: u.indexOf(<span class=\"string\">'Presto'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//opera内核</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        webKit: u.indexOf(<span class=\"string\">'AppleWebKit'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//苹果、谷歌内核</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        gecko: u.indexOf(<span class=\"string\">'Gecko'</span>) &gt; <span class=\"number\">-1</span> &amp;&amp; u.indexOf(<span class=\"string\">'KHTML'</span>) == <span class=\"number\">-1</span>, <span class=\"comment\">//火狐内核</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        mobile: !!u.match(<span class=\"regexp\">/AppleWebKit.*Mobile.*/</span>) || !!u.match(<span class=\"regexp\">/AppleWebKit/</span>), <span class=\"comment\">//是否为移动终端</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        ios: !!u.match(<span class=\"regexp\">/\\(i[^;]+;( U;)? CPU.+Mac OS X/</span>), <span class=\"comment\">//ios终端</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        android: u.indexOf(<span class=\"string\">'Android'</span>) &gt; <span class=\"number\">-1</span> || u.indexOf(<span class=\"string\">'Linux'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//android终端或者uc浏览器</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        iPhone: u.indexOf(<span class=\"string\">'iPhone'</span>) &gt; <span class=\"number\">-1</span> || u.indexOf(<span class=\"string\">'Mac'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//是否为iPhone或者QQHD浏览器</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        iPad: u.indexOf(<span class=\"string\">'iPad'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//是否iPad</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        webApp: u.indexOf(<span class=\"string\">'Safari'</span>) == <span class=\"number\">-1</span> <span class=\"comment\">//是否web应该程序，没有头部与底部</span></span></span><br><span class=\"line\"><span class=\"undefined\">                    &#125;;</span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;(),</span></span><br><span class=\"line\"><span class=\"undefined\">                language: (navigator.browserLanguage || navigator.language).toLowerCase()</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (browser.versions.ios || browser.versions.iPhone || browser.versions.iPad) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.location=<span class=\"string\">\"https://itunes.apple.com/cn/app/xxx\"</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (browser.versions.android) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.location=<span class=\"string\">\"http://zhj8.aliapp.com/xxx.apk\"</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\"语言版本: \" + browser.language);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\" 是否为移动终端: \" + browser.versions.mobile);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\" ios终端: \" + browser.versions.ios);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\" android终端: \" + browser.versions.android);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\" 是否为iPhone: \" + browser.versions.iPhone);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\" 是否iPad: \" + browser.versions.iPad);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(navigator.userAgent);</span></span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"undefined\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">         </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>本文来源：<a href=\"http://www.cnblogs.com/pengxl/p/3476588.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/pengxl/p/3476588.html</a></p>\n","site":{"data":{}},"excerpt":"<p>用一个二维码做下载地址，自动区分是 ios 还是 android, 甚至区分 iphone  和 ipad。</p>","more":"<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>二维码下载<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span>   </span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">            /*</span></span><br><span class=\"line\"><span class=\"undefined\">             * 智能机浏览器版本信息:</span></span><br><span class=\"line\"><span class=\"undefined\">             *</span></span><br><span class=\"line\"><span class=\"undefined\">             */</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> browser = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                versions: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">var</span> u = navigator.userAgent, app = navigator.appVersion;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> &#123;<span class=\"comment\">//移动终端浏览器版本信息</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        trident: u.indexOf(<span class=\"string\">'Trident'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//IE内核</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        presto: u.indexOf(<span class=\"string\">'Presto'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//opera内核</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        webKit: u.indexOf(<span class=\"string\">'AppleWebKit'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//苹果、谷歌内核</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        gecko: u.indexOf(<span class=\"string\">'Gecko'</span>) &gt; <span class=\"number\">-1</span> &amp;&amp; u.indexOf(<span class=\"string\">'KHTML'</span>) == <span class=\"number\">-1</span>, <span class=\"comment\">//火狐内核</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        mobile: !!u.match(<span class=\"regexp\">/AppleWebKit.*Mobile.*/</span>) || !!u.match(<span class=\"regexp\">/AppleWebKit/</span>), <span class=\"comment\">//是否为移动终端</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        ios: !!u.match(<span class=\"regexp\">/\\(i[^;]+;( U;)? CPU.+Mac OS X/</span>), <span class=\"comment\">//ios终端</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        android: u.indexOf(<span class=\"string\">'Android'</span>) &gt; <span class=\"number\">-1</span> || u.indexOf(<span class=\"string\">'Linux'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//android终端或者uc浏览器</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        iPhone: u.indexOf(<span class=\"string\">'iPhone'</span>) &gt; <span class=\"number\">-1</span> || u.indexOf(<span class=\"string\">'Mac'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//是否为iPhone或者QQHD浏览器</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        iPad: u.indexOf(<span class=\"string\">'iPad'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//是否iPad</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        webApp: u.indexOf(<span class=\"string\">'Safari'</span>) == <span class=\"number\">-1</span> <span class=\"comment\">//是否web应该程序，没有头部与底部</span></span></span><br><span class=\"line\"><span class=\"undefined\">                    &#125;;</span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;(),</span></span><br><span class=\"line\"><span class=\"undefined\">                language: (navigator.browserLanguage || navigator.language).toLowerCase()</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (browser.versions.ios || browser.versions.iPhone || browser.versions.iPad) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.location=<span class=\"string\">\"https://itunes.apple.com/cn/app/xxx\"</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (browser.versions.android) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.location=<span class=\"string\">\"http://zhj8.aliapp.com/xxx.apk\"</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\"语言版本: \" + browser.language);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\" 是否为移动终端: \" + browser.versions.mobile);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\" ios终端: \" + browser.versions.ios);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\" android终端: \" + browser.versions.android);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\" 是否为iPhone: \" + browser.versions.iPhone);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(\" 是否iPad: \" + browser.versions.iPad);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//            document.writeln(navigator.userAgent);</span></span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"undefined\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">         </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>本文来源：<a href=\"http://www.cnblogs.com/pengxl/p/3476588.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/pengxl/p/3476588.html</a></p>"},{"title":"背景图片加载失败时替换图片","keywords":"背景图片 加载失败","date":"2016-04-27T16:00:00.000Z","_content":"\n# 背景图片加载失败时替换图片\n\n```html \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <script src=\"js.com/jquery-2.1.4.js\" type=\"text/javascript\"></script>\n    <style type=\"text/css\">\n    div {\n        width: 500px;\n        height: 500px;\n        background-image: url(images/default_action.jpg);\n        background-color: #000000;\n        background-repeat: no-repeat;\n    }\n    </style>\n</head>\n<body>\n    <div id=\"div\"></div>\n    <script type=\"text/javascript\">\n    //第一种方法（闭包）\n    window.onload = function() {\n        _imgError = (src) => {\n            let img = new Image();\n            img.src = src;\n            console.log(img);\n            if (img.width == 0) {\n                return '../img/bg.jpg'\n            } else {\n                return src\n            }\n        }\n        _imgError('images/default_action.jpg');\n    }\n    //第二种方法\n    var img = new Image();\n        img.src = 'images/active_new.png';\n        console.log(img);\n        if (img.width == 0) {\n            alert('图片加载失败')\n        } else {\n            var getId = document.getElementById(\"div\");\n            getId.style.backgroundImage = \"url(images/active_new.png)\";\n            alert('图片加载成功')\n        }\n    </script>\n</body>\n</html>\n```\n\n# 图片的自适应\n\n除了布局和文本，\"自适应网页设计\"还必须实现图片的自动缩放。\n这只要一行CSS代码：\n　　`img { max-width: 100%;}`\n这行代码对于大多数嵌入网页的视频也有效，所以可以写成：\n　　`img, object { max-width: 100%;}`\n老版本的IE不支持max-width，所以只好写成：\n　　`img { width: 100%; }`\n此外，windows平台缩放图片时，可能出现图像失真现象。这时，可以尝试使用IE的专有命令：\n　　`img { -ms-interpolation-mode: bicubic; }`\n或者，Ethan Marcotte的imgSizer.js。\n　　`addLoadEvent(function() {`\n　　　　`var imgs = document.getElementById(\"content\").getElementsByTagName(\"img\");`\n　　　　`imgSizer.collate(imgs);`\n　　`});`\n不过，有条件的话，最好还是根据不同大小的屏幕，加载不同分辨率的图片。有很多方法可以做到这一条，服务器端和客户端都可以实现。","source":"_posts/Js背景图片加载失败时.md","raw":"\n---\ntitle: 背景图片加载失败时替换图片\nkeywords: 背景图片 加载失败\ntags: \n- Js\n- 图片\ncategories: note\ndate: 2016-04-28\n---\n\n# 背景图片加载失败时替换图片\n\n```html \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <script src=\"js.com/jquery-2.1.4.js\" type=\"text/javascript\"></script>\n    <style type=\"text/css\">\n    div {\n        width: 500px;\n        height: 500px;\n        background-image: url(images/default_action.jpg);\n        background-color: #000000;\n        background-repeat: no-repeat;\n    }\n    </style>\n</head>\n<body>\n    <div id=\"div\"></div>\n    <script type=\"text/javascript\">\n    //第一种方法（闭包）\n    window.onload = function() {\n        _imgError = (src) => {\n            let img = new Image();\n            img.src = src;\n            console.log(img);\n            if (img.width == 0) {\n                return '../img/bg.jpg'\n            } else {\n                return src\n            }\n        }\n        _imgError('images/default_action.jpg');\n    }\n    //第二种方法\n    var img = new Image();\n        img.src = 'images/active_new.png';\n        console.log(img);\n        if (img.width == 0) {\n            alert('图片加载失败')\n        } else {\n            var getId = document.getElementById(\"div\");\n            getId.style.backgroundImage = \"url(images/active_new.png)\";\n            alert('图片加载成功')\n        }\n    </script>\n</body>\n</html>\n```\n\n# 图片的自适应\n\n除了布局和文本，\"自适应网页设计\"还必须实现图片的自动缩放。\n这只要一行CSS代码：\n　　`img { max-width: 100%;}`\n这行代码对于大多数嵌入网页的视频也有效，所以可以写成：\n　　`img, object { max-width: 100%;}`\n老版本的IE不支持max-width，所以只好写成：\n　　`img { width: 100%; }`\n此外，windows平台缩放图片时，可能出现图像失真现象。这时，可以尝试使用IE的专有命令：\n　　`img { -ms-interpolation-mode: bicubic; }`\n或者，Ethan Marcotte的imgSizer.js。\n　　`addLoadEvent(function() {`\n　　　　`var imgs = document.getElementById(\"content\").getElementsByTagName(\"img\");`\n　　　　`imgSizer.collate(imgs);`\n　　`});`\n不过，有条件的话，最好还是根据不同大小的屏幕，加载不同分辨率的图片。有很多方法可以做到这一条，服务器端和客户端都可以实现。","slug":"Js背景图片加载失败时","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0wh00126atfpys1vlcd","content":"<h1 id=\"背景图片加载失败时替换图片\"><a href=\"#背景图片加载失败时替换图片\" class=\"headerlink\" title=\"背景图片加载失败时替换图片\"></a>背景图片加载失败时替换图片</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js.com/jquery-2.1.4.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    div &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        width: 500px;</span></span><br><span class=\"line\"><span class=\"undefined\">        height: 500px;</span></span><br><span class=\"line\"><span class=\"undefined\">        background-image: url(images/default_action.jpg);</span></span><br><span class=\"line\"><span class=\"undefined\">        background-color: #000000;</span></span><br><span class=\"line\"><span class=\"undefined\">        background-repeat: no-repeat;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"div\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//第一种方法（闭包）</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        _imgError = <span class=\"function\">(<span class=\"params\">src</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> img = <span class=\"keyword\">new</span> Image();</span></span><br><span class=\"line\"><span class=\"undefined\">            img.src = src;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(img);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (img.width == <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> <span class=\"string\">'../img/bg.jpg'</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> src</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        _imgError(<span class=\"string\">'images/default_action.jpg'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//第二种方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span></span><br><span class=\"line\"><span class=\"javascript\">        img.src = <span class=\"string\">'images/active_new.png'</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(img);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span> (img.width == <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            alert(<span class=\"string\">'图片加载失败'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> getId = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"div\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            getId.style.backgroundImage = <span class=\"string\">\"url(images/active_new.png)\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            alert(<span class=\"string\">'图片加载成功'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"图片的自适应\"><a href=\"#图片的自适应\" class=\"headerlink\" title=\"图片的自适应\"></a>图片的自适应</h1><p>除了布局和文本，”自适应网页设计”还必须实现图片的自动缩放。<br>这只要一行CSS代码：<br>　　<code>img { max-width: 100%;}</code><br>这行代码对于大多数嵌入网页的视频也有效，所以可以写成：<br>　　<code>img, object { max-width: 100%;}</code><br>老版本的IE不支持max-width，所以只好写成：<br>　　<code>img { width: 100%; }</code><br>此外，windows平台缩放图片时，可能出现图像失真现象。这时，可以尝试使用IE的专有命令：<br>　　<code>img { -ms-interpolation-mode: bicubic; }</code><br>或者，Ethan Marcotte的imgSizer.js。<br>　　<code>addLoadEvent(function() {</code><br>　　　　<code>var imgs = document.getElementById(&quot;content&quot;).getElementsByTagName(&quot;img&quot;);</code><br>　　　　<code>imgSizer.collate(imgs);</code><br>　　<code>});</code><br>不过，有条件的话，最好还是根据不同大小的屏幕，加载不同分辨率的图片。有很多方法可以做到这一条，服务器端和客户端都可以实现。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景图片加载失败时替换图片\"><a href=\"#背景图片加载失败时替换图片\" class=\"headerlink\" title=\"背景图片加载失败时替换图片\"></a>背景图片加载失败时替换图片</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js.com/jquery-2.1.4.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    div &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        width: 500px;</span></span><br><span class=\"line\"><span class=\"undefined\">        height: 500px;</span></span><br><span class=\"line\"><span class=\"undefined\">        background-image: url(images/default_action.jpg);</span></span><br><span class=\"line\"><span class=\"undefined\">        background-color: #000000;</span></span><br><span class=\"line\"><span class=\"undefined\">        background-repeat: no-repeat;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"div\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//第一种方法（闭包）</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        _imgError = <span class=\"function\">(<span class=\"params\">src</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> img = <span class=\"keyword\">new</span> Image();</span></span><br><span class=\"line\"><span class=\"undefined\">            img.src = src;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(img);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (img.width == <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> <span class=\"string\">'../img/bg.jpg'</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> src</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        _imgError(<span class=\"string\">'images/default_action.jpg'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//第二种方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span></span><br><span class=\"line\"><span class=\"javascript\">        img.src = <span class=\"string\">'images/active_new.png'</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(img);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span> (img.width == <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            alert(<span class=\"string\">'图片加载失败'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> getId = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"div\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            getId.style.backgroundImage = <span class=\"string\">\"url(images/active_new.png)\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            alert(<span class=\"string\">'图片加载成功'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"图片的自适应\"><a href=\"#图片的自适应\" class=\"headerlink\" title=\"图片的自适应\"></a>图片的自适应</h1><p>除了布局和文本，”自适应网页设计”还必须实现图片的自动缩放。<br>这只要一行CSS代码：<br>　　<code>img { max-width: 100%;}</code><br>这行代码对于大多数嵌入网页的视频也有效，所以可以写成：<br>　　<code>img, object { max-width: 100%;}</code><br>老版本的IE不支持max-width，所以只好写成：<br>　　<code>img { width: 100%; }</code><br>此外，windows平台缩放图片时，可能出现图像失真现象。这时，可以尝试使用IE的专有命令：<br>　　<code>img { -ms-interpolation-mode: bicubic; }</code><br>或者，Ethan Marcotte的imgSizer.js。<br>　　<code>addLoadEvent(function() {</code><br>　　　　<code>var imgs = document.getElementById(&quot;content&quot;).getElementsByTagName(&quot;img&quot;);</code><br>　　　　<code>imgSizer.collate(imgs);</code><br>　　<code>});</code><br>不过，有条件的话，最好还是根据不同大小的屏幕，加载不同分辨率的图片。有很多方法可以做到这一条，服务器端和客户端都可以实现。</p>\n"},{"title":"长按事件","keywords":"长按事件 拖拽事件","date":"2016-11-01T16:00:00.000Z","_content":"\n# 长按事件\n\n\t<!doctype html>\n\t<html>\n\t<head>\n\t    <meta charset=\"utf-8\">\n\t    <meta name=\"viewport\"\n\t          content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0\">\n\n\t    <title>无标题文档</title>\n\t    <style>\n\t        #test {\n\t            background: #F36;\n\t            width: 200px;\n\t            height: 200px;\n\t        }\n\t    </style>\n\t    <script language=\"javascript\" type=\"text/javascript\" src=\"http://javascript.01jcw.com/jquery-min.js\"></script>\n\n\t    <script>\n\t        $(function () {\n\n\t            $(\"#test\").on(\"touchstart\", function (e) {\n\t                e.preventDefault();\n\t                timeout = setTimeout(function () {\n\t                    alert(\"123\")\n\t                }, 1000)\n\n\t            });\n\t            $(\"#test\").on(\"touchend\", function (e) {\n\t                e.preventDefault();\n\t                clearTimeout(timeout);\n\n\t            });\n\t        })\n\n\n\t    </script>\n\t</head>\n\n\t<body style=\"overflow: hidden\">\n\t<div id=\"test\"></div>\n\t</body>\n\t</html>\n\n\n# 拖拽事件\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>Document</title>\n\t</head>\n\t<body>\n\t<!-- \t\n\t<svg width=\"100%\" height=\"100%\" version=\"1.1\"\n\txmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M50 48 L200 48 L200 52 L50 52 Z\" style=\"fill:#333;stroke:#333;stroke-width:0\"/>\n\t<path d=\"M200 45 L215 50 L200 55 Z\" />\n\t</svg> -->\n\n\n\n\t<div id=\"test\" style=\"height: 100px;width: 100px;background:pink;position:absolute;top:0;left:0;\"></div>\n\t<script>\n\t\ttest.onmousedown = function(e){\n\t\t\tconsole.log(event);\n\t\t\te = e || event;\n\t    //获取元素距离定位父级的x轴及y轴距离\n\t    var x0 = this.offsetLeft;\n\t    var y0 = this.offsetTop;\n\t    //获取此时鼠标距离视口左上角的x轴及y轴距离\n\t    var x1 = e.clientX;\n\t    var y1 = e.clientY;\n\n\t    document.onmousemove = function(e){\n\t    \te = e || event;\n\t        //获取此时鼠标距离视口左上角的x轴及y轴距离\n\t        x2 = e.clientX;\n\t        y2 = e.clientY;    \n\t        //计算此时元素应该距离视口左上角的x轴及y轴距离\n\t        var X = x0 + (x2 - x1);\n\t        var Y = y0 + (y2 - y1);\n\t        //将X和Y的值赋给left和top，使元素移动到相应位置\n\t        test.style.left = X + 'px';\n\t        test.style.top = Y + 'px';\n\t    }\n\n\t    document.onmouseup = function(e){\n\t        //当鼠标抬起时，拖拽结束，则将onmousemove赋值为null即可\n\t        document.onmousemove = null;\n\t    }\n\t}\n\t</script>\n\t</body>\n\t</html>\n","source":"_posts/Js长按事件.md","raw":"---\ntitle: 长按事件\nkeywords: 长按事件 拖拽事件\ncategories: note\ntags: \n- 长按拖拽\n- Js\ndate: 2016-11-02\n---\n\n# 长按事件\n\n\t<!doctype html>\n\t<html>\n\t<head>\n\t    <meta charset=\"utf-8\">\n\t    <meta name=\"viewport\"\n\t          content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0\">\n\n\t    <title>无标题文档</title>\n\t    <style>\n\t        #test {\n\t            background: #F36;\n\t            width: 200px;\n\t            height: 200px;\n\t        }\n\t    </style>\n\t    <script language=\"javascript\" type=\"text/javascript\" src=\"http://javascript.01jcw.com/jquery-min.js\"></script>\n\n\t    <script>\n\t        $(function () {\n\n\t            $(\"#test\").on(\"touchstart\", function (e) {\n\t                e.preventDefault();\n\t                timeout = setTimeout(function () {\n\t                    alert(\"123\")\n\t                }, 1000)\n\n\t            });\n\t            $(\"#test\").on(\"touchend\", function (e) {\n\t                e.preventDefault();\n\t                clearTimeout(timeout);\n\n\t            });\n\t        })\n\n\n\t    </script>\n\t</head>\n\n\t<body style=\"overflow: hidden\">\n\t<div id=\"test\"></div>\n\t</body>\n\t</html>\n\n\n# 拖拽事件\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>Document</title>\n\t</head>\n\t<body>\n\t<!-- \t\n\t<svg width=\"100%\" height=\"100%\" version=\"1.1\"\n\txmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M50 48 L200 48 L200 52 L50 52 Z\" style=\"fill:#333;stroke:#333;stroke-width:0\"/>\n\t<path d=\"M200 45 L215 50 L200 55 Z\" />\n\t</svg> -->\n\n\n\n\t<div id=\"test\" style=\"height: 100px;width: 100px;background:pink;position:absolute;top:0;left:0;\"></div>\n\t<script>\n\t\ttest.onmousedown = function(e){\n\t\t\tconsole.log(event);\n\t\t\te = e || event;\n\t    //获取元素距离定位父级的x轴及y轴距离\n\t    var x0 = this.offsetLeft;\n\t    var y0 = this.offsetTop;\n\t    //获取此时鼠标距离视口左上角的x轴及y轴距离\n\t    var x1 = e.clientX;\n\t    var y1 = e.clientY;\n\n\t    document.onmousemove = function(e){\n\t    \te = e || event;\n\t        //获取此时鼠标距离视口左上角的x轴及y轴距离\n\t        x2 = e.clientX;\n\t        y2 = e.clientY;    \n\t        //计算此时元素应该距离视口左上角的x轴及y轴距离\n\t        var X = x0 + (x2 - x1);\n\t        var Y = y0 + (y2 - y1);\n\t        //将X和Y的值赋给left和top，使元素移动到相应位置\n\t        test.style.left = X + 'px';\n\t        test.style.top = Y + 'px';\n\t    }\n\n\t    document.onmouseup = function(e){\n\t        //当鼠标抬起时，拖拽结束，则将onmousemove赋值为null即可\n\t        document.onmousemove = null;\n\t    }\n\t}\n\t</script>\n\t</body>\n\t</html>\n","slug":"Js长按事件","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0wk00156atfrhr3pjqm","content":"<h1 id=\"长按事件\"><a href=\"#长按事件\" class=\"headerlink\" title=\"长按事件\"></a>长按事件</h1><pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot;\n          content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0&quot;&gt;\n\n    &lt;title&gt;无标题文档&lt;/title&gt;\n    &lt;style&gt;\n        #test {\n            background: #F36;\n            width: 200px;\n            height: 200px;\n        }\n    &lt;/style&gt;\n    &lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;http://javascript.01jcw.com/jquery-min.js&quot;&gt;&lt;/script&gt;\n\n    &lt;script&gt;\n        $(function () {\n\n            $(&quot;#test&quot;).on(&quot;touchstart&quot;, function (e) {\n                e.preventDefault();\n                timeout = setTimeout(function () {\n                    alert(&quot;123&quot;)\n                }, 1000)\n\n            });\n            $(&quot;#test&quot;).on(&quot;touchend&quot;, function (e) {\n                e.preventDefault();\n                clearTimeout(timeout);\n\n            });\n        })\n\n\n    &lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body style=&quot;overflow: hidden&quot;&gt;\n&lt;div id=&quot;test&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><h1 id=\"拖拽事件\"><a href=\"#拖拽事件\" class=\"headerlink\" title=\"拖拽事件\"></a>拖拽事件</h1><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;!--     \n&lt;svg width=&quot;100%&quot; height=&quot;100%&quot; version=&quot;1.1&quot;\nxmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;\n&lt;path d=&quot;M50 48 L200 48 L200 52 L50 52 Z&quot; style=&quot;fill:#333;stroke:#333;stroke-width:0&quot;/&gt;\n&lt;path d=&quot;M200 45 L215 50 L200 55 Z&quot; /&gt;\n&lt;/svg&gt; --&gt;\n\n\n\n&lt;div id=&quot;test&quot; style=&quot;height: 100px;width: 100px;background:pink;position:absolute;top:0;left:0;&quot;&gt;&lt;/div&gt;\n&lt;script&gt;\n    test.onmousedown = function(e){\n        console.log(event);\n        e = e || event;\n    //获取元素距离定位父级的x轴及y轴距离\n    var x0 = this.offsetLeft;\n    var y0 = this.offsetTop;\n    //获取此时鼠标距离视口左上角的x轴及y轴距离\n    var x1 = e.clientX;\n    var y1 = e.clientY;\n\n    document.onmousemove = function(e){\n        e = e || event;\n        //获取此时鼠标距离视口左上角的x轴及y轴距离\n        x2 = e.clientX;\n        y2 = e.clientY;    \n        //计算此时元素应该距离视口左上角的x轴及y轴距离\n        var X = x0 + (x2 - x1);\n        var Y = y0 + (y2 - y1);\n        //将X和Y的值赋给left和top，使元素移动到相应位置\n        test.style.left = X + &apos;px&apos;;\n        test.style.top = Y + &apos;px&apos;;\n    }\n\n    document.onmouseup = function(e){\n        //当鼠标抬起时，拖拽结束，则将onmousemove赋值为null即可\n        document.onmousemove = null;\n    }\n}\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"长按事件\"><a href=\"#长按事件\" class=\"headerlink\" title=\"长按事件\"></a>长按事件</h1><pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot;\n          content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0&quot;&gt;\n\n    &lt;title&gt;无标题文档&lt;/title&gt;\n    &lt;style&gt;\n        #test {\n            background: #F36;\n            width: 200px;\n            height: 200px;\n        }\n    &lt;/style&gt;\n    &lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;http://javascript.01jcw.com/jquery-min.js&quot;&gt;&lt;/script&gt;\n\n    &lt;script&gt;\n        $(function () {\n\n            $(&quot;#test&quot;).on(&quot;touchstart&quot;, function (e) {\n                e.preventDefault();\n                timeout = setTimeout(function () {\n                    alert(&quot;123&quot;)\n                }, 1000)\n\n            });\n            $(&quot;#test&quot;).on(&quot;touchend&quot;, function (e) {\n                e.preventDefault();\n                clearTimeout(timeout);\n\n            });\n        })\n\n\n    &lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body style=&quot;overflow: hidden&quot;&gt;\n&lt;div id=&quot;test&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><h1 id=\"拖拽事件\"><a href=\"#拖拽事件\" class=\"headerlink\" title=\"拖拽事件\"></a>拖拽事件</h1><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;!--     \n&lt;svg width=&quot;100%&quot; height=&quot;100%&quot; version=&quot;1.1&quot;\nxmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;\n&lt;path d=&quot;M50 48 L200 48 L200 52 L50 52 Z&quot; style=&quot;fill:#333;stroke:#333;stroke-width:0&quot;/&gt;\n&lt;path d=&quot;M200 45 L215 50 L200 55 Z&quot; /&gt;\n&lt;/svg&gt; --&gt;\n\n\n\n&lt;div id=&quot;test&quot; style=&quot;height: 100px;width: 100px;background:pink;position:absolute;top:0;left:0;&quot;&gt;&lt;/div&gt;\n&lt;script&gt;\n    test.onmousedown = function(e){\n        console.log(event);\n        e = e || event;\n    //获取元素距离定位父级的x轴及y轴距离\n    var x0 = this.offsetLeft;\n    var y0 = this.offsetTop;\n    //获取此时鼠标距离视口左上角的x轴及y轴距离\n    var x1 = e.clientX;\n    var y1 = e.clientY;\n\n    document.onmousemove = function(e){\n        e = e || event;\n        //获取此时鼠标距离视口左上角的x轴及y轴距离\n        x2 = e.clientX;\n        y2 = e.clientY;    \n        //计算此时元素应该距离视口左上角的x轴及y轴距离\n        var X = x0 + (x2 - x1);\n        var Y = y0 + (y2 - y1);\n        //将X和Y的值赋给left和top，使元素移动到相应位置\n        test.style.left = X + &apos;px&apos;;\n        test.style.top = Y + &apos;px&apos;;\n    }\n\n    document.onmouseup = function(e){\n        //当鼠标抬起时，拖拽结束，则将onmousemove赋值为null即可\n        document.onmousemove = null;\n    }\n}\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"title":"Markdown语法简略说明(简体中文版)","keywords":"Markdown 语法 常用语法 Markdown写表格","date":"2017-02-09T16:00:00.000Z","_content":"\nMarkdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像*强调*。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。\n\nMarkdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想不是要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。\n\n# Markdown 语法\n## Markdown 常用语法\n### 先来一个标题\n    # 这是 <h1></h1>\n    ## 这是 <h2></h2>\n    ### 这是 <h3></h3>\n    #### 这是 <h4></h4>\n    ##### 这是 <h5></h5>\n    ###### 这是 <h6></h6>\n<!-- more -->\n### 引用\n> >引用里的引用\n> \n> 这段话就是一句引用的话\n\n    ------------代码域------------\n    >>引用里的引用   \n    > 这段话就是一句引用的话\n    ------------代码域------------\n\n### 列表\n*   Red\n*   Green\n*   Blue\n        ------------代码域------------\n            *   Red\n            *   Green\n            *   Blue\n        ------------代码域------------\n\n### 代码区块\n4个空格符即可\n\n    $(document).ready(function(){\n        alert(\"Hello World!\");\n    })\n\n### 分隔线\n***\n\n    ------------代码域------------\n    * * *\n    ***\n    *****\n    - - -\n    ---------------------------------------\n    ------------代码域------------\n\n### 区段元素——链接\nMarkdown 支持两种形式的链接语法： 行内式和参考式两种形式。\n以下只介绍行内式，更多详情请参考：[Markdown 语法简略说明 (简体中文版)](http://wowubuntu.com/markdown/#philosophy)\n\nThis is [an example](https://foxsnower.github.io/ 'this is title') inline link.\n[This link](https://foxsnower.github.io/ \"this is title\") has no title attribute.\n\n     This is [an example](https://foxsnower.github.io/ 'this is title') inline link.\n    [This link](https://foxsnower.github.io/ \"this is title\") has no title attribute.\n\n### 区段元素——强调\n*single asterisks*\n_single underscores_\n**double asterisks**\n__double underscores__\n\n    *single asterisks*\n    _single underscores_\n    **double asterisks**\n    __double underscores__\n\n### 区段元素——代码\n如果要标记一小段行内代码，你可以用反引号把它包起来（`），例如：\n\nUse the `printf()` function\n\n    Use the `printf()` function.\n\n``There is a literal backtick (`) here.``\n\n### 区段元素——图片\n\n    ![Alt text](/path/to/img.jpg)\n\n    ![Alt text](/path/to/img.jpg \"Optional title\")\n\n### 其它——自动链接\n<http://example.com/>\n\n    <http://example.com/>\n\n### 其它——反斜杠\n\\*literal asterisks\\*\n\n    \\*literal asterisks\\*\n    \\   反斜线\n    `   反引号\n    -   星号\n    _   底线\n    {}  花括号\n    []  方括号\n    ()  括弧\n    #   井字号\n    *   加号\n    +   减号\n    .   英文句点\n    !   惊叹号\n\n### 表格\n\n|表格|阿萨德|\n|:-:|:-:|\n|asd |asd |\n|asd |asd |\n|asd |asd |\n|asd |asd |\n|asd |asd |\n\n文章参考于：[Markdown 语法简略说明 (简体中文版)](http://wowubuntu.com/markdown/#philosophy)\n\n\n","source":"_posts/Markdown语法简略说明(简体中文版).md","raw":"---\ntitle: Markdown语法简略说明(简体中文版)\nkeywords: Markdown 语法 常用语法 Markdown写表格\ntags: Markdown\ncategories: tool\ndate: 2017-02-10\n---\n\nMarkdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像*强调*。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。\n\nMarkdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想不是要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。\n\n# Markdown 语法\n## Markdown 常用语法\n### 先来一个标题\n    # 这是 <h1></h1>\n    ## 这是 <h2></h2>\n    ### 这是 <h3></h3>\n    #### 这是 <h4></h4>\n    ##### 这是 <h5></h5>\n    ###### 这是 <h6></h6>\n<!-- more -->\n### 引用\n> >引用里的引用\n> \n> 这段话就是一句引用的话\n\n    ------------代码域------------\n    >>引用里的引用   \n    > 这段话就是一句引用的话\n    ------------代码域------------\n\n### 列表\n*   Red\n*   Green\n*   Blue\n        ------------代码域------------\n            *   Red\n            *   Green\n            *   Blue\n        ------------代码域------------\n\n### 代码区块\n4个空格符即可\n\n    $(document).ready(function(){\n        alert(\"Hello World!\");\n    })\n\n### 分隔线\n***\n\n    ------------代码域------------\n    * * *\n    ***\n    *****\n    - - -\n    ---------------------------------------\n    ------------代码域------------\n\n### 区段元素——链接\nMarkdown 支持两种形式的链接语法： 行内式和参考式两种形式。\n以下只介绍行内式，更多详情请参考：[Markdown 语法简略说明 (简体中文版)](http://wowubuntu.com/markdown/#philosophy)\n\nThis is [an example](https://foxsnower.github.io/ 'this is title') inline link.\n[This link](https://foxsnower.github.io/ \"this is title\") has no title attribute.\n\n     This is [an example](https://foxsnower.github.io/ 'this is title') inline link.\n    [This link](https://foxsnower.github.io/ \"this is title\") has no title attribute.\n\n### 区段元素——强调\n*single asterisks*\n_single underscores_\n**double asterisks**\n__double underscores__\n\n    *single asterisks*\n    _single underscores_\n    **double asterisks**\n    __double underscores__\n\n### 区段元素——代码\n如果要标记一小段行内代码，你可以用反引号把它包起来（`），例如：\n\nUse the `printf()` function\n\n    Use the `printf()` function.\n\n``There is a literal backtick (`) here.``\n\n### 区段元素——图片\n\n    ![Alt text](/path/to/img.jpg)\n\n    ![Alt text](/path/to/img.jpg \"Optional title\")\n\n### 其它——自动链接\n<http://example.com/>\n\n    <http://example.com/>\n\n### 其它——反斜杠\n\\*literal asterisks\\*\n\n    \\*literal asterisks\\*\n    \\   反斜线\n    `   反引号\n    -   星号\n    _   底线\n    {}  花括号\n    []  方括号\n    ()  括弧\n    #   井字号\n    *   加号\n    +   减号\n    .   英文句点\n    !   惊叹号\n\n### 表格\n\n|表格|阿萨德|\n|:-:|:-:|\n|asd |asd |\n|asd |asd |\n|asd |asd |\n|asd |asd |\n|asd |asd |\n\n文章参考于：[Markdown 语法简略说明 (简体中文版)](http://wowubuntu.com/markdown/#philosophy)\n\n\n","slug":"Markdown语法简略说明(简体中文版)","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0wm00176atfi2ps57rc","content":"<p>Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像<em>强调</em>。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p>\n<p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想不是要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p>\n<h1 id=\"Markdown-语法\"><a href=\"#Markdown-语法\" class=\"headerlink\" title=\"Markdown 语法\"></a>Markdown 语法</h1><h2 id=\"Markdown-常用语法\"><a href=\"#Markdown-常用语法\" class=\"headerlink\" title=\"Markdown 常用语法\"></a>Markdown 常用语法</h2><h3 id=\"先来一个标题\"><a href=\"#先来一个标题\" class=\"headerlink\" title=\"先来一个标题\"></a>先来一个标题</h3><pre><code># 这是 &lt;h1&gt;&lt;/h1&gt;\n## 这是 &lt;h2&gt;&lt;/h2&gt;\n### 这是 &lt;h3&gt;&lt;/h3&gt;\n#### 这是 &lt;h4&gt;&lt;/h4&gt;\n##### 这是 &lt;h5&gt;&lt;/h5&gt;\n###### 这是 &lt;h6&gt;&lt;/h6&gt;\n</code></pre><a id=\"more\"></a>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><blockquote>\n<blockquote>\n<p>引用里的引用</p>\n</blockquote>\n<p>这段话就是一句引用的话</p>\n</blockquote>\n<pre><code>------------代码域------------\n&gt;&gt;引用里的引用   \n&gt; 这段话就是一句引用的话\n------------代码域------------\n</code></pre><h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><ul>\n<li>Red</li>\n<li>Green</li>\n<li>Blue<pre><code>------------代码域------------\n    *   Red\n    *   Green\n    *   Blue\n------------代码域------------\n</code></pre></li>\n</ul>\n<h3 id=\"代码区块\"><a href=\"#代码区块\" class=\"headerlink\" title=\"代码区块\"></a>代码区块</h3><p>4个空格符即可</p>\n<pre><code>$(document).ready(function(){\n    alert(&quot;Hello World!&quot;);\n})\n</code></pre><h3 id=\"分隔线\"><a href=\"#分隔线\" class=\"headerlink\" title=\"分隔线\"></a>分隔线</h3><hr>\n<pre><code>------------代码域------------\n* * *\n***\n*****\n- - -\n---------------------------------------\n------------代码域------------\n</code></pre><h3 id=\"区段元素——链接\"><a href=\"#区段元素——链接\" class=\"headerlink\" title=\"区段元素——链接\"></a>区段元素——链接</h3><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。<br>以下只介绍行内式，更多详情请参考：<a href=\"http://wowubuntu.com/markdown/#philosophy\" target=\"_blank\" rel=\"noopener\">Markdown 语法简略说明 (简体中文版)</a></p>\n<p>This is <a href=\"https://foxsnower.github.io/\" title=\"this is title\" target=\"_blank\" rel=\"noopener\">an example</a> inline link.<br><a href=\"https://foxsnower.github.io/\" title=\"this is title\" target=\"_blank\" rel=\"noopener\">This link</a> has no title attribute.</p>\n<pre><code> This is [an example](https://foxsnower.github.io/ &apos;this is title&apos;) inline link.\n[This link](https://foxsnower.github.io/ &quot;this is title&quot;) has no title attribute.\n</code></pre><h3 id=\"区段元素——强调\"><a href=\"#区段元素——强调\" class=\"headerlink\" title=\"区段元素——强调\"></a>区段元素——强调</h3><p><em>single asterisks</em><br><em>single underscores</em><br><strong>double asterisks</strong><br><strong>double underscores</strong></p>\n<pre><code>*single asterisks*\n_single underscores_\n**double asterisks**\n__double underscores__\n</code></pre><h3 id=\"区段元素——代码\"><a href=\"#区段元素——代码\" class=\"headerlink\" title=\"区段元素——代码\"></a>区段元素——代码</h3><p>如果要标记一小段行内代码，你可以用反引号把它包起来（`），例如：</p>\n<p>Use the <code>printf()</code> function</p>\n<pre><code>Use the `printf()` function.\n</code></pre><p><code>There is a literal backtick (`) here.</code></p>\n<h3 id=\"区段元素——图片\"><a href=\"#区段元素——图片\" class=\"headerlink\" title=\"区段元素——图片\"></a>区段元素——图片</h3><pre><code>![Alt text](/path/to/img.jpg)\n\n![Alt text](/path/to/img.jpg &quot;Optional title&quot;)\n</code></pre><h3 id=\"其它——自动链接\"><a href=\"#其它——自动链接\" class=\"headerlink\" title=\"其它——自动链接\"></a>其它——自动链接</h3><p><a href=\"http://example.com/\" target=\"_blank\" rel=\"noopener\">http://example.com/</a></p>\n<pre><code>&lt;http://example.com/&gt;\n</code></pre><h3 id=\"其它——反斜杠\"><a href=\"#其它——反斜杠\" class=\"headerlink\" title=\"其它——反斜杠\"></a>其它——反斜杠</h3><p>*literal asterisks*</p>\n<pre><code>\\*literal asterisks\\*\n\\   反斜线\n`   反引号\n-   星号\n_   底线\n{}  花括号\n[]  方括号\n()  括弧\n#   井字号\n*   加号\n+   减号\n.   英文句点\n!   惊叹号\n</code></pre><h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">表格</th>\n<th style=\"text-align:center\">阿萨德</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">asd</td>\n<td style=\"text-align:center\">asd</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">asd</td>\n<td style=\"text-align:center\">asd</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">asd</td>\n<td style=\"text-align:center\">asd</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">asd</td>\n<td style=\"text-align:center\">asd</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">asd</td>\n<td style=\"text-align:center\">asd</td>\n</tr>\n</tbody>\n</table>\n<p>文章参考于：<a href=\"http://wowubuntu.com/markdown/#philosophy\" target=\"_blank\" rel=\"noopener\">Markdown 语法简略说明 (简体中文版)</a></p>\n","site":{"data":{}},"excerpt":"<p>Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像<em>强调</em>。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p>\n<p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想不是要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p>\n<h1 id=\"Markdown-语法\"><a href=\"#Markdown-语法\" class=\"headerlink\" title=\"Markdown 语法\"></a>Markdown 语法</h1><h2 id=\"Markdown-常用语法\"><a href=\"#Markdown-常用语法\" class=\"headerlink\" title=\"Markdown 常用语法\"></a>Markdown 常用语法</h2><h3 id=\"先来一个标题\"><a href=\"#先来一个标题\" class=\"headerlink\" title=\"先来一个标题\"></a>先来一个标题</h3><pre><code># 这是 &lt;h1&gt;&lt;/h1&gt;\n## 这是 &lt;h2&gt;&lt;/h2&gt;\n### 这是 &lt;h3&gt;&lt;/h3&gt;\n#### 这是 &lt;h4&gt;&lt;/h4&gt;\n##### 这是 &lt;h5&gt;&lt;/h5&gt;\n###### 这是 &lt;h6&gt;&lt;/h6&gt;\n</code></pre>","more":"<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><blockquote>\n<blockquote>\n<p>引用里的引用</p>\n</blockquote>\n<p>这段话就是一句引用的话</p>\n</blockquote>\n<pre><code>------------代码域------------\n&gt;&gt;引用里的引用   \n&gt; 这段话就是一句引用的话\n------------代码域------------\n</code></pre><h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><ul>\n<li>Red</li>\n<li>Green</li>\n<li>Blue<pre><code>------------代码域------------\n    *   Red\n    *   Green\n    *   Blue\n------------代码域------------\n</code></pre></li>\n</ul>\n<h3 id=\"代码区块\"><a href=\"#代码区块\" class=\"headerlink\" title=\"代码区块\"></a>代码区块</h3><p>4个空格符即可</p>\n<pre><code>$(document).ready(function(){\n    alert(&quot;Hello World!&quot;);\n})\n</code></pre><h3 id=\"分隔线\"><a href=\"#分隔线\" class=\"headerlink\" title=\"分隔线\"></a>分隔线</h3><hr>\n<pre><code>------------代码域------------\n* * *\n***\n*****\n- - -\n---------------------------------------\n------------代码域------------\n</code></pre><h3 id=\"区段元素——链接\"><a href=\"#区段元素——链接\" class=\"headerlink\" title=\"区段元素——链接\"></a>区段元素——链接</h3><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。<br>以下只介绍行内式，更多详情请参考：<a href=\"http://wowubuntu.com/markdown/#philosophy\" target=\"_blank\" rel=\"noopener\">Markdown 语法简略说明 (简体中文版)</a></p>\n<p>This is <a href=\"https://foxsnower.github.io/\" title=\"this is title\" target=\"_blank\" rel=\"noopener\">an example</a> inline link.<br><a href=\"https://foxsnower.github.io/\" title=\"this is title\" target=\"_blank\" rel=\"noopener\">This link</a> has no title attribute.</p>\n<pre><code> This is [an example](https://foxsnower.github.io/ &apos;this is title&apos;) inline link.\n[This link](https://foxsnower.github.io/ &quot;this is title&quot;) has no title attribute.\n</code></pre><h3 id=\"区段元素——强调\"><a href=\"#区段元素——强调\" class=\"headerlink\" title=\"区段元素——强调\"></a>区段元素——强调</h3><p><em>single asterisks</em><br><em>single underscores</em><br><strong>double asterisks</strong><br><strong>double underscores</strong></p>\n<pre><code>*single asterisks*\n_single underscores_\n**double asterisks**\n__double underscores__\n</code></pre><h3 id=\"区段元素——代码\"><a href=\"#区段元素——代码\" class=\"headerlink\" title=\"区段元素——代码\"></a>区段元素——代码</h3><p>如果要标记一小段行内代码，你可以用反引号把它包起来（`），例如：</p>\n<p>Use the <code>printf()</code> function</p>\n<pre><code>Use the `printf()` function.\n</code></pre><p><code>There is a literal backtick (`) here.</code></p>\n<h3 id=\"区段元素——图片\"><a href=\"#区段元素——图片\" class=\"headerlink\" title=\"区段元素——图片\"></a>区段元素——图片</h3><pre><code>![Alt text](/path/to/img.jpg)\n\n![Alt text](/path/to/img.jpg &quot;Optional title&quot;)\n</code></pre><h3 id=\"其它——自动链接\"><a href=\"#其它——自动链接\" class=\"headerlink\" title=\"其它——自动链接\"></a>其它——自动链接</h3><p><a href=\"http://example.com/\" target=\"_blank\" rel=\"noopener\">http://example.com/</a></p>\n<pre><code>&lt;http://example.com/&gt;\n</code></pre><h3 id=\"其它——反斜杠\"><a href=\"#其它——反斜杠\" class=\"headerlink\" title=\"其它——反斜杠\"></a>其它——反斜杠</h3><p>*literal asterisks*</p>\n<pre><code>\\*literal asterisks\\*\n\\   反斜线\n`   反引号\n-   星号\n_   底线\n{}  花括号\n[]  方括号\n()  括弧\n#   井字号\n*   加号\n+   减号\n.   英文句点\n!   惊叹号\n</code></pre><h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">表格</th>\n<th style=\"text-align:center\">阿萨德</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">asd</td>\n<td style=\"text-align:center\">asd</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">asd</td>\n<td style=\"text-align:center\">asd</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">asd</td>\n<td style=\"text-align:center\">asd</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">asd</td>\n<td style=\"text-align:center\">asd</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">asd</td>\n<td style=\"text-align:center\">asd</td>\n</tr>\n</tbody>\n</table>\n<p>文章参考于：<a href=\"http://wowubuntu.com/markdown/#philosophy\" target=\"_blank\" rel=\"noopener\">Markdown 语法简略说明 (简体中文版)</a></p>"},{"title":"React Native组件的生命周期","keywords":"React Native 组件 生命周期","date":"2016-08-10T16:00:00.000Z","_content":"\n我们通过构造一个简单的列表组件，深入了解组件各环节的运作流程，以下为详细代码：\n\n    var List =React.createClass({\n            //1、创建阶段\n            getDefaultProps:function(){\n                //在创建类的时候被调用\n                console.log(\"getDefaultProps\");\n                return{};\n            },\n            //2、实例化阶段\n            getInitialState:function(){\n                //获取this.state的默认值\n                console.log(\"getInitialState\");\n                return {};\n            },\n            componentWillMount:function(){\n                //在render之前调用此方法\n                //业务逻辑的处理都应该放在这里，如对state的操作等\n                console.log(\"componentWillMount\");\n            },\n            render:function(){\n                //渲染并返回一个虚拟的DOM\n                console.log(\"render\");\n                return(\n                   <div>hello <strong>{this.props.name}</strong></div>\n                    );\n            },\n            componentDidMount:function(){\n                //该方法发生在render方法之后。在该方法中，ReactJS会使用render方法返回的虚拟DOM对象来创建真实的DOM结构\n                console.log(\"componentDidMount\");\n            },\n            //3、更新阶段\n            componentWillRecieveProps:function(){\n                //该方法发生在this.props被修改或父组件调用setProps()方法之后\n                console.log(\"componentWillRecieveProps\");\n            },\n            shouldComponentUpdate:function(){\n                //是否需要更新\n                console.log(\"shouldComponentUpdate\");\n                return true;\n            },\n            componentWillUpdate:function(){\n                //将要更新\n                console.log(\"componentWillUpdate\");\n            },\n            componentDidUpdate:function(){\n                //更新完毕\n                console.log(\"componentDidUpdate\");\n            },\n            //4、销毁阶段\n            componentWillUnmount:function(){\n                //销毁时被调用\n                console.log(\"componentWillUnmount\");\n            }\n        })","source":"_posts/React Native组件的生命周期.md","raw":"---\ntitle: React Native组件的生命周期\nkeywords: React Native 组件 生命周期\ntags: React\ncategories: skill\ndate: 2016-08-11\n---\n\n我们通过构造一个简单的列表组件，深入了解组件各环节的运作流程，以下为详细代码：\n\n    var List =React.createClass({\n            //1、创建阶段\n            getDefaultProps:function(){\n                //在创建类的时候被调用\n                console.log(\"getDefaultProps\");\n                return{};\n            },\n            //2、实例化阶段\n            getInitialState:function(){\n                //获取this.state的默认值\n                console.log(\"getInitialState\");\n                return {};\n            },\n            componentWillMount:function(){\n                //在render之前调用此方法\n                //业务逻辑的处理都应该放在这里，如对state的操作等\n                console.log(\"componentWillMount\");\n            },\n            render:function(){\n                //渲染并返回一个虚拟的DOM\n                console.log(\"render\");\n                return(\n                   <div>hello <strong>{this.props.name}</strong></div>\n                    );\n            },\n            componentDidMount:function(){\n                //该方法发生在render方法之后。在该方法中，ReactJS会使用render方法返回的虚拟DOM对象来创建真实的DOM结构\n                console.log(\"componentDidMount\");\n            },\n            //3、更新阶段\n            componentWillRecieveProps:function(){\n                //该方法发生在this.props被修改或父组件调用setProps()方法之后\n                console.log(\"componentWillRecieveProps\");\n            },\n            shouldComponentUpdate:function(){\n                //是否需要更新\n                console.log(\"shouldComponentUpdate\");\n                return true;\n            },\n            componentWillUpdate:function(){\n                //将要更新\n                console.log(\"componentWillUpdate\");\n            },\n            componentDidUpdate:function(){\n                //更新完毕\n                console.log(\"componentDidUpdate\");\n            },\n            //4、销毁阶段\n            componentWillUnmount:function(){\n                //销毁时被调用\n                console.log(\"componentWillUnmount\");\n            }\n        })","slug":"React Native组件的生命周期","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0wp001a6atf10fqeva5","content":"<p>我们通过构造一个简单的列表组件，深入了解组件各环节的运作流程，以下为详细代码：</p>\n<pre><code>var List =React.createClass({\n        //1、创建阶段\n        getDefaultProps:function(){\n            //在创建类的时候被调用\n            console.log(&quot;getDefaultProps&quot;);\n            return{};\n        },\n        //2、实例化阶段\n        getInitialState:function(){\n            //获取this.state的默认值\n            console.log(&quot;getInitialState&quot;);\n            return {};\n        },\n        componentWillMount:function(){\n            //在render之前调用此方法\n            //业务逻辑的处理都应该放在这里，如对state的操作等\n            console.log(&quot;componentWillMount&quot;);\n        },\n        render:function(){\n            //渲染并返回一个虚拟的DOM\n            console.log(&quot;render&quot;);\n            return(\n               &lt;div&gt;hello &lt;strong&gt;{this.props.name}&lt;/strong&gt;&lt;/div&gt;\n                );\n        },\n        componentDidMount:function(){\n            //该方法发生在render方法之后。在该方法中，ReactJS会使用render方法返回的虚拟DOM对象来创建真实的DOM结构\n            console.log(&quot;componentDidMount&quot;);\n        },\n        //3、更新阶段\n        componentWillRecieveProps:function(){\n            //该方法发生在this.props被修改或父组件调用setProps()方法之后\n            console.log(&quot;componentWillRecieveProps&quot;);\n        },\n        shouldComponentUpdate:function(){\n            //是否需要更新\n            console.log(&quot;shouldComponentUpdate&quot;);\n            return true;\n        },\n        componentWillUpdate:function(){\n            //将要更新\n            console.log(&quot;componentWillUpdate&quot;);\n        },\n        componentDidUpdate:function(){\n            //更新完毕\n            console.log(&quot;componentDidUpdate&quot;);\n        },\n        //4、销毁阶段\n        componentWillUnmount:function(){\n            //销毁时被调用\n            console.log(&quot;componentWillUnmount&quot;);\n        }\n    })\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>我们通过构造一个简单的列表组件，深入了解组件各环节的运作流程，以下为详细代码：</p>\n<pre><code>var List =React.createClass({\n        //1、创建阶段\n        getDefaultProps:function(){\n            //在创建类的时候被调用\n            console.log(&quot;getDefaultProps&quot;);\n            return{};\n        },\n        //2、实例化阶段\n        getInitialState:function(){\n            //获取this.state的默认值\n            console.log(&quot;getInitialState&quot;);\n            return {};\n        },\n        componentWillMount:function(){\n            //在render之前调用此方法\n            //业务逻辑的处理都应该放在这里，如对state的操作等\n            console.log(&quot;componentWillMount&quot;);\n        },\n        render:function(){\n            //渲染并返回一个虚拟的DOM\n            console.log(&quot;render&quot;);\n            return(\n               &lt;div&gt;hello &lt;strong&gt;{this.props.name}&lt;/strong&gt;&lt;/div&gt;\n                );\n        },\n        componentDidMount:function(){\n            //该方法发生在render方法之后。在该方法中，ReactJS会使用render方法返回的虚拟DOM对象来创建真实的DOM结构\n            console.log(&quot;componentDidMount&quot;);\n        },\n        //3、更新阶段\n        componentWillRecieveProps:function(){\n            //该方法发生在this.props被修改或父组件调用setProps()方法之后\n            console.log(&quot;componentWillRecieveProps&quot;);\n        },\n        shouldComponentUpdate:function(){\n            //是否需要更新\n            console.log(&quot;shouldComponentUpdate&quot;);\n            return true;\n        },\n        componentWillUpdate:function(){\n            //将要更新\n            console.log(&quot;componentWillUpdate&quot;);\n        },\n        componentDidUpdate:function(){\n            //更新完毕\n            console.log(&quot;componentDidUpdate&quot;);\n        },\n        //4、销毁阶段\n        componentWillUnmount:function(){\n            //销毁时被调用\n            console.log(&quot;componentWillUnmount&quot;);\n        }\n    })\n</code></pre>"},{"title":"Sublime Text 3常用插件安装大法","keywords":"Sublime Text 3 常用插件 安装大法","date":"2016-10-14T16:00:00.000Z","_content":"### 安装Package Control的方法如下：\n\n点击菜单中的 “View”–“Show Console”（也可通过快捷键 Ctrl + ` 打开，不过可能因与系统其他软件快捷键冲突而打不开）调出 Console。然后把下面的代码粘贴进去后回车即可，需稍微等待一段时间。（以下代码可能会因更新而导致失效，请以[官网代码](https://packagecontrol.io/installation#st3)为准。）\n\n    import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)\n\n重启Sublime Text即可。\n\n<!--more-->\n\n### 1. Emmet\nEmmet的前身是大名鼎鼎的Zen coding，如果你从事Web前端开发的话，对该插件一定不会陌生。它使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度。\n\n    ul>li.item$*3\n\n按 `ctrl+e` 或`tab` 键，自动生成以下代码，快捷方便，是你必备安装的插件之一。\n\n    <ul>\n\t<li class=\"item1\"></li>\n\t<li class=\"item2\"></li>\n\t<li class=\"item3\"></li>\n\t</ul>\n\n附：[Emmet使用文档](http://docs.emmet.io/).\n\n### 2. HTML-CSS-JS Prettify\n\n从名字中就可以看出，这是一款美化 HTML 、CSS、JS及Json代码的插件。需要注意的是，必须先安装 Node.js（最好使用默认安装路径，否则安装完插件后还需修改配置文件）。\n\n按 `Ctrl+Shift+P` 或`Ctrl+Shift+H`或者 `右键–“HTML/CSS/JS Prettify”–“Prettify Code” `键，快捷方便，是你美化代码的插件。\n\n### 3. Sublime​Code​Intel\n\n支持所有 Komode Editor 支持的代码语言，如：JavaScript, Mason, XBL, XUL, RHTML, SCSS, Python, HTML, Ruby, Python3, XML, Sass, XSLT, Django, HTML5, Perl, CSS, Twig, Less, Smarty, Node.js, Tcl, TemplateToolkit, PHP等。\n\n提供以下功能：\n\n* 打开并跳转到函数/类等的符号定义位置\n* 实时显示模块/符号的自动补全功能\n* 在状态栏显示当前函数的相关信息\n\n跳转到定义位置（`Alt+Click` 或 `Control+Windows+Alt+Up`）、返回（`Control+Windows+Alt+Left`）\n\n### 4. AutoFileName\n\n一款在 Sublime Text 中可以自动补全文件路径及名称的插件。没有这个插件之前，如果我们要输入文件的路径，就需要凭自己的记忆来输，但是你能确保记得正确吗？能否记得图片是 jpg 还是 png 吗？想更快的输入文件名吗？那么，你肯定需要这款插件！\n\n调用方法\t\n\t\t`<img src=\"../\" />`\n\n\n### 5. jQuery\n一款自动补全 jQuery 函数的插件，带有语法高亮，并且包含几乎所有的 jQuery 方法。\n\n### 6. DocBlockr\nDocBlockr 是一款 Sublime Text 2 & 3 都可以使用的代码快注释插件。支持的语言有：JavaScript (including ES6), PHP, ActionScript, Haxe,CoffeeScript, TypeScript, Java, Groovy, Objective C, C, C++ and Rust.\n\n调用方法：输入 `/**` 后按 `Enter` 或者 `Tab`\n\n### 7. BracketHighlighter\n\nBracketHighlighter 是一款Sublime下匹配标签高亮的小插件，可以把匹配到的如 {}、()、”、””等对应的符号或者标签高亮显示。\n\n调用方法：选中标签即可显示\n\n\n### 8. 设置sublime text 3 里修改扩展名对应的文件类型？\n\n打开任意一个 x 文件，View -> Syntax -> Open all with current extension as","source":"_posts/Sublime Text3常用插件安装大法.md","raw":"\n---\ntitle: Sublime Text 3常用插件安装大法\nkeywords:  Sublime Text 3 常用插件 安装大法\ntags: Sublime\ncategories: tool\ndate: 2016-10-15\n---\n### 安装Package Control的方法如下：\n\n点击菜单中的 “View”–“Show Console”（也可通过快捷键 Ctrl + ` 打开，不过可能因与系统其他软件快捷键冲突而打不开）调出 Console。然后把下面的代码粘贴进去后回车即可，需稍微等待一段时间。（以下代码可能会因更新而导致失效，请以[官网代码](https://packagecontrol.io/installation#st3)为准。）\n\n    import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)\n\n重启Sublime Text即可。\n\n<!--more-->\n\n### 1. Emmet\nEmmet的前身是大名鼎鼎的Zen coding，如果你从事Web前端开发的话，对该插件一定不会陌生。它使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度。\n\n    ul>li.item$*3\n\n按 `ctrl+e` 或`tab` 键，自动生成以下代码，快捷方便，是你必备安装的插件之一。\n\n    <ul>\n\t<li class=\"item1\"></li>\n\t<li class=\"item2\"></li>\n\t<li class=\"item3\"></li>\n\t</ul>\n\n附：[Emmet使用文档](http://docs.emmet.io/).\n\n### 2. HTML-CSS-JS Prettify\n\n从名字中就可以看出，这是一款美化 HTML 、CSS、JS及Json代码的插件。需要注意的是，必须先安装 Node.js（最好使用默认安装路径，否则安装完插件后还需修改配置文件）。\n\n按 `Ctrl+Shift+P` 或`Ctrl+Shift+H`或者 `右键–“HTML/CSS/JS Prettify”–“Prettify Code” `键，快捷方便，是你美化代码的插件。\n\n### 3. Sublime​Code​Intel\n\n支持所有 Komode Editor 支持的代码语言，如：JavaScript, Mason, XBL, XUL, RHTML, SCSS, Python, HTML, Ruby, Python3, XML, Sass, XSLT, Django, HTML5, Perl, CSS, Twig, Less, Smarty, Node.js, Tcl, TemplateToolkit, PHP等。\n\n提供以下功能：\n\n* 打开并跳转到函数/类等的符号定义位置\n* 实时显示模块/符号的自动补全功能\n* 在状态栏显示当前函数的相关信息\n\n跳转到定义位置（`Alt+Click` 或 `Control+Windows+Alt+Up`）、返回（`Control+Windows+Alt+Left`）\n\n### 4. AutoFileName\n\n一款在 Sublime Text 中可以自动补全文件路径及名称的插件。没有这个插件之前，如果我们要输入文件的路径，就需要凭自己的记忆来输，但是你能确保记得正确吗？能否记得图片是 jpg 还是 png 吗？想更快的输入文件名吗？那么，你肯定需要这款插件！\n\n调用方法\t\n\t\t`<img src=\"../\" />`\n\n\n### 5. jQuery\n一款自动补全 jQuery 函数的插件，带有语法高亮，并且包含几乎所有的 jQuery 方法。\n\n### 6. DocBlockr\nDocBlockr 是一款 Sublime Text 2 & 3 都可以使用的代码快注释插件。支持的语言有：JavaScript (including ES6), PHP, ActionScript, Haxe,CoffeeScript, TypeScript, Java, Groovy, Objective C, C, C++ and Rust.\n\n调用方法：输入 `/**` 后按 `Enter` 或者 `Tab`\n\n### 7. BracketHighlighter\n\nBracketHighlighter 是一款Sublime下匹配标签高亮的小插件，可以把匹配到的如 {}、()、”、””等对应的符号或者标签高亮显示。\n\n调用方法：选中标签即可显示\n\n\n### 8. 设置sublime text 3 里修改扩展名对应的文件类型？\n\n打开任意一个 x 文件，View -> Syntax -> Open all with current extension as","slug":"Sublime Text3常用插件安装大法","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0ws001d6atf7sbpi95j","content":"<h3 id=\"安装Package-Control的方法如下：\"><a href=\"#安装Package-Control的方法如下：\" class=\"headerlink\" title=\"安装Package Control的方法如下：\"></a>安装Package Control的方法如下：</h3><p>点击菜单中的 “View”–“Show Console”（也可通过快捷键 Ctrl + ` 打开，不过可能因与系统其他软件快捷键冲突而打不开）调出 Console。然后把下面的代码粘贴进去后回车即可，需稍微等待一段时间。（以下代码可能会因更新而导致失效，请以<a href=\"https://packagecontrol.io/installation#st3\" target=\"_blank\" rel=\"noopener\">官网代码</a>为准。）</p>\n<pre><code>import urllib.request,os,hashlib; h = &apos;df21e130d211cfc94d9b0905775a7c0f&apos; + &apos;1e3d39e33b79698005270310898eea76&apos;; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &apos;http://packagecontrol.io/&apos; + pf.replace(&apos; &apos;, &apos;%20&apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&apos;Error validating download (got %s instead of %s), please try manual install&apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &apos;wb&apos; ).write(by)\n</code></pre><p>重启Sublime Text即可。</p>\n<a id=\"more\"></a>\n<h3 id=\"1-Emmet\"><a href=\"#1-Emmet\" class=\"headerlink\" title=\"1. Emmet\"></a>1. Emmet</h3><p>Emmet的前身是大名鼎鼎的Zen coding，如果你从事Web前端开发的话，对该插件一定不会陌生。它使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度。</p>\n<pre><code>ul&gt;li.item$*3\n</code></pre><p>按 <code>ctrl+e</code> 或<code>tab</code> 键，自动生成以下代码，快捷方便，是你必备安装的插件之一。</p>\n<pre><code>&lt;ul&gt;\n&lt;li class=&quot;item1&quot;&gt;&lt;/li&gt;\n&lt;li class=&quot;item2&quot;&gt;&lt;/li&gt;\n&lt;li class=&quot;item3&quot;&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre><p>附：<a href=\"http://docs.emmet.io/\" target=\"_blank\" rel=\"noopener\">Emmet使用文档</a>.</p>\n<h3 id=\"2-HTML-CSS-JS-Prettify\"><a href=\"#2-HTML-CSS-JS-Prettify\" class=\"headerlink\" title=\"2. HTML-CSS-JS Prettify\"></a>2. HTML-CSS-JS Prettify</h3><p>从名字中就可以看出，这是一款美化 HTML 、CSS、JS及Json代码的插件。需要注意的是，必须先安装 Node.js（最好使用默认安装路径，否则安装完插件后还需修改配置文件）。</p>\n<p>按 <code>Ctrl+Shift+P</code> 或<code>Ctrl+Shift+H</code>或者 <code>右键–“HTML/CSS/JS Prettify”–“Prettify Code”</code>键，快捷方便，是你美化代码的插件。</p>\n<h3 id=\"3-Sublime​Code​Intel\"><a href=\"#3-Sublime​Code​Intel\" class=\"headerlink\" title=\"3. Sublime​Code​Intel\"></a>3. Sublime​Code​Intel</h3><p>支持所有 Komode Editor 支持的代码语言，如：JavaScript, Mason, XBL, XUL, RHTML, SCSS, Python, HTML, Ruby, Python3, XML, Sass, XSLT, Django, HTML5, Perl, CSS, Twig, Less, Smarty, Node.js, Tcl, TemplateToolkit, PHP等。</p>\n<p>提供以下功能：</p>\n<ul>\n<li>打开并跳转到函数/类等的符号定义位置</li>\n<li>实时显示模块/符号的自动补全功能</li>\n<li>在状态栏显示当前函数的相关信息</li>\n</ul>\n<p>跳转到定义位置（<code>Alt+Click</code> 或 <code>Control+Windows+Alt+Up</code>）、返回（<code>Control+Windows+Alt+Left</code>）</p>\n<h3 id=\"4-AutoFileName\"><a href=\"#4-AutoFileName\" class=\"headerlink\" title=\"4. AutoFileName\"></a>4. AutoFileName</h3><p>一款在 Sublime Text 中可以自动补全文件路径及名称的插件。没有这个插件之前，如果我们要输入文件的路径，就需要凭自己的记忆来输，但是你能确保记得正确吗？能否记得图片是 jpg 还是 png 吗？想更快的输入文件名吗？那么，你肯定需要这款插件！</p>\n<p>调用方法<br>        <code>&lt;img src=&quot;../&quot; /&gt;</code></p>\n<h3 id=\"5-jQuery\"><a href=\"#5-jQuery\" class=\"headerlink\" title=\"5. jQuery\"></a>5. jQuery</h3><p>一款自动补全 jQuery 函数的插件，带有语法高亮，并且包含几乎所有的 jQuery 方法。</p>\n<h3 id=\"6-DocBlockr\"><a href=\"#6-DocBlockr\" class=\"headerlink\" title=\"6. DocBlockr\"></a>6. DocBlockr</h3><p>DocBlockr 是一款 Sublime Text 2 &amp; 3 都可以使用的代码快注释插件。支持的语言有：JavaScript (including ES6), PHP, ActionScript, Haxe,CoffeeScript, TypeScript, Java, Groovy, Objective C, C, C++ and Rust.</p>\n<p>调用方法：输入 <code>/**</code> 后按 <code>Enter</code> 或者 <code>Tab</code></p>\n<h3 id=\"7-BracketHighlighter\"><a href=\"#7-BracketHighlighter\" class=\"headerlink\" title=\"7. BracketHighlighter\"></a>7. BracketHighlighter</h3><p>BracketHighlighter 是一款Sublime下匹配标签高亮的小插件，可以把匹配到的如 {}、()、”、””等对应的符号或者标签高亮显示。</p>\n<p>调用方法：选中标签即可显示</p>\n<h3 id=\"8-设置sublime-text-3-里修改扩展名对应的文件类型？\"><a href=\"#8-设置sublime-text-3-里修改扩展名对应的文件类型？\" class=\"headerlink\" title=\"8. 设置sublime text 3 里修改扩展名对应的文件类型？\"></a>8. 设置sublime text 3 里修改扩展名对应的文件类型？</h3><p>打开任意一个 x 文件，View -&gt; Syntax -&gt; Open all with current extension as</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"安装Package-Control的方法如下：\"><a href=\"#安装Package-Control的方法如下：\" class=\"headerlink\" title=\"安装Package Control的方法如下：\"></a>安装Package Control的方法如下：</h3><p>点击菜单中的 “View”–“Show Console”（也可通过快捷键 Ctrl + ` 打开，不过可能因与系统其他软件快捷键冲突而打不开）调出 Console。然后把下面的代码粘贴进去后回车即可，需稍微等待一段时间。（以下代码可能会因更新而导致失效，请以<a href=\"https://packagecontrol.io/installation#st3\" target=\"_blank\" rel=\"noopener\">官网代码</a>为准。）</p>\n<pre><code>import urllib.request,os,hashlib; h = &apos;df21e130d211cfc94d9b0905775a7c0f&apos; + &apos;1e3d39e33b79698005270310898eea76&apos;; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &apos;http://packagecontrol.io/&apos; + pf.replace(&apos; &apos;, &apos;%20&apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&apos;Error validating download (got %s instead of %s), please try manual install&apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &apos;wb&apos; ).write(by)\n</code></pre><p>重启Sublime Text即可。</p>","more":"<h3 id=\"1-Emmet\"><a href=\"#1-Emmet\" class=\"headerlink\" title=\"1. Emmet\"></a>1. Emmet</h3><p>Emmet的前身是大名鼎鼎的Zen coding，如果你从事Web前端开发的话，对该插件一定不会陌生。它使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度。</p>\n<pre><code>ul&gt;li.item$*3\n</code></pre><p>按 <code>ctrl+e</code> 或<code>tab</code> 键，自动生成以下代码，快捷方便，是你必备安装的插件之一。</p>\n<pre><code>&lt;ul&gt;\n&lt;li class=&quot;item1&quot;&gt;&lt;/li&gt;\n&lt;li class=&quot;item2&quot;&gt;&lt;/li&gt;\n&lt;li class=&quot;item3&quot;&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre><p>附：<a href=\"http://docs.emmet.io/\" target=\"_blank\" rel=\"noopener\">Emmet使用文档</a>.</p>\n<h3 id=\"2-HTML-CSS-JS-Prettify\"><a href=\"#2-HTML-CSS-JS-Prettify\" class=\"headerlink\" title=\"2. HTML-CSS-JS Prettify\"></a>2. HTML-CSS-JS Prettify</h3><p>从名字中就可以看出，这是一款美化 HTML 、CSS、JS及Json代码的插件。需要注意的是，必须先安装 Node.js（最好使用默认安装路径，否则安装完插件后还需修改配置文件）。</p>\n<p>按 <code>Ctrl+Shift+P</code> 或<code>Ctrl+Shift+H</code>或者 <code>右键–“HTML/CSS/JS Prettify”–“Prettify Code”</code>键，快捷方便，是你美化代码的插件。</p>\n<h3 id=\"3-Sublime​Code​Intel\"><a href=\"#3-Sublime​Code​Intel\" class=\"headerlink\" title=\"3. Sublime​Code​Intel\"></a>3. Sublime​Code​Intel</h3><p>支持所有 Komode Editor 支持的代码语言，如：JavaScript, Mason, XBL, XUL, RHTML, SCSS, Python, HTML, Ruby, Python3, XML, Sass, XSLT, Django, HTML5, Perl, CSS, Twig, Less, Smarty, Node.js, Tcl, TemplateToolkit, PHP等。</p>\n<p>提供以下功能：</p>\n<ul>\n<li>打开并跳转到函数/类等的符号定义位置</li>\n<li>实时显示模块/符号的自动补全功能</li>\n<li>在状态栏显示当前函数的相关信息</li>\n</ul>\n<p>跳转到定义位置（<code>Alt+Click</code> 或 <code>Control+Windows+Alt+Up</code>）、返回（<code>Control+Windows+Alt+Left</code>）</p>\n<h3 id=\"4-AutoFileName\"><a href=\"#4-AutoFileName\" class=\"headerlink\" title=\"4. AutoFileName\"></a>4. AutoFileName</h3><p>一款在 Sublime Text 中可以自动补全文件路径及名称的插件。没有这个插件之前，如果我们要输入文件的路径，就需要凭自己的记忆来输，但是你能确保记得正确吗？能否记得图片是 jpg 还是 png 吗？想更快的输入文件名吗？那么，你肯定需要这款插件！</p>\n<p>调用方法<br>        <code>&lt;img src=&quot;../&quot; /&gt;</code></p>\n<h3 id=\"5-jQuery\"><a href=\"#5-jQuery\" class=\"headerlink\" title=\"5. jQuery\"></a>5. jQuery</h3><p>一款自动补全 jQuery 函数的插件，带有语法高亮，并且包含几乎所有的 jQuery 方法。</p>\n<h3 id=\"6-DocBlockr\"><a href=\"#6-DocBlockr\" class=\"headerlink\" title=\"6. DocBlockr\"></a>6. DocBlockr</h3><p>DocBlockr 是一款 Sublime Text 2 &amp; 3 都可以使用的代码快注释插件。支持的语言有：JavaScript (including ES6), PHP, ActionScript, Haxe,CoffeeScript, TypeScript, Java, Groovy, Objective C, C, C++ and Rust.</p>\n<p>调用方法：输入 <code>/**</code> 后按 <code>Enter</code> 或者 <code>Tab</code></p>\n<h3 id=\"7-BracketHighlighter\"><a href=\"#7-BracketHighlighter\" class=\"headerlink\" title=\"7. BracketHighlighter\"></a>7. BracketHighlighter</h3><p>BracketHighlighter 是一款Sublime下匹配标签高亮的小插件，可以把匹配到的如 {}、()、”、””等对应的符号或者标签高亮显示。</p>\n<p>调用方法：选中标签即可显示</p>\n<h3 id=\"8-设置sublime-text-3-里修改扩展名对应的文件类型？\"><a href=\"#8-设置sublime-text-3-里修改扩展名对应的文件类型？\" class=\"headerlink\" title=\"8. 设置sublime text 3 里修改扩展名对应的文件类型？\"></a>8. 设置sublime text 3 里修改扩展名对应的文件类型？</h3><p>打开任意一个 x 文件，View -&gt; Syntax -&gt; Open all with current extension as</p>"},{"title":"在Sublime Text创建一个JavaScript控制台","keywords":"Sublime Text JavaScript 控制台 调试脚本 Node.js","date":"2016-10-13T16:00:00.000Z","_content":"\n\n\nJavaScript控制台可以方便的调试你的脚本，并获得结果。虽然Sublime Text为许多其他脚本内置了Build Systems，但并没有为JavaScript内置Build Systems。一般人都会创建一个.html文件，把.js文件引入进去，然后用浏览器的控制台来检查你脚本的运行结果。你需要不断的切换窗口、刷新浏览器。幸运的是，你可以简单快速的为Sublime Text创建一个JavaScript Build Systems。\n\n\n今天只分享一种通过Node.js来实现的方法，如果你是用的Mac OS X系统，还有一种通过JSC来实现的方法，这里就不做分享了。\n\nNode.js是一个在服务器上可以用来运行JavaScript的平台。然而，你也可以把它安装到本地计算机上，提供一种比使用浏览器相对来说简单一点方法来运行JavaScript并获得结果。\n\n### 一、创建Build Systems\n\n* 下载并运行Node。安装过程全部使用默认项。\n* 打开“Tools”–“Build System”–“New Build System”。\n* 清空Sublime Text打开的窗口，并把下面的代码粘贴进去。\n* 按 `Ctrl+S 保存文件，把文件保存在默认的User文件夹下，命名为“node.sublime-build”。现在你已经完成创建Build System来了。\n\n### 二、使用\n\n1. 在Sublime Text中打开你想运行的JavaScript文件。\n2. 打开“Tools”–“Build System”–“Node”，即你刚刚创建的Build System。\n3. 使用 Ctrl+B 或者工具栏中“Tools”下的“Build”运行你的JavaScript脚本。现在窗口的底部就会出现一个控制台，显示你脚本的运行结果。","source":"_posts/Sublime Text创建一个JavaScript控制台.md","raw":"---\ntitle: 在Sublime Text创建一个JavaScript控制台\nkeywords: Sublime Text JavaScript 控制台 调试脚本 Node.js\ncategories: tool\ntags: Sublime\ndate: 2016-10-14\n---\n\n\n\nJavaScript控制台可以方便的调试你的脚本，并获得结果。虽然Sublime Text为许多其他脚本内置了Build Systems，但并没有为JavaScript内置Build Systems。一般人都会创建一个.html文件，把.js文件引入进去，然后用浏览器的控制台来检查你脚本的运行结果。你需要不断的切换窗口、刷新浏览器。幸运的是，你可以简单快速的为Sublime Text创建一个JavaScript Build Systems。\n\n\n今天只分享一种通过Node.js来实现的方法，如果你是用的Mac OS X系统，还有一种通过JSC来实现的方法，这里就不做分享了。\n\nNode.js是一个在服务器上可以用来运行JavaScript的平台。然而，你也可以把它安装到本地计算机上，提供一种比使用浏览器相对来说简单一点方法来运行JavaScript并获得结果。\n\n### 一、创建Build Systems\n\n* 下载并运行Node。安装过程全部使用默认项。\n* 打开“Tools”–“Build System”–“New Build System”。\n* 清空Sublime Text打开的窗口，并把下面的代码粘贴进去。\n* 按 `Ctrl+S 保存文件，把文件保存在默认的User文件夹下，命名为“node.sublime-build”。现在你已经完成创建Build System来了。\n\n### 二、使用\n\n1. 在Sublime Text中打开你想运行的JavaScript文件。\n2. 打开“Tools”–“Build System”–“Node”，即你刚刚创建的Build System。\n3. 使用 Ctrl+B 或者工具栏中“Tools”下的“Build”运行你的JavaScript脚本。现在窗口的底部就会出现一个控制台，显示你脚本的运行结果。","slug":"Sublime Text创建一个JavaScript控制台","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0wu001h6atf7h8tycrg","content":"<p>JavaScript控制台可以方便的调试你的脚本，并获得结果。虽然Sublime Text为许多其他脚本内置了Build Systems，但并没有为JavaScript内置Build Systems。一般人都会创建一个.html文件，把.js文件引入进去，然后用浏览器的控制台来检查你脚本的运行结果。你需要不断的切换窗口、刷新浏览器。幸运的是，你可以简单快速的为Sublime Text创建一个JavaScript Build Systems。</p>\n<p>今天只分享一种通过Node.js来实现的方法，如果你是用的Mac OS X系统，还有一种通过JSC来实现的方法，这里就不做分享了。</p>\n<p>Node.js是一个在服务器上可以用来运行JavaScript的平台。然而，你也可以把它安装到本地计算机上，提供一种比使用浏览器相对来说简单一点方法来运行JavaScript并获得结果。</p>\n<h3 id=\"一、创建Build-Systems\"><a href=\"#一、创建Build-Systems\" class=\"headerlink\" title=\"一、创建Build Systems\"></a>一、创建Build Systems</h3><ul>\n<li>下载并运行Node。安装过程全部使用默认项。</li>\n<li>打开“Tools”–“Build System”–“New Build System”。</li>\n<li>清空Sublime Text打开的窗口，并把下面的代码粘贴进去。</li>\n<li>按 `Ctrl+S 保存文件，把文件保存在默认的User文件夹下，命名为“node.sublime-build”。现在你已经完成创建Build System来了。</li>\n</ul>\n<h3 id=\"二、使用\"><a href=\"#二、使用\" class=\"headerlink\" title=\"二、使用\"></a>二、使用</h3><ol>\n<li>在Sublime Text中打开你想运行的JavaScript文件。</li>\n<li>打开“Tools”–“Build System”–“Node”，即你刚刚创建的Build System。</li>\n<li>使用 Ctrl+B 或者工具栏中“Tools”下的“Build”运行你的JavaScript脚本。现在窗口的底部就会出现一个控制台，显示你脚本的运行结果。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>JavaScript控制台可以方便的调试你的脚本，并获得结果。虽然Sublime Text为许多其他脚本内置了Build Systems，但并没有为JavaScript内置Build Systems。一般人都会创建一个.html文件，把.js文件引入进去，然后用浏览器的控制台来检查你脚本的运行结果。你需要不断的切换窗口、刷新浏览器。幸运的是，你可以简单快速的为Sublime Text创建一个JavaScript Build Systems。</p>\n<p>今天只分享一种通过Node.js来实现的方法，如果你是用的Mac OS X系统，还有一种通过JSC来实现的方法，这里就不做分享了。</p>\n<p>Node.js是一个在服务器上可以用来运行JavaScript的平台。然而，你也可以把它安装到本地计算机上，提供一种比使用浏览器相对来说简单一点方法来运行JavaScript并获得结果。</p>\n<h3 id=\"一、创建Build-Systems\"><a href=\"#一、创建Build-Systems\" class=\"headerlink\" title=\"一、创建Build Systems\"></a>一、创建Build Systems</h3><ul>\n<li>下载并运行Node。安装过程全部使用默认项。</li>\n<li>打开“Tools”–“Build System”–“New Build System”。</li>\n<li>清空Sublime Text打开的窗口，并把下面的代码粘贴进去。</li>\n<li>按 `Ctrl+S 保存文件，把文件保存在默认的User文件夹下，命名为“node.sublime-build”。现在你已经完成创建Build System来了。</li>\n</ul>\n<h3 id=\"二、使用\"><a href=\"#二、使用\" class=\"headerlink\" title=\"二、使用\"></a>二、使用</h3><ol>\n<li>在Sublime Text中打开你想运行的JavaScript文件。</li>\n<li>打开“Tools”–“Build System”–“Node”，即你刚刚创建的Build System。</li>\n<li>使用 Ctrl+B 或者工具栏中“Tools”下的“Build”运行你的JavaScript脚本。现在窗口的底部就会出现一个控制台，显示你脚本的运行结果。</li>\n</ol>\n"},{"title":"Vue-Node-MongoDB完整框架搭建","keywords":"Vue Node MongoDB 完整框架搭建","date":"2017-05-24T16:00:00.000Z","_content":"\n这是一个用现代最流行框架搭建的环境，从开发到正式部署，实现全栈开发不再是梦，它以Vue 为前端框架，Node 为后台支持，MongoDB为数据库，，我们跟着以下步骤一步步下来:\n\n# 思路\n\n首先我们要整理好整个工作流程： \n1. 前后端分离，各自开发。这里前后端分离是这样的：前端用Vue开发静态页面，路由通过Vue-Router进行，后端用Node仅用于编写API给前端调用获取数据。 \n2. 前端开发时通过Vue-Cli中提供的proxyTable进行代理，由此可跨域调用Node编写的API。 \n3. 前后端各自开发完成，测试无误后，前端通过webpack打包压缩，后端拉取前端打包压缩好的文件即部署完成。\n\n# 以登录为例\n\n安装node\n\n> 此处不多说，可网上查阅安装过程\n\n安装Vue-Cli \n\n\tnpm i -g vue-cli\n\n去到你想要放置项目的目录，进行初始化 \n\n\tvue init webpack XXX（你想要项目的名字）\n\n按提示一直下一步，完成后按提示 \n\n\tcd XXX \n\tnpm install （这里建议使用淘宝镜像cnpm，不然墙外的东西……） \n\tnpm run dev \n\t\n> 设置镜像加速,在cmd输入 \n> npm config set registry https://registry.npm.taobao.org --global\n> npm config set disturl https://npm.taobao.org/dist --global\n\n如无意外你就会看到下图，证明成功了 \n\n![vue成功返回的图片](../../../../images/vue-node-mongodb/vue.png)\n\n如果出现一些意外有可能是端口号被占用，解决方法有\n\n* 开始---->运行---->cmd，或者是window+R组合键，调出命令窗口\n* 输入命令：netstat -ano，列出所有端口的情况。在列表中我们观察被占用的端口，比如是49157，首先找到它。\n* 查看被占用端口对应的PID，输入命令：netstat -aon|findstr \"49157\"，回车，记下最后一位数字，即PID,这里是2720\n* 我们打开任务管理器，切换到进程选项卡，在PID一列查看2720对应的进程是谁，如果看不到PID这一列\n* 则我们点击查看--->选择列，将PID(进程标示符)前面的勾打上，点击确定。\n* 这样我们就看到了PID这一列标识，看一下2720对应的进程是谁，如果没有，我们把下面的显示所有用户的进程前面的勾打上，就可以看到了，映像名称是svchost.exe，描述是，Windows的主进程,与上面命令查看的完全一致。\n\n# Longin.Vue\n\n```html\n<template>\n<input class=\"form-control\" id=\"inputEmail3\" placeholder=\"请输入账号\" v-model=\"account\">\n<input type=\"password\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"请输入密码\" v-model=\"password\">\n<button type=\"submit\" class=\"btn btn-default\" @click=\"login\">登录</button>\n</template>\n<script>\n    export default {\n    data() {\n        return {\n            account : '',\n            password : ''\n        }\n    },\n    methods:{\n      login() {\n        // 获取已有账号密码\n        this.$http.get('/api/login/getAccount')\n          .then((response) => {\n            // 响应成功回调\n            console.log(response)\n            let params = { \n              account : this.account,\n              password : this.password\n            };\n            // 创建一个账号密码\n            return this.$http.post('/api/login/createAccount',params);\n          })\n          .then((response) => {\n            console.log(response)\n          })\n          .catch((reject) => {\n            console.log(reject)\n          });\n        }\n      }\n    }\n</script>\n```\n\n# 搭建Node\n在项目的根目录新建一个叫server的目录，用于放置Node的东西。进入server目录，再新建三个js文件： \n- index.js （入口文件） \n- db.js （设置数据库相关） \n- api.js （编写接口） \n\n## 这里使用的Node框架是Express。安装Express： \n\n\tnpm install express –save\n\t\n### index.js\n\n```js\n// 引入编写好的api\nconst api = require('./api'); \n// 引入文件模块\nconst fs = require('fs');\n// 引入处理路径的模块\nconst path = require('path');\n// 引入处理post数据的模块\nconst bodyParser = require('body-parser')\n// 引入Express\nconst express = require('express');\nconst app = express();\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(api);\n// 访问静态资源文件 这里是访问所有dist目录下的静态资源文件\napp.use(express.static(path.resolve(__dirname, '../dist')))\n// 因为是单页应用 所有请求都走/dist/index.html\napp.get('*', function(req, res) {\n    const html = fs.readFileSync(path.resolve(__dirname, '../dist/index.html'), 'utf-8')\n    res.send(html)\n})\n// 监听8088端口\napp.listen(8088);\nconsole.log('success listen…………');\n```\n\n### db.js\n\n这个js文件主要用于配置mongoDB相关东西.我们这里使用mongoose 中间件来连接mongoDB.mongoDB安装完之后，我们需要自己手动去新建一个文件夹用于放置mongoDB的数据。我的mongoDB安装在E盘，所以也在E盘根目录创建一个叫mongo-data的文件夹（名字随便取），进入该文件夹，再新建一个名叫db的文件夹。当我们去启动mongoDB服务时，我们需要指定该路径。如何开启mongoDB服务？进入mongoDB所在目录，再进入它的bin目录，敲这条命令： \n\n\tmongod.exe –dbpath e:\\mongo-data\\db\n\n\t\n```js\n// Schema、Model、Entity或者Documents的关系请牢记，Schema生成Model，Model创造Entity，Model和Entity都可对数据库操作造成影响，但Model比Entity更具操作性。\nconst mongoose = require('mongoose');\n// 连接数据库 如果不自己创建 默认test数据库会自动生成\nmongoose.connect('mongodb://localhost/test');\n// 为这次连接绑定事件\nconst db = mongoose.connection;\ndb.once('error',() => console.log('Mongo connection error'));\ndb.once('open',() => console.log('Mongo connection successed'));\n/************** 定义模式loginSchema **************/\nconst loginSchema = mongoose.Schema({\n    account : String,\n    password : String\n});\n/************** 定义模型Model **************/\nconst Models = {\n    Login : mongoose.model('Login',loginSchema)\n}\nmodule.exports = Models;\n```\n\n\n### api.js\n\n```js\n\"use strict\";\nconst models = require('./db');\nconst express = require('express');\nconst router = express.Router();\n/************** 创建(create) 读取(get) 更新(update) 删除(delete) **************/\n// 创建账号接口\nrouter.post('/api/login/createAccount',(req,res) => {\n    // 这里的req.body能够使用就在index.js中引入了const bodyParser = require('body-parser')\n    let newAccount = new models.Login({\n        account : req.body.account,\n        password : req.body.password\n    });\n    // 保存数据newAccount数据进mongoDB\n    newAccount.save((err,data) => {\n        if (err) {\n            res.send(err);\n        } else {\n            res.send('createAccount successed');\n        }\n    });\n});\n// 获取已有账号接口\nrouter.get('/api/login/getAccount',(req,res) => {\n    // 通过模型去查找数据库\n    models.Login.find((err,data) => {\n        if (err) {\n            res.send(err);\n        } else {\n            res.send(data);\n        }\n    });\n});\nmodule.exports = router;\n```\n\n至此我们的后端代码就编写好了，进入server目录，敲上`node index`命令，node就会跑起来，这时在浏览器输入http://localhost:8088/api/login/getAccount就能访问到这个接口了 \n\n现在我们点击登录按钮去请求接口，当然还是不行的，因为使用npm run dev 进行开发时，其实webpack会启动一个8080的web服务用于我们进行开发，而我们后端是在8088端口的，所以我们肯定请求不到后端的接口。怎么办？跨域问题相信前端都很熟悉，难道我们又要去搞一遍解决这些问题？我们只是想开发的时候能调到后端的接口而已…… \n\n我们会发现有有一个proxyTable，这就是用来开启一个代理服务从而解决我们这个问题的：Vue-Cli官方描述。 \n于是，我们写成这样：\n\n```js\n proxyTable: {\n        '/api': {\n        target: 'http://localhost:8088/api/',\n        changeOrigin: true,\n        pathRewrite: {\n          '^/api': ''\n        }\n      }\n    }\n```\n\n这时，我们在前端接口地址前加上/api，就会指向http://localhost:8088/api/，于是我们就能访问到后端的接口了！让我们来点击一下登录按钮，会发现接口请求成功了！再去数据库看看！也插入了一条新数据！成功！ \n\nnpm run build 这就生成了一个dist目录，里面就是打包出来的东西。 \n\n现在回过头来看server里面的入口文件index.js\n\n```js\n// 访问静态资源文件 这里是访问所有dist目录下的静态资源文件\napp.use(express.static(path.resolve(__dirname, '../dist')))\n// 因为是单页应用 所有请求都走/dist/index.html\napp.get('*', function(req, res) {\n    const html = fs.readFileSync(path.resolve(__dirname, '../dist/index.html'), 'utf-8')\n    res.send(html)\n})\n// 监听8088端口\napp.listen(8088);\n```\n\n这里的关键是express.static，利用 Express 托管静态文件。于是我们才能访问到前端打包出来的静态页面index.html。 \n最后，我们在浏览器输入http://localhost:8088/，就会跳到index.html。","source":"_posts/Vue Node MongoDB三合一完整开发项目.md","raw":"---\ntitle: Vue-Node-MongoDB完整框架搭建\nkeywords: Vue Node MongoDB 完整框架搭建\ntags: Markdown\ncategories: skill\ndate: 2017-05-25\n---\n\n这是一个用现代最流行框架搭建的环境，从开发到正式部署，实现全栈开发不再是梦，它以Vue 为前端框架，Node 为后台支持，MongoDB为数据库，，我们跟着以下步骤一步步下来:\n\n# 思路\n\n首先我们要整理好整个工作流程： \n1. 前后端分离，各自开发。这里前后端分离是这样的：前端用Vue开发静态页面，路由通过Vue-Router进行，后端用Node仅用于编写API给前端调用获取数据。 \n2. 前端开发时通过Vue-Cli中提供的proxyTable进行代理，由此可跨域调用Node编写的API。 \n3. 前后端各自开发完成，测试无误后，前端通过webpack打包压缩，后端拉取前端打包压缩好的文件即部署完成。\n\n# 以登录为例\n\n安装node\n\n> 此处不多说，可网上查阅安装过程\n\n安装Vue-Cli \n\n\tnpm i -g vue-cli\n\n去到你想要放置项目的目录，进行初始化 \n\n\tvue init webpack XXX（你想要项目的名字）\n\n按提示一直下一步，完成后按提示 \n\n\tcd XXX \n\tnpm install （这里建议使用淘宝镜像cnpm，不然墙外的东西……） \n\tnpm run dev \n\t\n> 设置镜像加速,在cmd输入 \n> npm config set registry https://registry.npm.taobao.org --global\n> npm config set disturl https://npm.taobao.org/dist --global\n\n如无意外你就会看到下图，证明成功了 \n\n![vue成功返回的图片](../../../../images/vue-node-mongodb/vue.png)\n\n如果出现一些意外有可能是端口号被占用，解决方法有\n\n* 开始---->运行---->cmd，或者是window+R组合键，调出命令窗口\n* 输入命令：netstat -ano，列出所有端口的情况。在列表中我们观察被占用的端口，比如是49157，首先找到它。\n* 查看被占用端口对应的PID，输入命令：netstat -aon|findstr \"49157\"，回车，记下最后一位数字，即PID,这里是2720\n* 我们打开任务管理器，切换到进程选项卡，在PID一列查看2720对应的进程是谁，如果看不到PID这一列\n* 则我们点击查看--->选择列，将PID(进程标示符)前面的勾打上，点击确定。\n* 这样我们就看到了PID这一列标识，看一下2720对应的进程是谁，如果没有，我们把下面的显示所有用户的进程前面的勾打上，就可以看到了，映像名称是svchost.exe，描述是，Windows的主进程,与上面命令查看的完全一致。\n\n# Longin.Vue\n\n```html\n<template>\n<input class=\"form-control\" id=\"inputEmail3\" placeholder=\"请输入账号\" v-model=\"account\">\n<input type=\"password\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"请输入密码\" v-model=\"password\">\n<button type=\"submit\" class=\"btn btn-default\" @click=\"login\">登录</button>\n</template>\n<script>\n    export default {\n    data() {\n        return {\n            account : '',\n            password : ''\n        }\n    },\n    methods:{\n      login() {\n        // 获取已有账号密码\n        this.$http.get('/api/login/getAccount')\n          .then((response) => {\n            // 响应成功回调\n            console.log(response)\n            let params = { \n              account : this.account,\n              password : this.password\n            };\n            // 创建一个账号密码\n            return this.$http.post('/api/login/createAccount',params);\n          })\n          .then((response) => {\n            console.log(response)\n          })\n          .catch((reject) => {\n            console.log(reject)\n          });\n        }\n      }\n    }\n</script>\n```\n\n# 搭建Node\n在项目的根目录新建一个叫server的目录，用于放置Node的东西。进入server目录，再新建三个js文件： \n- index.js （入口文件） \n- db.js （设置数据库相关） \n- api.js （编写接口） \n\n## 这里使用的Node框架是Express。安装Express： \n\n\tnpm install express –save\n\t\n### index.js\n\n```js\n// 引入编写好的api\nconst api = require('./api'); \n// 引入文件模块\nconst fs = require('fs');\n// 引入处理路径的模块\nconst path = require('path');\n// 引入处理post数据的模块\nconst bodyParser = require('body-parser')\n// 引入Express\nconst express = require('express');\nconst app = express();\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(api);\n// 访问静态资源文件 这里是访问所有dist目录下的静态资源文件\napp.use(express.static(path.resolve(__dirname, '../dist')))\n// 因为是单页应用 所有请求都走/dist/index.html\napp.get('*', function(req, res) {\n    const html = fs.readFileSync(path.resolve(__dirname, '../dist/index.html'), 'utf-8')\n    res.send(html)\n})\n// 监听8088端口\napp.listen(8088);\nconsole.log('success listen…………');\n```\n\n### db.js\n\n这个js文件主要用于配置mongoDB相关东西.我们这里使用mongoose 中间件来连接mongoDB.mongoDB安装完之后，我们需要自己手动去新建一个文件夹用于放置mongoDB的数据。我的mongoDB安装在E盘，所以也在E盘根目录创建一个叫mongo-data的文件夹（名字随便取），进入该文件夹，再新建一个名叫db的文件夹。当我们去启动mongoDB服务时，我们需要指定该路径。如何开启mongoDB服务？进入mongoDB所在目录，再进入它的bin目录，敲这条命令： \n\n\tmongod.exe –dbpath e:\\mongo-data\\db\n\n\t\n```js\n// Schema、Model、Entity或者Documents的关系请牢记，Schema生成Model，Model创造Entity，Model和Entity都可对数据库操作造成影响，但Model比Entity更具操作性。\nconst mongoose = require('mongoose');\n// 连接数据库 如果不自己创建 默认test数据库会自动生成\nmongoose.connect('mongodb://localhost/test');\n// 为这次连接绑定事件\nconst db = mongoose.connection;\ndb.once('error',() => console.log('Mongo connection error'));\ndb.once('open',() => console.log('Mongo connection successed'));\n/************** 定义模式loginSchema **************/\nconst loginSchema = mongoose.Schema({\n    account : String,\n    password : String\n});\n/************** 定义模型Model **************/\nconst Models = {\n    Login : mongoose.model('Login',loginSchema)\n}\nmodule.exports = Models;\n```\n\n\n### api.js\n\n```js\n\"use strict\";\nconst models = require('./db');\nconst express = require('express');\nconst router = express.Router();\n/************** 创建(create) 读取(get) 更新(update) 删除(delete) **************/\n// 创建账号接口\nrouter.post('/api/login/createAccount',(req,res) => {\n    // 这里的req.body能够使用就在index.js中引入了const bodyParser = require('body-parser')\n    let newAccount = new models.Login({\n        account : req.body.account,\n        password : req.body.password\n    });\n    // 保存数据newAccount数据进mongoDB\n    newAccount.save((err,data) => {\n        if (err) {\n            res.send(err);\n        } else {\n            res.send('createAccount successed');\n        }\n    });\n});\n// 获取已有账号接口\nrouter.get('/api/login/getAccount',(req,res) => {\n    // 通过模型去查找数据库\n    models.Login.find((err,data) => {\n        if (err) {\n            res.send(err);\n        } else {\n            res.send(data);\n        }\n    });\n});\nmodule.exports = router;\n```\n\n至此我们的后端代码就编写好了，进入server目录，敲上`node index`命令，node就会跑起来，这时在浏览器输入http://localhost:8088/api/login/getAccount就能访问到这个接口了 \n\n现在我们点击登录按钮去请求接口，当然还是不行的，因为使用npm run dev 进行开发时，其实webpack会启动一个8080的web服务用于我们进行开发，而我们后端是在8088端口的，所以我们肯定请求不到后端的接口。怎么办？跨域问题相信前端都很熟悉，难道我们又要去搞一遍解决这些问题？我们只是想开发的时候能调到后端的接口而已…… \n\n我们会发现有有一个proxyTable，这就是用来开启一个代理服务从而解决我们这个问题的：Vue-Cli官方描述。 \n于是，我们写成这样：\n\n```js\n proxyTable: {\n        '/api': {\n        target: 'http://localhost:8088/api/',\n        changeOrigin: true,\n        pathRewrite: {\n          '^/api': ''\n        }\n      }\n    }\n```\n\n这时，我们在前端接口地址前加上/api，就会指向http://localhost:8088/api/，于是我们就能访问到后端的接口了！让我们来点击一下登录按钮，会发现接口请求成功了！再去数据库看看！也插入了一条新数据！成功！ \n\nnpm run build 这就生成了一个dist目录，里面就是打包出来的东西。 \n\n现在回过头来看server里面的入口文件index.js\n\n```js\n// 访问静态资源文件 这里是访问所有dist目录下的静态资源文件\napp.use(express.static(path.resolve(__dirname, '../dist')))\n// 因为是单页应用 所有请求都走/dist/index.html\napp.get('*', function(req, res) {\n    const html = fs.readFileSync(path.resolve(__dirname, '../dist/index.html'), 'utf-8')\n    res.send(html)\n})\n// 监听8088端口\napp.listen(8088);\n```\n\n这里的关键是express.static，利用 Express 托管静态文件。于是我们才能访问到前端打包出来的静态页面index.html。 \n最后，我们在浏览器输入http://localhost:8088/，就会跳到index.html。","slug":"Vue Node MongoDB三合一完整开发项目","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0wx001k6atf0v54etjt","content":"<p>这是一个用现代最流行框架搭建的环境，从开发到正式部署，实现全栈开发不再是梦，它以Vue 为前端框架，Node 为后台支持，MongoDB为数据库，，我们跟着以下步骤一步步下来:</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>首先我们要整理好整个工作流程： </p>\n<ol>\n<li>前后端分离，各自开发。这里前后端分离是这样的：前端用Vue开发静态页面，路由通过Vue-Router进行，后端用Node仅用于编写API给前端调用获取数据。 </li>\n<li>前端开发时通过Vue-Cli中提供的proxyTable进行代理，由此可跨域调用Node编写的API。 </li>\n<li>前后端各自开发完成，测试无误后，前端通过webpack打包压缩，后端拉取前端打包压缩好的文件即部署完成。</li>\n</ol>\n<h1 id=\"以登录为例\"><a href=\"#以登录为例\" class=\"headerlink\" title=\"以登录为例\"></a>以登录为例</h1><p>安装node</p>\n<blockquote>\n<p>此处不多说，可网上查阅安装过程</p>\n</blockquote>\n<p>安装Vue-Cli </p>\n<pre><code>npm i -g vue-cli\n</code></pre><p>去到你想要放置项目的目录，进行初始化 </p>\n<pre><code>vue init webpack XXX（你想要项目的名字）\n</code></pre><p>按提示一直下一步，完成后按提示 </p>\n<pre><code>cd XXX \nnpm install （这里建议使用淘宝镜像cnpm，不然墙外的东西……） \nnpm run dev \n</code></pre><blockquote>\n<p>设置镜像加速,在cmd输入<br>npm config set registry <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a> –global<br>npm config set disturl <a href=\"https://npm.taobao.org/dist\" target=\"_blank\" rel=\"noopener\">https://npm.taobao.org/dist</a> –global</p>\n</blockquote>\n<p>如无意外你就会看到下图，证明成功了 </p>\n<p><img src=\"../../../../images/vue-node-mongodb/vue.png\" alt=\"vue成功返回的图片\"></p>\n<p>如果出现一些意外有可能是端口号被占用，解决方法有</p>\n<ul>\n<li>开始—-&gt;运行—-&gt;cmd，或者是window+R组合键，调出命令窗口</li>\n<li>输入命令：netstat -ano，列出所有端口的情况。在列表中我们观察被占用的端口，比如是49157，首先找到它。</li>\n<li>查看被占用端口对应的PID，输入命令：netstat -aon|findstr “49157”，回车，记下最后一位数字，即PID,这里是2720</li>\n<li>我们打开任务管理器，切换到进程选项卡，在PID一列查看2720对应的进程是谁，如果看不到PID这一列</li>\n<li>则我们点击查看—&gt;选择列，将PID(进程标示符)前面的勾打上，点击确定。</li>\n<li>这样我们就看到了PID这一列标识，看一下2720对应的进程是谁，如果没有，我们把下面的显示所有用户的进程前面的勾打上，就可以看到了，映像名称是svchost.exe，描述是，Windows的主进程,与上面命令查看的完全一致。</li>\n</ul>\n<h1 id=\"Longin-Vue\"><a href=\"#Longin-Vue\" class=\"headerlink\" title=\"Longin.Vue\"></a>Longin.Vue</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"inputEmail3\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"请输入账号\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"account\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"inputPassword3\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"请输入密码\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"password\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-default\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"login\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    data() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            account : <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            password : <span class=\"string\">''</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    methods:&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      login() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获取已有账号密码</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">this</span>.$http.get(<span class=\"string\">'/api/login/getAccount'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">          .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 响应成功回调</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(response)</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> params = &#123; </span></span><br><span class=\"line\"><span class=\"javascript\">              account : <span class=\"keyword\">this</span>.account,</span></span><br><span class=\"line\"><span class=\"javascript\">              password : <span class=\"keyword\">this</span>.password</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 创建一个账号密码</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$http.post(<span class=\"string\">'/api/login/createAccount'</span>,params);</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">          .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(response)</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">          .catch(<span class=\"function\">(<span class=\"params\">reject</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(reject)</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"搭建Node\"><a href=\"#搭建Node\" class=\"headerlink\" title=\"搭建Node\"></a>搭建Node</h1><p>在项目的根目录新建一个叫server的目录，用于放置Node的东西。进入server目录，再新建三个js文件： </p>\n<ul>\n<li>index.js （入口文件） </li>\n<li>db.js （设置数据库相关） </li>\n<li>api.js （编写接口） </li>\n</ul>\n<h2 id=\"这里使用的Node框架是Express。安装Express：\"><a href=\"#这里使用的Node框架是Express。安装Express：\" class=\"headerlink\" title=\"这里使用的Node框架是Express。安装Express：\"></a>这里使用的Node框架是Express。安装Express：</h2><pre><code>npm install express –save\n</code></pre><h3 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入编写好的api</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> api = <span class=\"built_in\">require</span>(<span class=\"string\">'./api'</span>); </span><br><span class=\"line\"><span class=\"comment\">// 引入文件模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 引入处理路径的模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 引入处理post数据的模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">'body-parser'</span>)</span><br><span class=\"line\"><span class=\"comment\">// 引入Express</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express();</span><br><span class=\"line\">app.use(bodyParser.json());</span><br><span class=\"line\">app.use(bodyParser.urlencoded(&#123;<span class=\"attr\">extended</span>: <span class=\"literal\">false</span>&#125;));</span><br><span class=\"line\">app.use(api);</span><br><span class=\"line\"><span class=\"comment\">// 访问静态资源文件 这里是访问所有dist目录下的静态资源文件</span></span><br><span class=\"line\">app.use(express.static(path.resolve(__dirname, <span class=\"string\">'../dist'</span>)))</span><br><span class=\"line\"><span class=\"comment\">// 因为是单页应用 所有请求都走/dist/index.html</span></span><br><span class=\"line\">app.get(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> html = fs.readFileSync(path.resolve(__dirname, <span class=\"string\">'../dist/index.html'</span>), <span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    res.send(html)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 监听8088端口</span></span><br><span class=\"line\">app.listen(<span class=\"number\">8088</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'success listen…………'</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"db-js\"><a href=\"#db-js\" class=\"headerlink\" title=\"db.js\"></a>db.js</h3><p>这个js文件主要用于配置mongoDB相关东西.我们这里使用mongoose 中间件来连接mongoDB.mongoDB安装完之后，我们需要自己手动去新建一个文件夹用于放置mongoDB的数据。我的mongoDB安装在E盘，所以也在E盘根目录创建一个叫mongo-data的文件夹（名字随便取），进入该文件夹，再新建一个名叫db的文件夹。当我们去启动mongoDB服务时，我们需要指定该路径。如何开启mongoDB服务？进入mongoDB所在目录，再进入它的bin目录，敲这条命令： </p>\n<pre><code>mongod.exe –dbpath e:\\mongo-data\\db\n</code></pre><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Schema、Model、Entity或者Documents的关系请牢记，Schema生成Model，Model创造Entity，Model和Entity都可对数据库操作造成影响，但Model比Entity更具操作性。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 连接数据库 如果不自己创建 默认test数据库会自动生成</span></span><br><span class=\"line\">mongoose.connect(<span class=\"string\">'mongodb://localhost/test'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 为这次连接绑定事件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> db = mongoose.connection;</span><br><span class=\"line\">db.once(<span class=\"string\">'error'</span>,() =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">'Mongo connection error'</span>));</span><br><span class=\"line\">db.once(<span class=\"string\">'open'</span>,() =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">'Mongo connection successed'</span>));</span><br><span class=\"line\"><span class=\"comment\">/************** 定义模式loginSchema **************/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> loginSchema = mongoose.Schema(&#123;</span><br><span class=\"line\">    account : <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    password : <span class=\"built_in\">String</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">/************** 定义模型Model **************/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Models = &#123;</span><br><span class=\"line\">    Login : mongoose.model(<span class=\"string\">'Login'</span>,loginSchema)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = Models;</span><br></pre></td></tr></table></figure>\n<h3 id=\"api-js\"><a href=\"#api-js\" class=\"headerlink\" title=\"api.js\"></a>api.js</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">\"use strict\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> models = <span class=\"built_in\">require</span>(<span class=\"string\">'./db'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = express.Router();</span><br><span class=\"line\"><span class=\"comment\">/************** 创建(create) 读取(get) 更新(update) 删除(delete) **************/</span></span><br><span class=\"line\"><span class=\"comment\">// 创建账号接口</span></span><br><span class=\"line\">router.post(<span class=\"string\">'/api/login/createAccount'</span>,(req,res) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这里的req.body能够使用就在index.js中引入了const bodyParser = require('body-parser')</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> newAccount = <span class=\"keyword\">new</span> models.Login(&#123;</span><br><span class=\"line\">        account : req.body.account,</span><br><span class=\"line\">        password : req.body.password</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 保存数据newAccount数据进mongoDB</span></span><br><span class=\"line\">    newAccount.save(<span class=\"function\">(<span class=\"params\">err,data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">            res.send(err);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            res.send(<span class=\"string\">'createAccount successed'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 获取已有账号接口</span></span><br><span class=\"line\">router.get(<span class=\"string\">'/api/login/getAccount'</span>,(req,res) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过模型去查找数据库</span></span><br><span class=\"line\">    models.Login.find(<span class=\"function\">(<span class=\"params\">err,data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">            res.send(err);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            res.send(data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = router;</span><br></pre></td></tr></table></figure>\n<p>至此我们的后端代码就编写好了，进入server目录，敲上<code>node index</code>命令，node就会跑起来，这时在浏览器输入<a href=\"http://localhost:8088/api/login/getAccount就能访问到这个接口了\" target=\"_blank\" rel=\"noopener\">http://localhost:8088/api/login/getAccount就能访问到这个接口了</a> </p>\n<p>现在我们点击登录按钮去请求接口，当然还是不行的，因为使用npm run dev 进行开发时，其实webpack会启动一个8080的web服务用于我们进行开发，而我们后端是在8088端口的，所以我们肯定请求不到后端的接口。怎么办？跨域问题相信前端都很熟悉，难道我们又要去搞一遍解决这些问题？我们只是想开发的时候能调到后端的接口而已…… </p>\n<p>我们会发现有有一个proxyTable，这就是用来开启一个代理服务从而解决我们这个问题的：Vue-Cli官方描述。<br>于是，我们写成这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxyTable: &#123;</span><br><span class=\"line\">       <span class=\"string\">'/api'</span>: &#123;</span><br><span class=\"line\">       target: <span class=\"string\">'http://localhost:8088/api/'</span>,</span><br><span class=\"line\">       changeOrigin: <span class=\"literal\">true</span>,</span><br><span class=\"line\">       pathRewrite: &#123;</span><br><span class=\"line\">         <span class=\"string\">'^/api'</span>: <span class=\"string\">''</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>这时，我们在前端接口地址前加上/api，就会指向<a href=\"http://localhost:8088/api/，于是我们就能访问到后端的接口了！让我们来点击一下登录按钮，会发现接口请求成功了！再去数据库看看！也插入了一条新数据！成功！\" target=\"_blank\" rel=\"noopener\">http://localhost:8088/api/，于是我们就能访问到后端的接口了！让我们来点击一下登录按钮，会发现接口请求成功了！再去数据库看看！也插入了一条新数据！成功！</a> </p>\n<p>npm run build 这就生成了一个dist目录，里面就是打包出来的东西。 </p>\n<p>现在回过头来看server里面的入口文件index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 访问静态资源文件 这里是访问所有dist目录下的静态资源文件</span></span><br><span class=\"line\">app.use(express.static(path.resolve(__dirname, <span class=\"string\">'../dist'</span>)))</span><br><span class=\"line\"><span class=\"comment\">// 因为是单页应用 所有请求都走/dist/index.html</span></span><br><span class=\"line\">app.get(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> html = fs.readFileSync(path.resolve(__dirname, <span class=\"string\">'../dist/index.html'</span>), <span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    res.send(html)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 监听8088端口</span></span><br><span class=\"line\">app.listen(<span class=\"number\">8088</span>);</span><br></pre></td></tr></table></figure>\n<p>这里的关键是express.static，利用 Express 托管静态文件。于是我们才能访问到前端打包出来的静态页面index.html。<br>最后，我们在浏览器输入<a href=\"http://localhost:8088/，就会跳到index.html。\" target=\"_blank\" rel=\"noopener\">http://localhost:8088/，就会跳到index.html。</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>这是一个用现代最流行框架搭建的环境，从开发到正式部署，实现全栈开发不再是梦，它以Vue 为前端框架，Node 为后台支持，MongoDB为数据库，，我们跟着以下步骤一步步下来:</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>首先我们要整理好整个工作流程： </p>\n<ol>\n<li>前后端分离，各自开发。这里前后端分离是这样的：前端用Vue开发静态页面，路由通过Vue-Router进行，后端用Node仅用于编写API给前端调用获取数据。 </li>\n<li>前端开发时通过Vue-Cli中提供的proxyTable进行代理，由此可跨域调用Node编写的API。 </li>\n<li>前后端各自开发完成，测试无误后，前端通过webpack打包压缩，后端拉取前端打包压缩好的文件即部署完成。</li>\n</ol>\n<h1 id=\"以登录为例\"><a href=\"#以登录为例\" class=\"headerlink\" title=\"以登录为例\"></a>以登录为例</h1><p>安装node</p>\n<blockquote>\n<p>此处不多说，可网上查阅安装过程</p>\n</blockquote>\n<p>安装Vue-Cli </p>\n<pre><code>npm i -g vue-cli\n</code></pre><p>去到你想要放置项目的目录，进行初始化 </p>\n<pre><code>vue init webpack XXX（你想要项目的名字）\n</code></pre><p>按提示一直下一步，完成后按提示 </p>\n<pre><code>cd XXX \nnpm install （这里建议使用淘宝镜像cnpm，不然墙外的东西……） \nnpm run dev \n</code></pre><blockquote>\n<p>设置镜像加速,在cmd输入<br>npm config set registry <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a> –global<br>npm config set disturl <a href=\"https://npm.taobao.org/dist\" target=\"_blank\" rel=\"noopener\">https://npm.taobao.org/dist</a> –global</p>\n</blockquote>\n<p>如无意外你就会看到下图，证明成功了 </p>\n<p><img src=\"../../../../images/vue-node-mongodb/vue.png\" alt=\"vue成功返回的图片\"></p>\n<p>如果出现一些意外有可能是端口号被占用，解决方法有</p>\n<ul>\n<li>开始—-&gt;运行—-&gt;cmd，或者是window+R组合键，调出命令窗口</li>\n<li>输入命令：netstat -ano，列出所有端口的情况。在列表中我们观察被占用的端口，比如是49157，首先找到它。</li>\n<li>查看被占用端口对应的PID，输入命令：netstat -aon|findstr “49157”，回车，记下最后一位数字，即PID,这里是2720</li>\n<li>我们打开任务管理器，切换到进程选项卡，在PID一列查看2720对应的进程是谁，如果看不到PID这一列</li>\n<li>则我们点击查看—&gt;选择列，将PID(进程标示符)前面的勾打上，点击确定。</li>\n<li>这样我们就看到了PID这一列标识，看一下2720对应的进程是谁，如果没有，我们把下面的显示所有用户的进程前面的勾打上，就可以看到了，映像名称是svchost.exe，描述是，Windows的主进程,与上面命令查看的完全一致。</li>\n</ul>\n<h1 id=\"Longin-Vue\"><a href=\"#Longin-Vue\" class=\"headerlink\" title=\"Longin.Vue\"></a>Longin.Vue</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"inputEmail3\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"请输入账号\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"account\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"inputPassword3\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"请输入密码\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"password\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-default\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"login\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    data() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            account : <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            password : <span class=\"string\">''</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    methods:&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      login() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获取已有账号密码</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">this</span>.$http.get(<span class=\"string\">'/api/login/getAccount'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">          .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 响应成功回调</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(response)</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> params = &#123; </span></span><br><span class=\"line\"><span class=\"javascript\">              account : <span class=\"keyword\">this</span>.account,</span></span><br><span class=\"line\"><span class=\"javascript\">              password : <span class=\"keyword\">this</span>.password</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 创建一个账号密码</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$http.post(<span class=\"string\">'/api/login/createAccount'</span>,params);</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">          .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(response)</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">          .catch(<span class=\"function\">(<span class=\"params\">reject</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(reject)</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"搭建Node\"><a href=\"#搭建Node\" class=\"headerlink\" title=\"搭建Node\"></a>搭建Node</h1><p>在项目的根目录新建一个叫server的目录，用于放置Node的东西。进入server目录，再新建三个js文件： </p>\n<ul>\n<li>index.js （入口文件） </li>\n<li>db.js （设置数据库相关） </li>\n<li>api.js （编写接口） </li>\n</ul>\n<h2 id=\"这里使用的Node框架是Express。安装Express：\"><a href=\"#这里使用的Node框架是Express。安装Express：\" class=\"headerlink\" title=\"这里使用的Node框架是Express。安装Express：\"></a>这里使用的Node框架是Express。安装Express：</h2><pre><code>npm install express –save\n</code></pre><h3 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入编写好的api</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> api = <span class=\"built_in\">require</span>(<span class=\"string\">'./api'</span>); </span><br><span class=\"line\"><span class=\"comment\">// 引入文件模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 引入处理路径的模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 引入处理post数据的模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">'body-parser'</span>)</span><br><span class=\"line\"><span class=\"comment\">// 引入Express</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express();</span><br><span class=\"line\">app.use(bodyParser.json());</span><br><span class=\"line\">app.use(bodyParser.urlencoded(&#123;<span class=\"attr\">extended</span>: <span class=\"literal\">false</span>&#125;));</span><br><span class=\"line\">app.use(api);</span><br><span class=\"line\"><span class=\"comment\">// 访问静态资源文件 这里是访问所有dist目录下的静态资源文件</span></span><br><span class=\"line\">app.use(express.static(path.resolve(__dirname, <span class=\"string\">'../dist'</span>)))</span><br><span class=\"line\"><span class=\"comment\">// 因为是单页应用 所有请求都走/dist/index.html</span></span><br><span class=\"line\">app.get(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> html = fs.readFileSync(path.resolve(__dirname, <span class=\"string\">'../dist/index.html'</span>), <span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    res.send(html)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 监听8088端口</span></span><br><span class=\"line\">app.listen(<span class=\"number\">8088</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'success listen…………'</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"db-js\"><a href=\"#db-js\" class=\"headerlink\" title=\"db.js\"></a>db.js</h3><p>这个js文件主要用于配置mongoDB相关东西.我们这里使用mongoose 中间件来连接mongoDB.mongoDB安装完之后，我们需要自己手动去新建一个文件夹用于放置mongoDB的数据。我的mongoDB安装在E盘，所以也在E盘根目录创建一个叫mongo-data的文件夹（名字随便取），进入该文件夹，再新建一个名叫db的文件夹。当我们去启动mongoDB服务时，我们需要指定该路径。如何开启mongoDB服务？进入mongoDB所在目录，再进入它的bin目录，敲这条命令： </p>\n<pre><code>mongod.exe –dbpath e:\\mongo-data\\db\n</code></pre><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Schema、Model、Entity或者Documents的关系请牢记，Schema生成Model，Model创造Entity，Model和Entity都可对数据库操作造成影响，但Model比Entity更具操作性。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 连接数据库 如果不自己创建 默认test数据库会自动生成</span></span><br><span class=\"line\">mongoose.connect(<span class=\"string\">'mongodb://localhost/test'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 为这次连接绑定事件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> db = mongoose.connection;</span><br><span class=\"line\">db.once(<span class=\"string\">'error'</span>,() =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">'Mongo connection error'</span>));</span><br><span class=\"line\">db.once(<span class=\"string\">'open'</span>,() =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">'Mongo connection successed'</span>));</span><br><span class=\"line\"><span class=\"comment\">/************** 定义模式loginSchema **************/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> loginSchema = mongoose.Schema(&#123;</span><br><span class=\"line\">    account : <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    password : <span class=\"built_in\">String</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">/************** 定义模型Model **************/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Models = &#123;</span><br><span class=\"line\">    Login : mongoose.model(<span class=\"string\">'Login'</span>,loginSchema)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = Models;</span><br></pre></td></tr></table></figure>\n<h3 id=\"api-js\"><a href=\"#api-js\" class=\"headerlink\" title=\"api.js\"></a>api.js</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">\"use strict\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> models = <span class=\"built_in\">require</span>(<span class=\"string\">'./db'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = express.Router();</span><br><span class=\"line\"><span class=\"comment\">/************** 创建(create) 读取(get) 更新(update) 删除(delete) **************/</span></span><br><span class=\"line\"><span class=\"comment\">// 创建账号接口</span></span><br><span class=\"line\">router.post(<span class=\"string\">'/api/login/createAccount'</span>,(req,res) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这里的req.body能够使用就在index.js中引入了const bodyParser = require('body-parser')</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> newAccount = <span class=\"keyword\">new</span> models.Login(&#123;</span><br><span class=\"line\">        account : req.body.account,</span><br><span class=\"line\">        password : req.body.password</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 保存数据newAccount数据进mongoDB</span></span><br><span class=\"line\">    newAccount.save(<span class=\"function\">(<span class=\"params\">err,data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">            res.send(err);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            res.send(<span class=\"string\">'createAccount successed'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 获取已有账号接口</span></span><br><span class=\"line\">router.get(<span class=\"string\">'/api/login/getAccount'</span>,(req,res) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过模型去查找数据库</span></span><br><span class=\"line\">    models.Login.find(<span class=\"function\">(<span class=\"params\">err,data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">            res.send(err);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            res.send(data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = router;</span><br></pre></td></tr></table></figure>\n<p>至此我们的后端代码就编写好了，进入server目录，敲上<code>node index</code>命令，node就会跑起来，这时在浏览器输入<a href=\"http://localhost:8088/api/login/getAccount就能访问到这个接口了\" target=\"_blank\" rel=\"noopener\">http://localhost:8088/api/login/getAccount就能访问到这个接口了</a> </p>\n<p>现在我们点击登录按钮去请求接口，当然还是不行的，因为使用npm run dev 进行开发时，其实webpack会启动一个8080的web服务用于我们进行开发，而我们后端是在8088端口的，所以我们肯定请求不到后端的接口。怎么办？跨域问题相信前端都很熟悉，难道我们又要去搞一遍解决这些问题？我们只是想开发的时候能调到后端的接口而已…… </p>\n<p>我们会发现有有一个proxyTable，这就是用来开启一个代理服务从而解决我们这个问题的：Vue-Cli官方描述。<br>于是，我们写成这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxyTable: &#123;</span><br><span class=\"line\">       <span class=\"string\">'/api'</span>: &#123;</span><br><span class=\"line\">       target: <span class=\"string\">'http://localhost:8088/api/'</span>,</span><br><span class=\"line\">       changeOrigin: <span class=\"literal\">true</span>,</span><br><span class=\"line\">       pathRewrite: &#123;</span><br><span class=\"line\">         <span class=\"string\">'^/api'</span>: <span class=\"string\">''</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>这时，我们在前端接口地址前加上/api，就会指向<a href=\"http://localhost:8088/api/，于是我们就能访问到后端的接口了！让我们来点击一下登录按钮，会发现接口请求成功了！再去数据库看看！也插入了一条新数据！成功！\" target=\"_blank\" rel=\"noopener\">http://localhost:8088/api/，于是我们就能访问到后端的接口了！让我们来点击一下登录按钮，会发现接口请求成功了！再去数据库看看！也插入了一条新数据！成功！</a> </p>\n<p>npm run build 这就生成了一个dist目录，里面就是打包出来的东西。 </p>\n<p>现在回过头来看server里面的入口文件index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 访问静态资源文件 这里是访问所有dist目录下的静态资源文件</span></span><br><span class=\"line\">app.use(express.static(path.resolve(__dirname, <span class=\"string\">'../dist'</span>)))</span><br><span class=\"line\"><span class=\"comment\">// 因为是单页应用 所有请求都走/dist/index.html</span></span><br><span class=\"line\">app.get(<span class=\"string\">'*'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> html = fs.readFileSync(path.resolve(__dirname, <span class=\"string\">'../dist/index.html'</span>), <span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    res.send(html)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 监听8088端口</span></span><br><span class=\"line\">app.listen(<span class=\"number\">8088</span>);</span><br></pre></td></tr></table></figure>\n<p>这里的关键是express.static，利用 Express 托管静态文件。于是我们才能访问到前端打包出来的静态页面index.html。<br>最后，我们在浏览器输入<a href=\"http://localhost:8088/，就会跳到index.html。\" target=\"_blank\" rel=\"noopener\">http://localhost:8088/，就会跳到index.html。</a></p>\n"},{"title":"Vuejs实现vModel从子组件传出父组件 获取焦点触发事件","keywords":"Vuejs v-model 子组件传出父组件 获取焦点触发事件","date":"2017-07-24T09:53:00.000Z","_content":"\n\n本章的笔记与Vuejs实现模糊查询来自同一个功能点，这是关于把Input封装成组件的过程。并带有获取焦点触发事件的功能\n\n```html \n<template>\n\t<div class=\"form\">\n\t\t<div class=\"lable\">\n\t\t\t<label>{{label}}</label>\n\t\t</div>\n\t\t<div class=\"side-r\">\n\t\t\t<div class=\"side-cont\">\n\t\t\t\t<input v-if=\"type=='text'\" ref=\"input\"  :name=\"name\" :value=\"value\" type=\"text\" :placeholder=\"placeholder\" :disabled=\"disabled\" :readonly=\"readonly\" @input=\"$emit('input', $event.target.value)\"  @focus=\"focusInput\">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n<script>\n\texport default {\n\t\tname: 'input',\n\t\tprops: {\n\t\t\tvalue: '',\n\t\t\tlabel: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'Label'\n\t\t\t},\n\t\t\ttype: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'text'\n\t\t\t},\n\t\t\treadonly:{\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\tname:{\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'text'\n\t\t\t}\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tplaceholder: '请输入' + this.label\n\t\t\t}\n\t\t},\n\t\tmethods:{\n\t\t\tfocusInput(){\n\t\t\t\tthis.$emit('focusInput');\n\t\t\t}\n\t\t}\n\t}\n</script>\n<style lang=\"stylus\" scoped=\"scoped\">\n\t@import '../style/var';\n\t.form {\n\t\tposition: relative;\n\t\toverflow: hidden;\n\t\tpadding: 13px 10px;\n\t\tfont-size: $normalSize;\n\t\tinput{\n\t\t\t width: 100%;\n\t\t}\n\t\t+.form:before {\n\t\t\tcontent: \" \";\n\t\t    position: absolute;\n\t\t    left: 0;\n\t\t    top: 0;\n\t\t    right: 0;\n\t\t    height: 1px;\n\t\t    border-top: 1px solid $bordercolor;\n\t\t    color: $bordercolor;\n\t\t    transform-origin: 0 0;\n\t\t    transform: scaleY(0.5);\n\t\t\tmargin-left: 10px;\n\t\t}\n\t\t&:last-child {\n\t\t\t&:after {\n\t\t\t\tcontent: \" \";\n\t\t\t    position: absolute;\n\t\t\t    left: 0;\n\t\t\t    bottom: 0;\n\t\t\t    right: 0;\n\t\t\t    height: 1px;\n\t\t\t    border-bottom: 1px solid $bordercolor;\n\t\t\t    color: $bordercolor;\n\t\t\t    transform-origin: 0 100%;\n\t\t\t    transform: scaleY(0.5);\n\t\t\t}\n\t\t}\n\t}\n\t.lable {\n\t\tposition: relative;\n\t\tfloat: left;\n\t\twidth: $labelLength;\n\t\tmargin-right: -($labelLength);\n\t}\n\t.side-r {\n\t\tfloat: right;\n\t\twidth: 100%;\n\t}\n\t.side-cont {\n\t\tmargin-left: $labelLength;\n\t}\n</style>\n```","source":"_posts/Vuejs实现vModel从子组件传出父组件.md","raw":"\n---\ntitle: Vuejs实现vModel从子组件传出父组件 获取焦点触发事件\n\nkeywords: Vuejs v-model 子组件传出父组件 获取焦点触发事件\n\ncategories: note\n\ntags: \n - VUE\n\ndate: 2017-07-24 17:53\n---\n\n\n本章的笔记与Vuejs实现模糊查询来自同一个功能点，这是关于把Input封装成组件的过程。并带有获取焦点触发事件的功能\n\n```html \n<template>\n\t<div class=\"form\">\n\t\t<div class=\"lable\">\n\t\t\t<label>{{label}}</label>\n\t\t</div>\n\t\t<div class=\"side-r\">\n\t\t\t<div class=\"side-cont\">\n\t\t\t\t<input v-if=\"type=='text'\" ref=\"input\"  :name=\"name\" :value=\"value\" type=\"text\" :placeholder=\"placeholder\" :disabled=\"disabled\" :readonly=\"readonly\" @input=\"$emit('input', $event.target.value)\"  @focus=\"focusInput\">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n<script>\n\texport default {\n\t\tname: 'input',\n\t\tprops: {\n\t\t\tvalue: '',\n\t\t\tlabel: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'Label'\n\t\t\t},\n\t\t\ttype: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'text'\n\t\t\t},\n\t\t\treadonly:{\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\tname:{\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'text'\n\t\t\t}\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tplaceholder: '请输入' + this.label\n\t\t\t}\n\t\t},\n\t\tmethods:{\n\t\t\tfocusInput(){\n\t\t\t\tthis.$emit('focusInput');\n\t\t\t}\n\t\t}\n\t}\n</script>\n<style lang=\"stylus\" scoped=\"scoped\">\n\t@import '../style/var';\n\t.form {\n\t\tposition: relative;\n\t\toverflow: hidden;\n\t\tpadding: 13px 10px;\n\t\tfont-size: $normalSize;\n\t\tinput{\n\t\t\t width: 100%;\n\t\t}\n\t\t+.form:before {\n\t\t\tcontent: \" \";\n\t\t    position: absolute;\n\t\t    left: 0;\n\t\t    top: 0;\n\t\t    right: 0;\n\t\t    height: 1px;\n\t\t    border-top: 1px solid $bordercolor;\n\t\t    color: $bordercolor;\n\t\t    transform-origin: 0 0;\n\t\t    transform: scaleY(0.5);\n\t\t\tmargin-left: 10px;\n\t\t}\n\t\t&:last-child {\n\t\t\t&:after {\n\t\t\t\tcontent: \" \";\n\t\t\t    position: absolute;\n\t\t\t    left: 0;\n\t\t\t    bottom: 0;\n\t\t\t    right: 0;\n\t\t\t    height: 1px;\n\t\t\t    border-bottom: 1px solid $bordercolor;\n\t\t\t    color: $bordercolor;\n\t\t\t    transform-origin: 0 100%;\n\t\t\t    transform: scaleY(0.5);\n\t\t\t}\n\t\t}\n\t}\n\t.lable {\n\t\tposition: relative;\n\t\tfloat: left;\n\t\twidth: $labelLength;\n\t\tmargin-right: -($labelLength);\n\t}\n\t.side-r {\n\t\tfloat: right;\n\t\twidth: 100%;\n\t}\n\t.side-cont {\n\t\tmargin-left: $labelLength;\n\t}\n</style>\n```","slug":"Vuejs实现vModel从子组件传出父组件","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0wz001m6atf448k254m","content":"<p>本章的笔记与Vuejs实现模糊查询来自同一个功能点，这是关于把Input封装成组件的过程。并带有获取焦点触发事件的功能</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"lable\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>&#123;&#123;label&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"side-r\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"side-cont\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"type=='text'\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"input\"</span>  <span class=\"attr\">:name</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">:value</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">:placeholder</span>=<span class=\"string\">\"placeholder\"</span> <span class=\"attr\">:disabled</span>=<span class=\"string\">\"disabled\"</span> <span class=\"attr\">:readonly</span>=<span class=\"string\">\"readonly\"</span> @<span class=\"attr\">input</span>=<span class=\"string\">\"$emit('input', $event.target.value)\"</span>  @<span class=\"attr\">focus</span>=<span class=\"string\">\"focusInput\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">\t<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\tname: <span class=\"string\">'input'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tprops: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\tvalue: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tlabel: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\ttype: <span class=\"built_in\">String</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">default</span>: <span class=\"string\">'Label'</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\ttype: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\ttype: <span class=\"built_in\">String</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">default</span>: <span class=\"string\">'text'</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\treadonly:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\ttype: <span class=\"built_in\">Boolean</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">default</span>: <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tdisabled: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\ttype: <span class=\"built_in\">Boolean</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">default</span>: <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tname:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\ttype: <span class=\"built_in\">String</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">default</span>: <span class=\"string\">'text'</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tdata() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t<span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\tplaceholder: <span class=\"string\">'请输入'</span> + <span class=\"keyword\">this</span>.label</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tmethods:&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tfocusInput()&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">this</span>.$emit(<span class=\"string\">'focusInput'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"stylus\"</span> <span class=\"attr\">scoped</span>=<span class=\"string\">\"scoped\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">\t@import '../style/var';</span></span><br><span class=\"line\"><span class=\"undefined\">\t.form &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tposition: relative;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\toverflow: hidden;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tpadding: 13px 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tfont-size: $normalSize;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tinput&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t+.form:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tcontent: \" \";</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    left: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    top: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    right: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    height: 1px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    border-top: 1px solid $bordercolor;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    color: $bordercolor;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    transform-origin: 0 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    transform: scaleY(0.5);</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tmargin-left: 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&amp;:last-child &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&amp;:after &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\tcontent: \" \";</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    left: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    bottom: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    right: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    height: 1px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    border-bottom: 1px solid $bordercolor;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    color: $bordercolor;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    transform-origin: 0 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    transform: scaleY(0.5);</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t.lable &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tposition: relative;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tfloat: left;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\twidth: $labelLength;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tmargin-right: -($labelLength);</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t.side-r &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tfloat: right;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\twidth: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t.side-cont &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tmargin-left: $labelLength;</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>本章的笔记与Vuejs实现模糊查询来自同一个功能点，这是关于把Input封装成组件的过程。并带有获取焦点触发事件的功能</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"lable\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>&#123;&#123;label&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"side-r\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"side-cont\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"type=='text'\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"input\"</span>  <span class=\"attr\">:name</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">:value</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">:placeholder</span>=<span class=\"string\">\"placeholder\"</span> <span class=\"attr\">:disabled</span>=<span class=\"string\">\"disabled\"</span> <span class=\"attr\">:readonly</span>=<span class=\"string\">\"readonly\"</span> @<span class=\"attr\">input</span>=<span class=\"string\">\"$emit('input', $event.target.value)\"</span>  @<span class=\"attr\">focus</span>=<span class=\"string\">\"focusInput\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">\t<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\tname: <span class=\"string\">'input'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tprops: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\tvalue: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tlabel: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\ttype: <span class=\"built_in\">String</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">default</span>: <span class=\"string\">'Label'</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\ttype: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\ttype: <span class=\"built_in\">String</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">default</span>: <span class=\"string\">'text'</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\treadonly:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\ttype: <span class=\"built_in\">Boolean</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">default</span>: <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tdisabled: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\ttype: <span class=\"built_in\">Boolean</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">default</span>: <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tname:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\ttype: <span class=\"built_in\">String</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">default</span>: <span class=\"string\">'text'</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tdata() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t<span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\tplaceholder: <span class=\"string\">'请输入'</span> + <span class=\"keyword\">this</span>.label</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tmethods:&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tfocusInput()&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">this</span>.$emit(<span class=\"string\">'focusInput'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"stylus\"</span> <span class=\"attr\">scoped</span>=<span class=\"string\">\"scoped\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">\t@import '../style/var';</span></span><br><span class=\"line\"><span class=\"undefined\">\t.form &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tposition: relative;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\toverflow: hidden;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tpadding: 13px 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tfont-size: $normalSize;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tinput&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t width: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t+.form:before &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tcontent: \" \";</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    left: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    top: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    right: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    height: 1px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    border-top: 1px solid $bordercolor;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    color: $bordercolor;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    transform-origin: 0 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t    transform: scaleY(0.5);</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tmargin-left: 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&amp;:last-child &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&amp;:after &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\tcontent: \" \";</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    left: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    bottom: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    right: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    height: 1px;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    border-bottom: 1px solid $bordercolor;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    color: $bordercolor;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    transform-origin: 0 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t    transform: scaleY(0.5);</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t.lable &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tposition: relative;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tfloat: left;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\twidth: $labelLength;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tmargin-right: -($labelLength);</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t.side-r &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tfloat: right;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\twidth: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t.side-cont &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tmargin-left: $labelLength;</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"Vuejs实现简单模糊查询","keywords":"Vuejs 模糊查询","date":"2017-07-24T09:43:00.000Z","_content":"\n最近所在的项目问卷调查里需要输入简单的文字，就能查询出相关的所有专营店，刚开始，还真不敢下手，不过写下来后发现也并没有辣么难！！！\n\nVuejs实现简单模糊查询\n\n\n```html\n<template>\n\t<div>\n\t<!--专营店模糊查询-->\n\t<x-input label=\"专营店\" v-model=\"selectedDlrCode.shortName\"></x-input>\n\t<div class=\"dlrcord-list form\">\n\t<transition-group v-show=\"allDlrCodeListShow\" name=\"fade\" tag=\"ul\">\n\t\t<li v-for=\"(item, index) in searchData\" key=\"item.shortName\" v-bind:data-index=\"index\" @click=\"selectDlrCode(item.shortName,item.dlrCode)\">{{ item.shortName }}</li>\n\t</transition-group>\n\t</div>\n\t<!--专营店模糊查询--> \n</div>\n</template>\n<script>\n\timport XInput from '@/components/Input';\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tselectedDlrCode: {\n\t\t\t\t\tshortName: '',\n\t\t\t\t\tdlrCode: '',\n\t\t\t\t\tIsSelected: false\n\t\t\t\t}, //专营店\n\t\t\t\tdlrList: [],\n\t\t\t}\n\t\t},\n\t\tcomponents: {\n\t\t\tXInput\n\t\t},\n\t\twatch: {\n\t\t\tselectedDlrCode: {\n\t\t\t\thandler: (val, oldVal) => {\n\t\t\t\t\tlet _this = this;\n\t\t\t\t\tif(val.shortName == '') { //专营店表单清零后重新开启模糊查询\n\t\t\t\t\t\tval.dlrCode = '';\n\t\t\t\t\t\tval.IsSelected = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdeep: true\n\t\t\t}\n\t\t},\n\t\tmounted(){\n\t\t\tthis.$nextTick(()=>{\n\t\t\t\tthis.loadPage();\n\t\t\t})\n\t\t},\n\t\tmethods:{\n\t\t\tloadPage(){\n\t\t\t\t//获取所有专营的\n\t\t\t\tapi.getData([{\n\t\t\t\t\ttype: types.FUZZY_SEARCH_DLRCODE,\n\t\t\t\t\tparam: {\n\t\t\t\t\t\tdlrCode,\n\t\t\t\t\t}\n\t\t\t\t}]).then(res => {\n\t\t\t\t\tthis.dlrList = res;\n\t\t\t\t})\n\t\t\t},\n\t\t\t//选择专营店\n\t\t\tselectDlrCode(shortName, dlrCode) {\n\t\t\t\tthis.selectedDlrCode.shortName = shortName;\n\t\t\t\tthis.selectedDlrCode.dlrCode = dlrCode;\n\t\t\t\tthis.selectedDlrCode.IsSelected = true; //隐藏专营店列表\n\t\t\t},\n\t\t},\n\t\tcomputed{\n\t\t\tsearchData() {\n\t\t\t\tlet name = this.selectedDlrCode.shortName;\n\t\t\t\tlet data = [];\n\t\t\t\tif(name) {\n\t\t\t\t\tthis.dlrList.forEach((item, index) => {\n\t\t\t\t\t\tif(item.shortName.indexOf(name) !== -1) {\n\t\t\t\t\t\t\tdata.push(item)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t},\n\t\t\tallDlrCodeListShow() {\n\t\t\t\tlet IsSelected = this.selectedDlrCode.IsSelected;\n\t\t\t\tlet shortName = this.selectedDlrCode.shortName;\n\t\t\t\tif(shortName && !IsSelected) {\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</script>\n```\n","source":"_posts/Vuejs实现简单模糊查询.md","raw":"\n---\ntitle: Vuejs实现简单模糊查询\n\nkeywords: Vuejs 模糊查询 \n\ncategories: note\n\ntags: \n - VUE\ndate: 2017-07-24 17:43\n---\n\n最近所在的项目问卷调查里需要输入简单的文字，就能查询出相关的所有专营店，刚开始，还真不敢下手，不过写下来后发现也并没有辣么难！！！\n\nVuejs实现简单模糊查询\n\n\n```html\n<template>\n\t<div>\n\t<!--专营店模糊查询-->\n\t<x-input label=\"专营店\" v-model=\"selectedDlrCode.shortName\"></x-input>\n\t<div class=\"dlrcord-list form\">\n\t<transition-group v-show=\"allDlrCodeListShow\" name=\"fade\" tag=\"ul\">\n\t\t<li v-for=\"(item, index) in searchData\" key=\"item.shortName\" v-bind:data-index=\"index\" @click=\"selectDlrCode(item.shortName,item.dlrCode)\">{{ item.shortName }}</li>\n\t</transition-group>\n\t</div>\n\t<!--专营店模糊查询--> \n</div>\n</template>\n<script>\n\timport XInput from '@/components/Input';\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tselectedDlrCode: {\n\t\t\t\t\tshortName: '',\n\t\t\t\t\tdlrCode: '',\n\t\t\t\t\tIsSelected: false\n\t\t\t\t}, //专营店\n\t\t\t\tdlrList: [],\n\t\t\t}\n\t\t},\n\t\tcomponents: {\n\t\t\tXInput\n\t\t},\n\t\twatch: {\n\t\t\tselectedDlrCode: {\n\t\t\t\thandler: (val, oldVal) => {\n\t\t\t\t\tlet _this = this;\n\t\t\t\t\tif(val.shortName == '') { //专营店表单清零后重新开启模糊查询\n\t\t\t\t\t\tval.dlrCode = '';\n\t\t\t\t\t\tval.IsSelected = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdeep: true\n\t\t\t}\n\t\t},\n\t\tmounted(){\n\t\t\tthis.$nextTick(()=>{\n\t\t\t\tthis.loadPage();\n\t\t\t})\n\t\t},\n\t\tmethods:{\n\t\t\tloadPage(){\n\t\t\t\t//获取所有专营的\n\t\t\t\tapi.getData([{\n\t\t\t\t\ttype: types.FUZZY_SEARCH_DLRCODE,\n\t\t\t\t\tparam: {\n\t\t\t\t\t\tdlrCode,\n\t\t\t\t\t}\n\t\t\t\t}]).then(res => {\n\t\t\t\t\tthis.dlrList = res;\n\t\t\t\t})\n\t\t\t},\n\t\t\t//选择专营店\n\t\t\tselectDlrCode(shortName, dlrCode) {\n\t\t\t\tthis.selectedDlrCode.shortName = shortName;\n\t\t\t\tthis.selectedDlrCode.dlrCode = dlrCode;\n\t\t\t\tthis.selectedDlrCode.IsSelected = true; //隐藏专营店列表\n\t\t\t},\n\t\t},\n\t\tcomputed{\n\t\t\tsearchData() {\n\t\t\t\tlet name = this.selectedDlrCode.shortName;\n\t\t\t\tlet data = [];\n\t\t\t\tif(name) {\n\t\t\t\t\tthis.dlrList.forEach((item, index) => {\n\t\t\t\t\t\tif(item.shortName.indexOf(name) !== -1) {\n\t\t\t\t\t\t\tdata.push(item)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t},\n\t\t\tallDlrCodeListShow() {\n\t\t\t\tlet IsSelected = this.selectedDlrCode.IsSelected;\n\t\t\t\tlet shortName = this.selectedDlrCode.shortName;\n\t\t\t\tif(shortName && !IsSelected) {\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</script>\n```\n","slug":"Vuejs实现简单模糊查询","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0x3001q6atfkfffswk5","content":"<p>最近所在的项目问卷调查里需要输入简单的文字，就能查询出相关的所有专营店，刚开始，还真不敢下手，不过写下来后发现也并没有辣么难！！！</p>\n<p>Vuejs实现简单模糊查询</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--专营店模糊查询--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">x-input</span> <span class=\"attr\">label</span>=<span class=\"string\">\"专营店\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"selectedDlrCode.shortName\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">x-input</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dlrcord-list form\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">transition-group</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"allDlrCodeListShow\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"fade\"</span> <span class=\"attr\">tag</span>=<span class=\"string\">\"ul\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in searchData\"</span> <span class=\"attr\">key</span>=<span class=\"string\">\"item.shortName\"</span> <span class=\"attr\">v-bind:data-index</span>=<span class=\"string\">\"index\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"selectDlrCode(item.shortName,item.dlrCode)\"</span>&gt;</span>&#123;&#123; item.shortName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">transition-group</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--专营店模糊查询--&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">\t<span class=\"keyword\">import</span> XInput <span class=\"keyword\">from</span> <span class=\"string\">'@/components/Input'</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">\t<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tdata() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t<span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\tselectedDlrCode: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\tshortName: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\tdlrCode: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\tIsSelected: <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t&#125;, <span class=\"comment\">//专营店</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\tdlrList: [],</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tcomponents: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tXInput</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\twatch: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tselectedDlrCode: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\thandler: <span class=\"function\">(<span class=\"params\">val, oldVal</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">if</span>(val.shortName == <span class=\"string\">''</span>) &#123; <span class=\"comment\">//专营店表单清零后重新开启模糊查询</span></span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t\tval.dlrCode = <span class=\"string\">''</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t\tval.IsSelected = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\tdeep: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tmounted()&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t<span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">this</span>.loadPage();</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tmethods:&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tloadPage()&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"comment\">//获取所有专营的</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\tapi.getData([&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\ttype: types.FUZZY_SEARCH_DLRCODE,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\tparam: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t\tdlrCode,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t&#125;]).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">this</span>.dlrList = res;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t<span class=\"comment\">//选择专营店</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tselectDlrCode(shortName, dlrCode) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">this</span>.selectedDlrCode.shortName = shortName;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">this</span>.selectedDlrCode.dlrCode = dlrCode;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">this</span>.selectedDlrCode.IsSelected = <span class=\"literal\">true</span>; <span class=\"comment\">//隐藏专营店列表</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tcomputed&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tsearchData() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">let</span> name = <span class=\"keyword\">this</span>.selectedDlrCode.shortName;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">let</span> data = [];</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">if</span>(name) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">this</span>.dlrList.forEach(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(item.shortName.indexOf(name) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t\t\tdata.push(item)</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">return</span> data;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tallDlrCodeListShow() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">let</span> IsSelected = <span class=\"keyword\">this</span>.selectedDlrCode.IsSelected;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">let</span> shortName = <span class=\"keyword\">this</span>.selectedDlrCode.shortName;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">if</span>(shortName &amp;&amp; !IsSelected) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>最近所在的项目问卷调查里需要输入简单的文字，就能查询出相关的所有专营店，刚开始，还真不敢下手，不过写下来后发现也并没有辣么难！！！</p>\n<p>Vuejs实现简单模糊查询</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--专营店模糊查询--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">x-input</span> <span class=\"attr\">label</span>=<span class=\"string\">\"专营店\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"selectedDlrCode.shortName\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">x-input</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dlrcord-list form\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">transition-group</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"allDlrCodeListShow\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"fade\"</span> <span class=\"attr\">tag</span>=<span class=\"string\">\"ul\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in searchData\"</span> <span class=\"attr\">key</span>=<span class=\"string\">\"item.shortName\"</span> <span class=\"attr\">v-bind:data-index</span>=<span class=\"string\">\"index\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"selectDlrCode(item.shortName,item.dlrCode)\"</span>&gt;</span>&#123;&#123; item.shortName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">transition-group</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--专营店模糊查询--&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">\t<span class=\"keyword\">import</span> XInput <span class=\"keyword\">from</span> <span class=\"string\">'@/components/Input'</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">\t<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tdata() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t<span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\tselectedDlrCode: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\tshortName: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\tdlrCode: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\tIsSelected: <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t&#125;, <span class=\"comment\">//专营店</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\tdlrList: [],</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tcomponents: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tXInput</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\twatch: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tselectedDlrCode: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\thandler: <span class=\"function\">(<span class=\"params\">val, oldVal</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">if</span>(val.shortName == <span class=\"string\">''</span>) &#123; <span class=\"comment\">//专营店表单清零后重新开启模糊查询</span></span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t\tval.dlrCode = <span class=\"string\">''</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t\tval.IsSelected = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\tdeep: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tmounted()&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t<span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">this</span>.loadPage();</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tmethods:&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tloadPage()&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"comment\">//获取所有专营的</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\tapi.getData([&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\ttype: types.FUZZY_SEARCH_DLRCODE,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\tparam: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t\tdlrCode,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t&#125;]).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">this</span>.dlrList = res;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t<span class=\"comment\">//选择专营店</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tselectDlrCode(shortName, dlrCode) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">this</span>.selectedDlrCode.shortName = shortName;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">this</span>.selectedDlrCode.dlrCode = dlrCode;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">this</span>.selectedDlrCode.IsSelected = <span class=\"literal\">true</span>; <span class=\"comment\">//隐藏专营店列表</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tcomputed&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tsearchData() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">let</span> name = <span class=\"keyword\">this</span>.selectedDlrCode.shortName;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">let</span> data = [];</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">if</span>(name) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">this</span>.dlrList.forEach(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(item.shortName.indexOf(name) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t\t\tdata.push(item)</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">return</span> data;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tallDlrCodeListShow() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">let</span> IsSelected = <span class=\"keyword\">this</span>.selectedDlrCode.IsSelected;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">let</span> shortName = <span class=\"keyword\">this</span>.selectedDlrCode.shortName;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t<span class=\"keyword\">if</span>(shortName &amp;&amp; !IsSelected) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"就喜欢你看不惯我又干不掉我的样子","keywords":"喜欢你 看不惯 干不掉","date":"2015-05-16T16:00:00.000Z","_content":"公司的风8开始借书啦，本人这么支持风8的，必当先借阅一本尝尝鲜，首先就是被这本书的名字吸引\n——《就喜欢你看不惯我又干不掉我的样子》\n\n#哇哇哇\n\n感觉就是个超会做人的一本书啊，木想到...\n<!-- more -->\n竟然是本漫画？插画书？\n![封面](../../../../images/cat-images/hd.jpg)\n\n更木想到的是，书书还有点污~~~\n\n![封面](../../../../images/cat-images/yj.jpg)\n\n不过风格还是很合我胃口，给了我意向不到的乐趣。\n\n![封面](../../../../images/cat-images/hs1.jpg)\n\n![封面](../../../../images/cat-images/hs2.jpg)\n\n主角是猫狗+少年，偶是超喜欢猫猫的人，看了自然是喜爱得不得了\n\nO(∩_∩)O哈哈~剧透下\n\n![封面](../../../../images/cat-images/pp.jpg)","source":"_posts/Z就喜欢你看不惯我又干不掉我的样子.md","raw":"---\ntitle: 就喜欢你看不惯我又干不掉我的样子\nkeywords: 喜欢你 看不惯 干不掉\ntags: 生活趣事\ncategories: coder\ndate: 2015-05-17\n---\n公司的风8开始借书啦，本人这么支持风8的，必当先借阅一本尝尝鲜，首先就是被这本书的名字吸引\n——《就喜欢你看不惯我又干不掉我的样子》\n\n#哇哇哇\n\n感觉就是个超会做人的一本书啊，木想到...\n<!-- more -->\n竟然是本漫画？插画书？\n![封面](../../../../images/cat-images/hd.jpg)\n\n更木想到的是，书书还有点污~~~\n\n![封面](../../../../images/cat-images/yj.jpg)\n\n不过风格还是很合我胃口，给了我意向不到的乐趣。\n\n![封面](../../../../images/cat-images/hs1.jpg)\n\n![封面](../../../../images/cat-images/hs2.jpg)\n\n主角是猫狗+少年，偶是超喜欢猫猫的人，看了自然是喜爱得不得了\n\nO(∩_∩)O哈哈~剧透下\n\n![封面](../../../../images/cat-images/pp.jpg)","slug":"Z就喜欢你看不惯我又干不掉我的样子","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0x5001s6atfz66keo6x","content":"<p>公司的风8开始借书啦，本人这么支持风8的，必当先借阅一本尝尝鲜，首先就是被这本书的名字吸引<br>——《就喜欢你看不惯我又干不掉我的样子》</p>\n<p>#哇哇哇</p>\n<p>感觉就是个超会做人的一本书啊，木想到…<br><a id=\"more\"></a><br>竟然是本漫画？插画书？<br><img src=\"../../../../images/cat-images/hd.jpg\" alt=\"封面\"></p>\n<p>更木想到的是，书书还有点污~~~</p>\n<p><img src=\"../../../../images/cat-images/yj.jpg\" alt=\"封面\"></p>\n<p>不过风格还是很合我胃口，给了我意向不到的乐趣。</p>\n<p><img src=\"../../../../images/cat-images/hs1.jpg\" alt=\"封面\"></p>\n<p><img src=\"../../../../images/cat-images/hs2.jpg\" alt=\"封面\"></p>\n<p>主角是猫狗+少年，偶是超喜欢猫猫的人，看了自然是喜爱得不得了</p>\n<p>O(∩_∩)O哈哈~剧透下</p>\n<p><img src=\"../../../../images/cat-images/pp.jpg\" alt=\"封面\"></p>\n","site":{"data":{}},"excerpt":"<p>公司的风8开始借书啦，本人这么支持风8的，必当先借阅一本尝尝鲜，首先就是被这本书的名字吸引<br>——《就喜欢你看不惯我又干不掉我的样子》</p>\n<p>#哇哇哇</p>\n<p>感觉就是个超会做人的一本书啊，木想到…<br>","more":"<br>竟然是本漫画？插画书？<br><img src=\"../../../../images/cat-images/hd.jpg\" alt=\"封面\"></p>\n<p>更木想到的是，书书还有点污~~~</p>\n<p><img src=\"../../../../images/cat-images/yj.jpg\" alt=\"封面\"></p>\n<p>不过风格还是很合我胃口，给了我意向不到的乐趣。</p>\n<p><img src=\"../../../../images/cat-images/hs1.jpg\" alt=\"封面\"></p>\n<p><img src=\"../../../../images/cat-images/hs2.jpg\" alt=\"封面\"></p>\n<p>主角是猫狗+少年，偶是超喜欢猫猫的人，看了自然是喜爱得不得了</p>\n<p>O(∩_∩)O哈哈~剧透下</p>\n<p><img src=\"../../../../images/cat-images/pp.jpg\" alt=\"封面\"></p>"},{"title":"Webpack 入门教程","keywords":"Webpack 入门教程","date":"2016-03-19T16:00:00.000Z","_content":"\n目前，我正在学习用webpack搭建React-Native的环境，在众多的学习过程中，发现这个时期的代码更新速度非常的快，而且学习资料也有很多渐渐过时，而我，不得不在这些（旧）教程中掺杂着最新技术开始我漫长的埋坑之旅。\n\n以下资料来源于[Webpack for React](http://www.pro-react.com/materials/appendixA/)、 [入门Webpack，看这篇就够了](http://blog.csdn.net/kun5706947/article/details/52596766)，敬请参考:\n\n# 什么是WebPack，为什么要使用它？\n## 为什要使用WebPack\n现今的很多网页其实可以看做是功能丰富的应用，它们拥有着复杂的JavaScript代码和一大堆依赖包。为了简化开发的复杂度，前端社区涌现出了很多好的实践方法\n\n* 模块化，让我们可以把复杂的程序细化为小的文件;\n* 类似于TypeScript这种在JavaScript基础上拓展的开发语言：使我们能够实现目前版本的JavaScript不能直接使用的特性，并且之后还能能装换为JavaScript文件使浏览器可以识别；\n* Scss，less等CSS预处理器\n\n这些改进确实大大的提高了我们的开发效率，但是利用它们开发的文件往往需要进行额外的处理才能让浏览器识别,而手动处理又是非常反锁的，这就为WebPack类的工具的出现提供了需求。\n## 什么是Webpack\nWebPack可以看做是模块打包机：它做的事情是，分析你的项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（Scss，TypeScript等），并将其打包为合适的格式以供浏览器使用。\n## WebPack和Grunt以及Gulp相比有什么特性\n其实Webpack和另外两个并没有太多的可比性，Gulp/Grunt是一种能够优化前端的开发流程的工具，而WebPack是一种模块化的解决方案，不过Webpack的优点使得Webpack可以替代Gulp/Grunt类的工具。\n\nGrunt和Gulp的工作方式是：在一个配置文件中，指明对某些文件进行类似编译，组合，压缩等任务的具体步骤，这个工具之后可以自动替你完成这些任务。\n\n ![Grunt和Gulp的工作流程](../../../../images/webpack/picture1.png)\n<!-- more -->\n Webpack的工作方式是：把你的项目当做一个整体，通过一个给定的主文件（如：index.js），Webpack将从这个文件开始找到你的项目的所有依赖文件，使用loaders处理它们，最后打包为一个浏览器可识别的JavaScript文件。\n\n  ![Webpack工作方式](../../../../images/webpack/picture2.png)\n\n如果实在要把二者进行比较，Webpack的处理速度更快更直接，能打包更多不同类型的文件。\n# 开始使用Webpack\n初步了解了Webpack工作方式后，我们一步步的开始学习使用Webpack。\n## 安装\nWebpack可以使用npm安装，新建一个空的练习文件夹（此处命名为webpack sample progect），在终端中转到该文件夹后执行下述指令就可以完成安装。\n\n    //全局安装\n    npm install -g webpack\n    //安装到你的项目目录\n    npm install --save-dev webpack\n\n## 正式使用Webpack前的准备\n在上述练习文件夹中创建一个package.json文件，这是一个标准的npm说明文件，里面蕴含了丰富的信息，包括当前项目的依赖模块，自定义的脚本任务等等。在终端中使用`npm`\n`init`命令可以自动创建这个package.json文件\n\n    npm init\n\n输入这个命令后，终端会问你一系列诸如项目名称，项目描述，作者等信息，不过不用担心，如果你不准备在npm中发布你的模块，这些问题的答案都不重要，回车默认即可。\n\n1、package.json文件已经就绪，我们在本项目中安装Webpack作为依赖包\n\n    // 安装Webpack\n    npm install --save-dev webpack\n\n2、回到之前的空文件夹，并在里面创建两个文件夹,app文件夹和public文件夹，app文件夹用来存放原始数据和我们将写的JavaScript模块，public文件夹用来存放准备给浏览器读取的数据（包括使用webpack生成的打包后的js文件以及一个index.html文件）。在这里还需要创建三个文件，index.html 文件放在public文件夹中，两个js文件（Greeter.js和main.js）放在app文件夹中，此时项目结构如下图所示\n\n ![项目结构](../../../../images/webpack/picture3.png)\n\nindex.html文件只有最基础的html代码，它唯一的目的就是加载打包后的js文件（index.js）\n\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>React-Native</title>\n    </head>\n    <body>\n        <div id=\"App\"></div>\n        <script src=\"index.js\"></script>\n    </body>\n    </html>\n\nGreeter.js只包括一个用来返回包含问候信息的html元素的函数。\n\n    // Greeter.js\n    module.exports=\"Hi,World!\";\n\nmain.js用来把Greeter模块返回的节点插入页面。\n\n    //main.js \n    var greeter=require('./Greeter.js');\n    document.getElementById('App').innerHTML=greeter;\n\n## 正式使用Webpack\nwebpack可以在终端中使用，其最基础的命令是\n\n    webpack {entry file/入口文件} {destination for bundled file/存放bundle.js的地方,我们这里用index.js}\n\n只需要指定一个入口文件，webpack将自动识别项目所依赖的其它文件，不过需要注意的是如果你的webpack没有进行全局安装，那么当你在终端中使用此命令时，需要额外指定其在node_modules中的地址，继续上面的例子，在终端中属于如下命令\n\n    //webpack非全局安装的情况\n    node_modules/.bin/webpack app/main.js public/index.js\n\n结果如下\n\n![termialResult1](../../../../images/webpack/picture4.png)\n\n可以看出webpack同时编译了main.js和Greeter,js,现在打开index.html,可以看到如下结果\n\n![htmlResult1](../../../../images/webpack/picture5.png)\n\n有没有很激动，已经成功的使用Webpack打包了一个文件了。不过如果在终端中进行复杂的操作，还是不太方便且容易出错的，接下来看看Webpack的另一种使用方法。\n## 通过配置文件来使用Webpack\nWebpack拥有很多其它的比较高级的功能（比如说本文后面会介绍的loaders和plugins），这些功能其实都可以通过命令行模式实现，但是正如已经提到的，这样不太方便且容易出错的，一个更好的办法是定义一个配置文件，这个配置文件其实也是一个简单的JavaScript模块，可以把所有的与构建相关的信息放在里面。\n\n还是继续上面的例子来说明如何写这个配置文件，在当前练习文件夹的根目录下新建一个名为webpack.config.js的文件，并在其中进行最最简单的配置，如下所示，它包含入口文件路径和存放打包后文件的地方的路径。\n\n    module.exports = {\n        entry:  __dirname + \"/app/main.js\",//已多次提及的唯一入口文件\n        output: {\n        path: __dirname + \"/public\",//打包后的文件存放的地方\n        filename: \"index.js\"//打包后输出文件的文件名\n        }\n    }\n\n>注：“__dirname”是Node.js中的一个全局变量，它指向当前执行脚本所在的目录。\n\n现在如果你需要打包文件只需要在终端里你运行`webpack(非全局安装需使用node_modules/.bin/webpack)`命令就可以了，这条命令会自动参考webpack.config.js文件中的配置选项打包你的项目，输出结果如下\n\n![webpack](../../../../images/webpack/picture6.png)\n\n又学会了一种使用Webpack的方法，而且不用管那烦人的命令行参数了，有没有感觉很爽。有没有想过如果可以连webpack(非全局安装需使用node_modules/.bin/webpack)这条命令都可以不用，那种感觉会不会更爽~，继续看下文。\n\n## 更快捷的执行打包任务\n执行类似于node_modules/.bin/webpack这样的命令其实是比较烦人且容易出错的，不过值得庆幸的是`npm`可以引导任务执行，对其进行配置后可以使用简单的`npm start`命令来代替这些繁琐的命令。在package.json中对`npm`的脚本部分进行相关设置即可，设置方法如下。\n\n    {\n      \"name\": \"react-app\",\n      \"version\": \"1.0.0\",\n      \"description\": \"尝试搭建一次react-native环境\",\n      \"main\": \"main.js\",\n      \"scripts\": {\n        \"start\": \"webpack\"\n      },\n      \"author\": \"FoxSnower\",\n      \"license\": \"ISC\",\n      \"devDependencies\": {\n        \"webpack\": \"^1.13.2\"\n      }\n    }\n\n>注：package.json中的脚本部分已经默认在命令前添加了node_modules/.bin路径，所以无论是全局还是局部安装的Webpack，你都不需要写前面那指明详细的路径了。\n\nnpm的`start`是一个特殊的脚本名称，它的特殊性表现在，在命令行中使用`npm start`就可以执行相关命令，如果对应的此脚本名称不是`start`，想要在命令行中运行时，需要这样用`npm run {script name}`如`npm run build`，以下是执行`npm start`后命令行的输出显示\n\n![npmStartTermialResult](../../../../images/webpack/picture7.png)\n\n现在只需要使用`npm start`就可以打包文件了，有没有觉得webpack也不过如此嘛，不过不要太小瞧Webpack，其强大的功能包含在其一系列可供配置的选项中，我们一项项来看。\n\n# Webpack的强大功能\n## 生成Source Maps（使调试更容易）\n\n开发总是离不开调试，如果可以更加方便的调试当然就能提高开发效率，不过打包后的文件有时候你是不容易找到出错了的地方对应的源代码的位置的，Source Maps就是来帮我们解决这个问题的。\n通过简单的配置后，Webpack在打包时可以为我们生成的source maps，这为我们提供了一种对应编译文件和源文件的方法，使得编译后的代码可读性更高，也更容易调试。\n\n在webpack的配置文件中配置source maps，需要配置devtool，它有以下四种不同的配置选项，各具优缺点，描述如下：\n\n![devtool配置选项](../../../../images/webpack/picture8.png)\n\n正如上表所述，上述选项由上到下打包速度越来越快，不过同时也具有越来越多的负面作用，较快的构建速度的后果就是对打包后的文件的的执行有一定影响。\n\n在学习阶段以及在小到中性的项目上，eval-source-map是一个很好的选项，不过记得只在开发阶段使用它，继续上面的例子，进行如下配置\n\n    module.exports = {\n      devtool: 'eval-source-map',//配置生成Source Maps，选择合适的选项\n      entry:  __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/public\",\n        filename: \"bundle.js\"\n      }\n    }\n\n>cheap-module-eval-source-map方法构建速度更快，但是不利于调试，推荐在大型项目考虑da时间成本是使用。\n\n## 使用webpack构建本地服务器\n想不想让你的浏览器监测你都代码的修改，并自动刷新修改后的结果，其实Webpack提供一个可选的本地开发服务器，这个本地服务器基于node.js构建，可以实现你想要的这些功能，不过它是一个单独的组件，在webpack中进行配置之前需要单独安装它作为项目依赖\n\n    npm install --save-dev webpack-dev-server\n\ndevserver作为webpack配置选项中的一项，具有以下配置选项\n\n![devserver配置选项](../../../../images/webpack/picture9.png)\n\n继续把这些命令加到webpack的配置文件中，现在的配置文件如下所示\n\n    module.exports={\n        devtool:'eval-source-map',//配置生成Source Maps，选择合适的选项\n        \n        entry:__dirname+\"/app/main.js\",//唯一的入口文件\n        output:{\n            path:__dirname+\"/public\",//打包后的文件存放的地方\n            filename:\"index.js\"//打包后输出的文件名\n        },\n        devServer:{\n            contentBase:'./public',//本地服务器所加载的页面所在的目录\n            color:true,//终端中输出结果为彩色\n            historyApiFallBack:true,//不跳转\n            inline:true//实时刷新\n        }\n    }\n\n# Loaders\n## 鼎鼎大名的Loaders登场了！\n\nLoaders是webpack中最让人激动人心的功能之一了。通过使用不同的loader，webpack通过调用外部的脚本或工具可以对各种各样的格式的文件进行处理，比如说分析JSON文件并把它转换为JavaScript文件，或者说把下一代的JS文件（ES6，ES7)转换为现代浏览器可以识别的JS文件。或者说对React的开发而言，合适的Loaders可以把React的JSX文件转换为JS文件。\n\nLoaders需要单独安装并且需要在webpack.config.js下的modules关键字下进行配置，Loaders的配置选项包括以下几方面：\n\n* `test`：一个匹配loaders所处理的文件的拓展名的正则表达式（必须）\n* `loader`：loader的名称（必须）\n* `include/exclude`:手动添加必须处理的文件（文件夹）或屏蔽不需要处理的文件（文件夹）（可选）；\n* `query`：为loaders提供额外的设置选项（可选）\n\n继续上面的例子，我们把Greeter.js里的问候消息放在一个单独的JSON文件里,并通过合适的配置使Greeter.js可以读取该JSON文件的值，配置方法如下\n\n    //安装可以装换JSON的loader\n    npm install --save-dev json-loader\n\n创建带有问候信息的JSON文件(命名为config.json)\n\n    //config.json\n    {\n      \"greetText\": \"Hi there and greetings from JSON!\"\n    }\n\n更新后的Greeter.js\n\n    var config = require('./config.json');\n\n    module.exports = function() {\n      var greet = document.createElement('div');\n      greet.textContent = config.greetText;\n      return greet;\n    };\n\nLoaders很好，不过有的Loaders使用起来比较复杂，比如说Babel。\n\n## Babel\nBabel其实是一个编译JavaScript的平台，它的强大之处表现在可以通过编译帮你达到以下目的：\n\n* 一代的JavaScript标准（ES6，ES7），这些标准目前并未被当前的浏览器完全的支持；\n* 使用基于JavaScript进行了拓展的语言，比如React的JSX\n\n## Babel的安装与配置\n\nBabel其实是几个模块化的包，其核心功能位于称为babel-core的npm包中，不过webpack把它们整合在一起使用，但是对于每一个你需要的功能或拓展，你都需要安装单独的包（用得最多的是解析Es6的babel-preset-es2015包和解析JSX的babel-preset-react包）。\n\n我们先来一次性安装这些依赖包\n\n    // npm一次性安装多个依赖模块，模块之间用空格隔开\n    npm install --save-dev babel-core babel-loader babel-preset-es2015 babel-preset-react\n\n在webpack中配置Babel的方法如下\n\n    module.exports = {\n      devtool: 'eval-source-map',\n        \n      entry:  __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/public\",\n        filename: \"index.js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel',//在webpack的module部分的loaders里进行配置即可\n            query: {\n              presets: ['es2015','react']\n            }\n          }\n        ]\n      },\n    \n      devServer: {\n        contentBase: \"./public\",\n        colors: true,\n        historyApiFallback: true,\n        inline: true\n      }\n    }\n\n现在你的webpack的配置已经允许你使用ES6以及JSX的语法了。继续用上面的例子进行测试，不过这次我们会使用React，记得先安装 React 和 React-DOM\n\n    npm install --save react react-dom\n\n使用ES6的语法，更新Greeter.js并返回一个React组件\n\n    //Greeter,js\n    import React, {Component} from 'react'\n    import config from './config.json';\n    \n    class Greeter extends Component{\n      render() {\n        return (\n          <div>\n            {config.greetText}\n          </div>\n        );\n      }\n    }\n    \n    export default Greeter\n\n使用ES6的模块定义和渲染Greeter模块\n\n    //main.js\n    import React from 'react';\n    import {render} from 'react-dom';\n    import Greeter from './Greeter';\n    \n    render(<Greeter />, document.getElementById('App'));\n\n## Babel的配置选项\nBabel其实可以完全在webpack.config.js中进行配置，但是考虑到babel具有非常多的配置选项，在单一的webpack.config.js文件中进行配置往往使得这个文件显得太复杂，因此一些开发者支持把babel的配置选项放在一个单独的名为 \".babelrc\" 的配置文件中。我们现在的babel的配置并不算复杂，不过之后我们会再加一些东西，因此现在我们就提取出相关部分，分两个配置文件进行配置（webpack会自动调用.babelrc里的babel配置选项），如下：\n\n    // webpack.config.js\n    module.exports = {\n      devtool: 'eval-source-map',\n    \n      entry:  __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/public\",\n        filename: \"index.js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          }\n        ]\n      },\n    \n      devServer: {...} // Omitted for brevity\n    }\n\n    //.babelrc\n    {\n      \"presets\": [\"react\", \"es2015\"]\n    }\n\n到目前为止，我们已经知道了，对于模块，Webpack能提供非常强大的处理功能，那哪些是模块呢。 \n\n# 一切皆模块\nWebpack有一个不可不说的优点，它把所有的文件都可以当做模块处理，包括你的JavaScript代码，也包括CSS和fonts以及图片等等等，只有通过合适的loaders，它们都可以被当做模块被处理。\n## CSS\nwebpack提供两个工具处理样式表，css-loader 和 style-loader，二者处理的任务不同，css-loader使你能够使用类似@import 和 url(...)的方法实现 require()的功能,style-loader将所有的计算后的样式加入页面中，二者组合在一起使你能够把样式表嵌入webpack打包后的JS文件中。\n\n继续上面的例子\n\n    //安装\n    npm install --save-dev style-loader css-loader\n \n    //使用\n    module.exports = {\n      devtool: 'eval-source-map',\n      entry:  __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"index.js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: 'style!css'//添加对样式表的处理\n          }\n        ]\n      },\n    \n      devServer: {...}\n    }\n\n>注：感叹号的作用在于使同一文件能够使用不同类型的loader\n\n接下来，在app文件夹里创建一个名字为\"main.css\"的文件，对一些元素设置样式\n\n    html {\n      box-sizing: border-box;\n      -ms-text-size-adjust: 100%;\n      -webkit-text-size-adjust: 100%;\n    }\n    *, *:before, *:after {\n      box-sizing: inherit;\n    }\n    body {\n      margin: 0;\n      font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    }\n    h1, h2, h3, h4, h5, h6, p, ul {\n      margin: 0;\n      padding: 0;\n    }\n\n你还记得吗？webpack只有单一的入口，其它的模块需要通过 import, require, url等导入相关位置，为了让webpack能找到”main.css“文件，我们把它导入”main.js “中，如下\n\n    //main.js\n    import React from 'react';\n    import {render} from 'react-dom';\n    import Greeter from './Greeter';\n    \n    import './main.css';//使用require导入css文件\n    \n    render(<Greeter />, document.getElementById('App'));  \n\n>通常情况下，css会和js打包到同一个文件中，并不会打包为一个单独的css文件，不过通过合适的配置webpack也可以把css打包为单独的文件的。\n不过这也只是webpack把css当做模块而已，咱们继续看看一个真的CSS模块的实践。\n\n## CSS module\n在过去的一些年里，JavaScript通过一些新的语言特性，更好的工具以及更好的实践方法（比如说模块化）发展得非常迅速。模块使得开发者把复杂的代码转化为小的，干净的，依赖声明明确的单元，且基于优化工具，依赖管理和加载管理可以自动完成。\n不过前端的另外一部分，CSS发展就相对慢一些，大多的样式表却依旧是巨大且充满了全局类名，这使得维护和修改都非常困难和复杂。\n\n最近有一个叫做 CSS modules 的技术就意在把JS的模块化思想带入CSS中来，通过CSS模块，所有的类名，动画名默认都只作用于当前模块。Webpack从一开始就对CSS模块化提供了支持，在CSS loader中进行配置后，你所需要做的一切就是把”modules“传递都所需要的地方，然后就可以直接把CSS的类名传递到组件的代码中，且这样做只对当前组件有效，不必担心在不同的模块中具有相同的类名可能会造成的问题。具体的代码如下\n\n    module.exports = {\n      devtool: 'eval-source-map',\n    \n      entry:  __dirname + \"/app/main.js\",\n      output: {...},\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: 'style!css?modules'//跟前面相比就在后面加上了?modules\n          }\n        ]\n      },\n    \n      devServer: {...}\n    }\n\n创建一个Greeter.css文件\n\n    .root {\n      background-color: #eee;\n      padding: 10px;\n      border: 3px solid #ccc;\n    }\n\n导入.root到Greeter.js中\n\n    import React, {Component} from 'react';\n    import config from './config.json';\n    import styles from './Greeter.css';//导入\n    \n    class Greeter extends Component{\n      render() {\n        return (\n          <div className={styles.root}>//添加类名\n            {config.greetText}\n          </div>\n        );\n      }\n    }\n    \n    export default Greeter   \n\n放心使用把，相同的类名也不会造成不同组件之间的污染。\nCSS modules 也是一个很大的主题，有兴趣的话可以去官方文档查看更多消息\n\n## CSS预处理器\n\nSass 和 Less之类的预处理器是对原生CSS的拓展，它们允许你使用类似于variables, nesting, mixins, inheritance等不存在于CSS中的特性来写CSS，CSS预处理器可以这些特殊类型的语句转化为浏览器可识别的CSS语句，\n你现在可能都已经熟悉了，在webpack里使用相关loaders进行配置就可以使用了，以下是常用的CSS 处理loaders\n\n* Less Loader\n* Sass Loader\n* Stylus Loader\n\n不过其实也存在一个CSS的处理平台-PostCSS，它可以帮助你的CSS实现更多的功能，在其[CSS官方文档](https://github.com/postcss/postcss)可了解更多相关知识。\n\n举例来说如何使用PostCSS，我们使用PostCSS来为CSS代码自动添加适应不同浏览器的CSS前缀。\n\n首先安装postcss-loader 和 autoprefixer（自动添加前缀的插件）\n\n    npm install --save-dev postcss-loader autoprefixer\n\n接下来，在webpack配置文件中进行设置，只需要新建一个postcss关键字，并在里面申明依赖的插件，如下，现在你写的css会自动根据Can i use里的数据添加不同前缀了。\n\n    //webpack配置文件\n    module.exports = {\n      devtool: 'eval-source-map',\n      entry: __dirname + \"/app/main.js\",\n      output: {...},\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: 'style!css?modules!postcss'\n          }\n        ]\n      },\n    \n      postcss: [\n        require('autoprefixer')//调用autoprefixer插件\n      ],\n    \n      devServer: {...}\n    }\n\n到现在，本文已经涉及到处理JS的Babel和处理CSS的PostCSS，它们其实也是两个单独的平台，配合Webpack可以很好的发挥它们的作用。接下来介绍Webpack中另一个非常重要的功能-Plugins\n\n# 插件（Plugins）\n插件（Plugins）是用来拓展Webpack功能的，它们会在整个构建过程中生效，执行相关的任务。\nLoaders和Plugins常常被弄混，但是他们其实是完全不同的东西，可以这么来说，loaders是在打包构建过程中用来处理源文件的（JSX，Scss，Less..），一次处理一个，插件并不直接操作单个文件，它直接对整个构建过程其作用。\n\nWebpack有很多内置插件，同时也有很多第三方插件，可以让我们完成更加丰富的功能。\n\n## 使用插件的方法\n要使用某个插件，我们需要通过npm安装它，然后要做的就是在webpack配置中的plugins关键字部分添加该插件的一个实例（plugins是一个数组）继续看例子，我们添加了一个实现版权声明的插件。\n\n    //webpack.config.js\n    var webpack = require('webpack');\n    \n    module.exports = {\n      devtool: 'eval-source-map',\n      entry:  __dirname + \"/app/main.js\",\n      output: {...},\n    \n      module: {\n        loaders: [\n          { test: /\\.json$/, loader: \"json\" },\n          { test: /\\.js$/, exclude: /node_modules/, loader: 'babel' },\n          { test: /\\.css$/, loader: 'style!css?modules!postcss' }//这里添加PostCSS\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new webpack.BannerPlugin(\"Copyright Flying Unicorns inc.\")//在这个数组中new一个就可以了\n      ],\n    \n      devServer: {...}\n    }\n\n通过这个插件，打包后的JS文件显示如下\n\n知道Webpack中的插件如何使用了，下面给大家推荐几个常用的插件\n## HtmlWebpackPlugin\n这个插件的作用是依据一个简单的模板，帮你生成最终的HTML5文件，这个文件中自动引用了你打包后的JS文件。每次编译都在文件名中插入一个不同的哈希值。\n\n安装\n\n    npm install --save-dev html-webpack-plugin\n\n这个插件自动完成了我们之前手动做的一些事情，在正式使用之前需要对一直以来的项目结构做一些改变：\n\n1、移除public文件夹，利用此插件，HTML5文件会自动生成，此外CSS已经通过前面的操作打包到JS中了，public文件夹里。\n2、在app目录下，创建一个Html文件模板，这个模板包含title等其它你需要的元素，在编译过程中，本插件会依据此模板生成最终的html页面，会自动添加所依赖的 css, js，favicon等文件，在本例中我们命名模板文件名称为index.tmpl.html，模板源代码如下\n\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Webpack Sample Project</title>\n      </head>\n      <body>\n        <div id='App'>\n        </div>\n      </body>\n    </html>\n\n3、更新webpack的配置文件，方法同上,新建一个build文件夹用来存放最终的输出文件\n\n    var webpack = require('webpack');\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    module.exports = {\n      devtool: 'eval-source-map',\n    \n      entry:  __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"index.js\"\n      },\n    \n      module: {\n        loaders: [\n          { test: /\\.json$/, loader: \"json\" },\n          { test: /\\.js$/, exclude: /node_modules/, loader: 'babel' },\n          { test: /\\.css$/, loader: 'style!css?modules!postcss' }\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new HtmlWebpackPlugin({\n          template: __dirname + \"/app/index.tmpl.html\"//new 一个这个插件的实例，并传入相关的参数\n        })\n      ],\n    \n      devServer: {\n        colors: true,\n        historyApiFallback: true,\n        inline: true\n      }\n    }\n\n## Hot Module Replacement\n\nHot Module Replacement（HMR）也是webpack里很有用的一个插件，它允许你在修改组件代码后，自动刷新实时预览修改后的效果。\n在webpack中实现HMR也很简单，只需要做两项配置\n\n1、在webpack配置文件中添加HMR插件；\n2、在Webpack Dev Server中添加“hot”参数；\n\n不过配置完这些后，JS模块其实还是不能自动热加载的，还需要在你的JS模块中执行一个Webpack提供的API才能实现热加载，虽然这个API不难使用，但是如果是React模块，使用我们已经熟悉的Babel可以更方便的实现功能热加载。\n\n整理下我们的思路，具体实现方法如下\n\n* Babel和webpack是独立的工具\n* 二者可以一起工作\n* 二者都可以通过插件拓展功能\n* HMR是一个webpack插件，它让你能浏览器中实时观察模块修改后的效果，但是如果你想让它工作，需要对模块进行额外的配额；\n* Babel有一个叫做react-transform-hrm的插件，可以在不对React模块进行额外的配置的前提下让HMR正常工作;\n\n更新我们的例子来实际看看如何配置\n\n    //webpack中的配置\n    var webpack = require('webpack');\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    \n    module.exports = {\n      devtool: 'eval-source-map',\n      entry: __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"bundle.js\"\n      },\n    \n      module: {\n        loaders: [\n          { test: /\\.json$/, loader: \"json\" },\n          { test: /\\.js$/, exclude: /node_modules/, loader: 'babel' },\n          { test: /\\.css$/, loader: 'style!css?modules!postcss' }\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new HtmlWebpackPlugin({\n          template: __dirname + \"/app/index.tmpl.html\"\n        }),\n        new webpack.HotModuleReplacementPlugin()//热加载插件\n      ],\n    \n      devServer: {\n        colors: true,\n        historyApiFallback: true,\n        inline: true,\n        hot: true\n      }\n    }\n\n安装react-transform-hmr\n\n    npm install --save-dev babel-plugin-react-transform react-transform-hmr\n\n配置Babel\n\n    {\n      \"presets\": [\"react\", \"es2015\"],\n      \"env\": {\n        \"development\": {\n        \"plugins\": [[\"react-transform\", {\n           \"transforms\": [{\n             \"transform\": \"react-transform-hmr\",\n    \n             \"imports\": [\"react\"],\n    \n             \"locals\": [\"module\"]\n           }]\n         }]]\n        }\n      }\n    }\n\n现在当你使用React时，可以热加载模块了\n\n# 产品阶段的构建\n目前为止，我们已经使用webpack构建了一个完整的开发环境。但是在产品阶段，可能还需要对打包的文件进行额外的处理，比如说优化，压缩，缓存以及分离CSS和JS。\n\n对于复杂的项目来说，需要复杂的配置，这时候分解配置文件为多个小的文件可以使得事情井井有条，以上面的例子来说，我们创建一个“webpack.production.config.js”的文件，在里面加上基本的配置,它和原始的webpack.config.js很像，如下\n\n    var webpack = require('webpack');\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    \n    module.exports = {\n      entry: __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"bundle.js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: 'style!css?modules!postcss'\n          }\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new HtmlWebpackPlugin({\n          template: __dirname + \"/app/index.tmpl.html\"\n        }),\n      ],\n    \n    }\n\n\n    //package.json\n    {\n      \"name\": \"webpack-sample-project\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Sample webpack project\",\n      \"scripts\": {\n        \"start\": \"webpack-dev-server --progress\",\n        \"build\": \"NODE_ENV=production webpack --config ./webpack.production.config.js --progress\"\n      },\n      \"author\": \"Cássio Zen\",\n      \"license\": \"ISC\",\n      \"devDependencies\": {...},\n      \"dependencies\": {...}\n    }\n\n# 优化插件\nwebpack提供了一些在发布阶段非常有用的优化插件，它们大多来自于webpack社区，可以通过npm安装，通过以下插件可以完成产品发布阶段所需的功能\n\n* OccurenceOrderPlugin :为组件分配ID，通过这个插件webpack可以分析和优先考虑使用最多的模块，并为它们分配最小的ID\n* UglifyJsPlugin：压缩JS代码；\n* ExtractTextPlugin：分离CSS和JS文件\n\n我们继续用例子来看看如何添加它们，OccurenceOrder 和 UglifyJS plugins 都是内置插件，你需要做的只是安装它们\n\n    npm install --save-dev extract-text-webpack-plugin  \n\n在配置文件的plugins后引用它们\n\n    var webpack = require('webpack');\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    var ExtractTextPlugin = require('extract-text-webpack-plugin');\n    \n    module.exports = {\n      entry: __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"bundle.js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: ExtractTextPlugin.extract('style', 'css?modules!postcss')\n          }\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new HtmlWebpackPlugin({\n          template: __dirname + \"/app/index.tmpl.html\"\n        }),\n        new webpack.optimize.OccurenceOrderPlugin(),\n        new webpack.optimize.UglifyJsPlugin(),\n        new ExtractTextPlugin(\"style.css\")\n      ]\n    }\n\n# 缓存\n缓存无处不在，使用缓存的最好方法是保证你的文件名和文件内容是匹配的（内容改变，名称相应改变）\n\nwebpack可以把一个哈希值添加到打包的文件名中，使用方法如下,添加特殊的字符串混合体（[name], [id] and [hash]）到输出文件名前\n\n    var webpack = require('webpack');\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    var ExtractTextPlugin = require('extract-text-webpack-plugin');\n    \n    module.exports = {\n      entry: __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"[name]-[hash].js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: ExtractTextPlugin.extract('style', 'css?modules!postcss')\n          }\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new HtmlWebpackPlugin({\n          template: __dirname + \"/app/index.tmpl.html\"\n        }),\n        new webpack.optimize.OccurenceOrderPlugin(),\n        new webpack.optimize.UglifyJsPlugin(),\n        new ExtractTextPlugin(\"[name]-[hash].css\")\n      ]\n    }\n\n现在用户会有合理的缓存了。\n\n# 总结\n这是一篇好长的文章，谢谢你的耐心，能仔细看到了这里，大概半个月前我第一次自己一步步配置项目所需的Webpack后就一直想写一篇笔记做总结，几次动笔都不能让自己满意，总觉得写不清楚。直到看到本文的英文版Webpack for React，真的有多次豁然开朗的感觉，喜欢看原文的点链接就可以看了。其实关于Webpack本文讲述得仍不完全，不过相信你看完后已经进入Webpack的大门，能够更好的探索其它的关于Webpack的知识了。\n\n本文转载自 http://www.jianshu.com/p/42e11515c10f  \n","source":"_posts/Webpack入门教程.md","raw":"\n---\ntitle: Webpack 入门教程\nkeywords:  Webpack 入门教程\ntags: Webpack\ncategories: skill\ndate: 2016-03-20\n---\n\n目前，我正在学习用webpack搭建React-Native的环境，在众多的学习过程中，发现这个时期的代码更新速度非常的快，而且学习资料也有很多渐渐过时，而我，不得不在这些（旧）教程中掺杂着最新技术开始我漫长的埋坑之旅。\n\n以下资料来源于[Webpack for React](http://www.pro-react.com/materials/appendixA/)、 [入门Webpack，看这篇就够了](http://blog.csdn.net/kun5706947/article/details/52596766)，敬请参考:\n\n# 什么是WebPack，为什么要使用它？\n## 为什要使用WebPack\n现今的很多网页其实可以看做是功能丰富的应用，它们拥有着复杂的JavaScript代码和一大堆依赖包。为了简化开发的复杂度，前端社区涌现出了很多好的实践方法\n\n* 模块化，让我们可以把复杂的程序细化为小的文件;\n* 类似于TypeScript这种在JavaScript基础上拓展的开发语言：使我们能够实现目前版本的JavaScript不能直接使用的特性，并且之后还能能装换为JavaScript文件使浏览器可以识别；\n* Scss，less等CSS预处理器\n\n这些改进确实大大的提高了我们的开发效率，但是利用它们开发的文件往往需要进行额外的处理才能让浏览器识别,而手动处理又是非常反锁的，这就为WebPack类的工具的出现提供了需求。\n## 什么是Webpack\nWebPack可以看做是模块打包机：它做的事情是，分析你的项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（Scss，TypeScript等），并将其打包为合适的格式以供浏览器使用。\n## WebPack和Grunt以及Gulp相比有什么特性\n其实Webpack和另外两个并没有太多的可比性，Gulp/Grunt是一种能够优化前端的开发流程的工具，而WebPack是一种模块化的解决方案，不过Webpack的优点使得Webpack可以替代Gulp/Grunt类的工具。\n\nGrunt和Gulp的工作方式是：在一个配置文件中，指明对某些文件进行类似编译，组合，压缩等任务的具体步骤，这个工具之后可以自动替你完成这些任务。\n\n ![Grunt和Gulp的工作流程](../../../../images/webpack/picture1.png)\n<!-- more -->\n Webpack的工作方式是：把你的项目当做一个整体，通过一个给定的主文件（如：index.js），Webpack将从这个文件开始找到你的项目的所有依赖文件，使用loaders处理它们，最后打包为一个浏览器可识别的JavaScript文件。\n\n  ![Webpack工作方式](../../../../images/webpack/picture2.png)\n\n如果实在要把二者进行比较，Webpack的处理速度更快更直接，能打包更多不同类型的文件。\n# 开始使用Webpack\n初步了解了Webpack工作方式后，我们一步步的开始学习使用Webpack。\n## 安装\nWebpack可以使用npm安装，新建一个空的练习文件夹（此处命名为webpack sample progect），在终端中转到该文件夹后执行下述指令就可以完成安装。\n\n    //全局安装\n    npm install -g webpack\n    //安装到你的项目目录\n    npm install --save-dev webpack\n\n## 正式使用Webpack前的准备\n在上述练习文件夹中创建一个package.json文件，这是一个标准的npm说明文件，里面蕴含了丰富的信息，包括当前项目的依赖模块，自定义的脚本任务等等。在终端中使用`npm`\n`init`命令可以自动创建这个package.json文件\n\n    npm init\n\n输入这个命令后，终端会问你一系列诸如项目名称，项目描述，作者等信息，不过不用担心，如果你不准备在npm中发布你的模块，这些问题的答案都不重要，回车默认即可。\n\n1、package.json文件已经就绪，我们在本项目中安装Webpack作为依赖包\n\n    // 安装Webpack\n    npm install --save-dev webpack\n\n2、回到之前的空文件夹，并在里面创建两个文件夹,app文件夹和public文件夹，app文件夹用来存放原始数据和我们将写的JavaScript模块，public文件夹用来存放准备给浏览器读取的数据（包括使用webpack生成的打包后的js文件以及一个index.html文件）。在这里还需要创建三个文件，index.html 文件放在public文件夹中，两个js文件（Greeter.js和main.js）放在app文件夹中，此时项目结构如下图所示\n\n ![项目结构](../../../../images/webpack/picture3.png)\n\nindex.html文件只有最基础的html代码，它唯一的目的就是加载打包后的js文件（index.js）\n\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>React-Native</title>\n    </head>\n    <body>\n        <div id=\"App\"></div>\n        <script src=\"index.js\"></script>\n    </body>\n    </html>\n\nGreeter.js只包括一个用来返回包含问候信息的html元素的函数。\n\n    // Greeter.js\n    module.exports=\"Hi,World!\";\n\nmain.js用来把Greeter模块返回的节点插入页面。\n\n    //main.js \n    var greeter=require('./Greeter.js');\n    document.getElementById('App').innerHTML=greeter;\n\n## 正式使用Webpack\nwebpack可以在终端中使用，其最基础的命令是\n\n    webpack {entry file/入口文件} {destination for bundled file/存放bundle.js的地方,我们这里用index.js}\n\n只需要指定一个入口文件，webpack将自动识别项目所依赖的其它文件，不过需要注意的是如果你的webpack没有进行全局安装，那么当你在终端中使用此命令时，需要额外指定其在node_modules中的地址，继续上面的例子，在终端中属于如下命令\n\n    //webpack非全局安装的情况\n    node_modules/.bin/webpack app/main.js public/index.js\n\n结果如下\n\n![termialResult1](../../../../images/webpack/picture4.png)\n\n可以看出webpack同时编译了main.js和Greeter,js,现在打开index.html,可以看到如下结果\n\n![htmlResult1](../../../../images/webpack/picture5.png)\n\n有没有很激动，已经成功的使用Webpack打包了一个文件了。不过如果在终端中进行复杂的操作，还是不太方便且容易出错的，接下来看看Webpack的另一种使用方法。\n## 通过配置文件来使用Webpack\nWebpack拥有很多其它的比较高级的功能（比如说本文后面会介绍的loaders和plugins），这些功能其实都可以通过命令行模式实现，但是正如已经提到的，这样不太方便且容易出错的，一个更好的办法是定义一个配置文件，这个配置文件其实也是一个简单的JavaScript模块，可以把所有的与构建相关的信息放在里面。\n\n还是继续上面的例子来说明如何写这个配置文件，在当前练习文件夹的根目录下新建一个名为webpack.config.js的文件，并在其中进行最最简单的配置，如下所示，它包含入口文件路径和存放打包后文件的地方的路径。\n\n    module.exports = {\n        entry:  __dirname + \"/app/main.js\",//已多次提及的唯一入口文件\n        output: {\n        path: __dirname + \"/public\",//打包后的文件存放的地方\n        filename: \"index.js\"//打包后输出文件的文件名\n        }\n    }\n\n>注：“__dirname”是Node.js中的一个全局变量，它指向当前执行脚本所在的目录。\n\n现在如果你需要打包文件只需要在终端里你运行`webpack(非全局安装需使用node_modules/.bin/webpack)`命令就可以了，这条命令会自动参考webpack.config.js文件中的配置选项打包你的项目，输出结果如下\n\n![webpack](../../../../images/webpack/picture6.png)\n\n又学会了一种使用Webpack的方法，而且不用管那烦人的命令行参数了，有没有感觉很爽。有没有想过如果可以连webpack(非全局安装需使用node_modules/.bin/webpack)这条命令都可以不用，那种感觉会不会更爽~，继续看下文。\n\n## 更快捷的执行打包任务\n执行类似于node_modules/.bin/webpack这样的命令其实是比较烦人且容易出错的，不过值得庆幸的是`npm`可以引导任务执行，对其进行配置后可以使用简单的`npm start`命令来代替这些繁琐的命令。在package.json中对`npm`的脚本部分进行相关设置即可，设置方法如下。\n\n    {\n      \"name\": \"react-app\",\n      \"version\": \"1.0.0\",\n      \"description\": \"尝试搭建一次react-native环境\",\n      \"main\": \"main.js\",\n      \"scripts\": {\n        \"start\": \"webpack\"\n      },\n      \"author\": \"FoxSnower\",\n      \"license\": \"ISC\",\n      \"devDependencies\": {\n        \"webpack\": \"^1.13.2\"\n      }\n    }\n\n>注：package.json中的脚本部分已经默认在命令前添加了node_modules/.bin路径，所以无论是全局还是局部安装的Webpack，你都不需要写前面那指明详细的路径了。\n\nnpm的`start`是一个特殊的脚本名称，它的特殊性表现在，在命令行中使用`npm start`就可以执行相关命令，如果对应的此脚本名称不是`start`，想要在命令行中运行时，需要这样用`npm run {script name}`如`npm run build`，以下是执行`npm start`后命令行的输出显示\n\n![npmStartTermialResult](../../../../images/webpack/picture7.png)\n\n现在只需要使用`npm start`就可以打包文件了，有没有觉得webpack也不过如此嘛，不过不要太小瞧Webpack，其强大的功能包含在其一系列可供配置的选项中，我们一项项来看。\n\n# Webpack的强大功能\n## 生成Source Maps（使调试更容易）\n\n开发总是离不开调试，如果可以更加方便的调试当然就能提高开发效率，不过打包后的文件有时候你是不容易找到出错了的地方对应的源代码的位置的，Source Maps就是来帮我们解决这个问题的。\n通过简单的配置后，Webpack在打包时可以为我们生成的source maps，这为我们提供了一种对应编译文件和源文件的方法，使得编译后的代码可读性更高，也更容易调试。\n\n在webpack的配置文件中配置source maps，需要配置devtool，它有以下四种不同的配置选项，各具优缺点，描述如下：\n\n![devtool配置选项](../../../../images/webpack/picture8.png)\n\n正如上表所述，上述选项由上到下打包速度越来越快，不过同时也具有越来越多的负面作用，较快的构建速度的后果就是对打包后的文件的的执行有一定影响。\n\n在学习阶段以及在小到中性的项目上，eval-source-map是一个很好的选项，不过记得只在开发阶段使用它，继续上面的例子，进行如下配置\n\n    module.exports = {\n      devtool: 'eval-source-map',//配置生成Source Maps，选择合适的选项\n      entry:  __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/public\",\n        filename: \"bundle.js\"\n      }\n    }\n\n>cheap-module-eval-source-map方法构建速度更快，但是不利于调试，推荐在大型项目考虑da时间成本是使用。\n\n## 使用webpack构建本地服务器\n想不想让你的浏览器监测你都代码的修改，并自动刷新修改后的结果，其实Webpack提供一个可选的本地开发服务器，这个本地服务器基于node.js构建，可以实现你想要的这些功能，不过它是一个单独的组件，在webpack中进行配置之前需要单独安装它作为项目依赖\n\n    npm install --save-dev webpack-dev-server\n\ndevserver作为webpack配置选项中的一项，具有以下配置选项\n\n![devserver配置选项](../../../../images/webpack/picture9.png)\n\n继续把这些命令加到webpack的配置文件中，现在的配置文件如下所示\n\n    module.exports={\n        devtool:'eval-source-map',//配置生成Source Maps，选择合适的选项\n        \n        entry:__dirname+\"/app/main.js\",//唯一的入口文件\n        output:{\n            path:__dirname+\"/public\",//打包后的文件存放的地方\n            filename:\"index.js\"//打包后输出的文件名\n        },\n        devServer:{\n            contentBase:'./public',//本地服务器所加载的页面所在的目录\n            color:true,//终端中输出结果为彩色\n            historyApiFallBack:true,//不跳转\n            inline:true//实时刷新\n        }\n    }\n\n# Loaders\n## 鼎鼎大名的Loaders登场了！\n\nLoaders是webpack中最让人激动人心的功能之一了。通过使用不同的loader，webpack通过调用外部的脚本或工具可以对各种各样的格式的文件进行处理，比如说分析JSON文件并把它转换为JavaScript文件，或者说把下一代的JS文件（ES6，ES7)转换为现代浏览器可以识别的JS文件。或者说对React的开发而言，合适的Loaders可以把React的JSX文件转换为JS文件。\n\nLoaders需要单独安装并且需要在webpack.config.js下的modules关键字下进行配置，Loaders的配置选项包括以下几方面：\n\n* `test`：一个匹配loaders所处理的文件的拓展名的正则表达式（必须）\n* `loader`：loader的名称（必须）\n* `include/exclude`:手动添加必须处理的文件（文件夹）或屏蔽不需要处理的文件（文件夹）（可选）；\n* `query`：为loaders提供额外的设置选项（可选）\n\n继续上面的例子，我们把Greeter.js里的问候消息放在一个单独的JSON文件里,并通过合适的配置使Greeter.js可以读取该JSON文件的值，配置方法如下\n\n    //安装可以装换JSON的loader\n    npm install --save-dev json-loader\n\n创建带有问候信息的JSON文件(命名为config.json)\n\n    //config.json\n    {\n      \"greetText\": \"Hi there and greetings from JSON!\"\n    }\n\n更新后的Greeter.js\n\n    var config = require('./config.json');\n\n    module.exports = function() {\n      var greet = document.createElement('div');\n      greet.textContent = config.greetText;\n      return greet;\n    };\n\nLoaders很好，不过有的Loaders使用起来比较复杂，比如说Babel。\n\n## Babel\nBabel其实是一个编译JavaScript的平台，它的强大之处表现在可以通过编译帮你达到以下目的：\n\n* 一代的JavaScript标准（ES6，ES7），这些标准目前并未被当前的浏览器完全的支持；\n* 使用基于JavaScript进行了拓展的语言，比如React的JSX\n\n## Babel的安装与配置\n\nBabel其实是几个模块化的包，其核心功能位于称为babel-core的npm包中，不过webpack把它们整合在一起使用，但是对于每一个你需要的功能或拓展，你都需要安装单独的包（用得最多的是解析Es6的babel-preset-es2015包和解析JSX的babel-preset-react包）。\n\n我们先来一次性安装这些依赖包\n\n    // npm一次性安装多个依赖模块，模块之间用空格隔开\n    npm install --save-dev babel-core babel-loader babel-preset-es2015 babel-preset-react\n\n在webpack中配置Babel的方法如下\n\n    module.exports = {\n      devtool: 'eval-source-map',\n        \n      entry:  __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/public\",\n        filename: \"index.js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel',//在webpack的module部分的loaders里进行配置即可\n            query: {\n              presets: ['es2015','react']\n            }\n          }\n        ]\n      },\n    \n      devServer: {\n        contentBase: \"./public\",\n        colors: true,\n        historyApiFallback: true,\n        inline: true\n      }\n    }\n\n现在你的webpack的配置已经允许你使用ES6以及JSX的语法了。继续用上面的例子进行测试，不过这次我们会使用React，记得先安装 React 和 React-DOM\n\n    npm install --save react react-dom\n\n使用ES6的语法，更新Greeter.js并返回一个React组件\n\n    //Greeter,js\n    import React, {Component} from 'react'\n    import config from './config.json';\n    \n    class Greeter extends Component{\n      render() {\n        return (\n          <div>\n            {config.greetText}\n          </div>\n        );\n      }\n    }\n    \n    export default Greeter\n\n使用ES6的模块定义和渲染Greeter模块\n\n    //main.js\n    import React from 'react';\n    import {render} from 'react-dom';\n    import Greeter from './Greeter';\n    \n    render(<Greeter />, document.getElementById('App'));\n\n## Babel的配置选项\nBabel其实可以完全在webpack.config.js中进行配置，但是考虑到babel具有非常多的配置选项，在单一的webpack.config.js文件中进行配置往往使得这个文件显得太复杂，因此一些开发者支持把babel的配置选项放在一个单独的名为 \".babelrc\" 的配置文件中。我们现在的babel的配置并不算复杂，不过之后我们会再加一些东西，因此现在我们就提取出相关部分，分两个配置文件进行配置（webpack会自动调用.babelrc里的babel配置选项），如下：\n\n    // webpack.config.js\n    module.exports = {\n      devtool: 'eval-source-map',\n    \n      entry:  __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/public\",\n        filename: \"index.js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          }\n        ]\n      },\n    \n      devServer: {...} // Omitted for brevity\n    }\n\n    //.babelrc\n    {\n      \"presets\": [\"react\", \"es2015\"]\n    }\n\n到目前为止，我们已经知道了，对于模块，Webpack能提供非常强大的处理功能，那哪些是模块呢。 \n\n# 一切皆模块\nWebpack有一个不可不说的优点，它把所有的文件都可以当做模块处理，包括你的JavaScript代码，也包括CSS和fonts以及图片等等等，只有通过合适的loaders，它们都可以被当做模块被处理。\n## CSS\nwebpack提供两个工具处理样式表，css-loader 和 style-loader，二者处理的任务不同，css-loader使你能够使用类似@import 和 url(...)的方法实现 require()的功能,style-loader将所有的计算后的样式加入页面中，二者组合在一起使你能够把样式表嵌入webpack打包后的JS文件中。\n\n继续上面的例子\n\n    //安装\n    npm install --save-dev style-loader css-loader\n \n    //使用\n    module.exports = {\n      devtool: 'eval-source-map',\n      entry:  __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"index.js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: 'style!css'//添加对样式表的处理\n          }\n        ]\n      },\n    \n      devServer: {...}\n    }\n\n>注：感叹号的作用在于使同一文件能够使用不同类型的loader\n\n接下来，在app文件夹里创建一个名字为\"main.css\"的文件，对一些元素设置样式\n\n    html {\n      box-sizing: border-box;\n      -ms-text-size-adjust: 100%;\n      -webkit-text-size-adjust: 100%;\n    }\n    *, *:before, *:after {\n      box-sizing: inherit;\n    }\n    body {\n      margin: 0;\n      font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    }\n    h1, h2, h3, h4, h5, h6, p, ul {\n      margin: 0;\n      padding: 0;\n    }\n\n你还记得吗？webpack只有单一的入口，其它的模块需要通过 import, require, url等导入相关位置，为了让webpack能找到”main.css“文件，我们把它导入”main.js “中，如下\n\n    //main.js\n    import React from 'react';\n    import {render} from 'react-dom';\n    import Greeter from './Greeter';\n    \n    import './main.css';//使用require导入css文件\n    \n    render(<Greeter />, document.getElementById('App'));  \n\n>通常情况下，css会和js打包到同一个文件中，并不会打包为一个单独的css文件，不过通过合适的配置webpack也可以把css打包为单独的文件的。\n不过这也只是webpack把css当做模块而已，咱们继续看看一个真的CSS模块的实践。\n\n## CSS module\n在过去的一些年里，JavaScript通过一些新的语言特性，更好的工具以及更好的实践方法（比如说模块化）发展得非常迅速。模块使得开发者把复杂的代码转化为小的，干净的，依赖声明明确的单元，且基于优化工具，依赖管理和加载管理可以自动完成。\n不过前端的另外一部分，CSS发展就相对慢一些，大多的样式表却依旧是巨大且充满了全局类名，这使得维护和修改都非常困难和复杂。\n\n最近有一个叫做 CSS modules 的技术就意在把JS的模块化思想带入CSS中来，通过CSS模块，所有的类名，动画名默认都只作用于当前模块。Webpack从一开始就对CSS模块化提供了支持，在CSS loader中进行配置后，你所需要做的一切就是把”modules“传递都所需要的地方，然后就可以直接把CSS的类名传递到组件的代码中，且这样做只对当前组件有效，不必担心在不同的模块中具有相同的类名可能会造成的问题。具体的代码如下\n\n    module.exports = {\n      devtool: 'eval-source-map',\n    \n      entry:  __dirname + \"/app/main.js\",\n      output: {...},\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: 'style!css?modules'//跟前面相比就在后面加上了?modules\n          }\n        ]\n      },\n    \n      devServer: {...}\n    }\n\n创建一个Greeter.css文件\n\n    .root {\n      background-color: #eee;\n      padding: 10px;\n      border: 3px solid #ccc;\n    }\n\n导入.root到Greeter.js中\n\n    import React, {Component} from 'react';\n    import config from './config.json';\n    import styles from './Greeter.css';//导入\n    \n    class Greeter extends Component{\n      render() {\n        return (\n          <div className={styles.root}>//添加类名\n            {config.greetText}\n          </div>\n        );\n      }\n    }\n    \n    export default Greeter   \n\n放心使用把，相同的类名也不会造成不同组件之间的污染。\nCSS modules 也是一个很大的主题，有兴趣的话可以去官方文档查看更多消息\n\n## CSS预处理器\n\nSass 和 Less之类的预处理器是对原生CSS的拓展，它们允许你使用类似于variables, nesting, mixins, inheritance等不存在于CSS中的特性来写CSS，CSS预处理器可以这些特殊类型的语句转化为浏览器可识别的CSS语句，\n你现在可能都已经熟悉了，在webpack里使用相关loaders进行配置就可以使用了，以下是常用的CSS 处理loaders\n\n* Less Loader\n* Sass Loader\n* Stylus Loader\n\n不过其实也存在一个CSS的处理平台-PostCSS，它可以帮助你的CSS实现更多的功能，在其[CSS官方文档](https://github.com/postcss/postcss)可了解更多相关知识。\n\n举例来说如何使用PostCSS，我们使用PostCSS来为CSS代码自动添加适应不同浏览器的CSS前缀。\n\n首先安装postcss-loader 和 autoprefixer（自动添加前缀的插件）\n\n    npm install --save-dev postcss-loader autoprefixer\n\n接下来，在webpack配置文件中进行设置，只需要新建一个postcss关键字，并在里面申明依赖的插件，如下，现在你写的css会自动根据Can i use里的数据添加不同前缀了。\n\n    //webpack配置文件\n    module.exports = {\n      devtool: 'eval-source-map',\n      entry: __dirname + \"/app/main.js\",\n      output: {...},\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: 'style!css?modules!postcss'\n          }\n        ]\n      },\n    \n      postcss: [\n        require('autoprefixer')//调用autoprefixer插件\n      ],\n    \n      devServer: {...}\n    }\n\n到现在，本文已经涉及到处理JS的Babel和处理CSS的PostCSS，它们其实也是两个单独的平台，配合Webpack可以很好的发挥它们的作用。接下来介绍Webpack中另一个非常重要的功能-Plugins\n\n# 插件（Plugins）\n插件（Plugins）是用来拓展Webpack功能的，它们会在整个构建过程中生效，执行相关的任务。\nLoaders和Plugins常常被弄混，但是他们其实是完全不同的东西，可以这么来说，loaders是在打包构建过程中用来处理源文件的（JSX，Scss，Less..），一次处理一个，插件并不直接操作单个文件，它直接对整个构建过程其作用。\n\nWebpack有很多内置插件，同时也有很多第三方插件，可以让我们完成更加丰富的功能。\n\n## 使用插件的方法\n要使用某个插件，我们需要通过npm安装它，然后要做的就是在webpack配置中的plugins关键字部分添加该插件的一个实例（plugins是一个数组）继续看例子，我们添加了一个实现版权声明的插件。\n\n    //webpack.config.js\n    var webpack = require('webpack');\n    \n    module.exports = {\n      devtool: 'eval-source-map',\n      entry:  __dirname + \"/app/main.js\",\n      output: {...},\n    \n      module: {\n        loaders: [\n          { test: /\\.json$/, loader: \"json\" },\n          { test: /\\.js$/, exclude: /node_modules/, loader: 'babel' },\n          { test: /\\.css$/, loader: 'style!css?modules!postcss' }//这里添加PostCSS\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new webpack.BannerPlugin(\"Copyright Flying Unicorns inc.\")//在这个数组中new一个就可以了\n      ],\n    \n      devServer: {...}\n    }\n\n通过这个插件，打包后的JS文件显示如下\n\n知道Webpack中的插件如何使用了，下面给大家推荐几个常用的插件\n## HtmlWebpackPlugin\n这个插件的作用是依据一个简单的模板，帮你生成最终的HTML5文件，这个文件中自动引用了你打包后的JS文件。每次编译都在文件名中插入一个不同的哈希值。\n\n安装\n\n    npm install --save-dev html-webpack-plugin\n\n这个插件自动完成了我们之前手动做的一些事情，在正式使用之前需要对一直以来的项目结构做一些改变：\n\n1、移除public文件夹，利用此插件，HTML5文件会自动生成，此外CSS已经通过前面的操作打包到JS中了，public文件夹里。\n2、在app目录下，创建一个Html文件模板，这个模板包含title等其它你需要的元素，在编译过程中，本插件会依据此模板生成最终的html页面，会自动添加所依赖的 css, js，favicon等文件，在本例中我们命名模板文件名称为index.tmpl.html，模板源代码如下\n\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Webpack Sample Project</title>\n      </head>\n      <body>\n        <div id='App'>\n        </div>\n      </body>\n    </html>\n\n3、更新webpack的配置文件，方法同上,新建一个build文件夹用来存放最终的输出文件\n\n    var webpack = require('webpack');\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    module.exports = {\n      devtool: 'eval-source-map',\n    \n      entry:  __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"index.js\"\n      },\n    \n      module: {\n        loaders: [\n          { test: /\\.json$/, loader: \"json\" },\n          { test: /\\.js$/, exclude: /node_modules/, loader: 'babel' },\n          { test: /\\.css$/, loader: 'style!css?modules!postcss' }\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new HtmlWebpackPlugin({\n          template: __dirname + \"/app/index.tmpl.html\"//new 一个这个插件的实例，并传入相关的参数\n        })\n      ],\n    \n      devServer: {\n        colors: true,\n        historyApiFallback: true,\n        inline: true\n      }\n    }\n\n## Hot Module Replacement\n\nHot Module Replacement（HMR）也是webpack里很有用的一个插件，它允许你在修改组件代码后，自动刷新实时预览修改后的效果。\n在webpack中实现HMR也很简单，只需要做两项配置\n\n1、在webpack配置文件中添加HMR插件；\n2、在Webpack Dev Server中添加“hot”参数；\n\n不过配置完这些后，JS模块其实还是不能自动热加载的，还需要在你的JS模块中执行一个Webpack提供的API才能实现热加载，虽然这个API不难使用，但是如果是React模块，使用我们已经熟悉的Babel可以更方便的实现功能热加载。\n\n整理下我们的思路，具体实现方法如下\n\n* Babel和webpack是独立的工具\n* 二者可以一起工作\n* 二者都可以通过插件拓展功能\n* HMR是一个webpack插件，它让你能浏览器中实时观察模块修改后的效果，但是如果你想让它工作，需要对模块进行额外的配额；\n* Babel有一个叫做react-transform-hrm的插件，可以在不对React模块进行额外的配置的前提下让HMR正常工作;\n\n更新我们的例子来实际看看如何配置\n\n    //webpack中的配置\n    var webpack = require('webpack');\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    \n    module.exports = {\n      devtool: 'eval-source-map',\n      entry: __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"bundle.js\"\n      },\n    \n      module: {\n        loaders: [\n          { test: /\\.json$/, loader: \"json\" },\n          { test: /\\.js$/, exclude: /node_modules/, loader: 'babel' },\n          { test: /\\.css$/, loader: 'style!css?modules!postcss' }\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new HtmlWebpackPlugin({\n          template: __dirname + \"/app/index.tmpl.html\"\n        }),\n        new webpack.HotModuleReplacementPlugin()//热加载插件\n      ],\n    \n      devServer: {\n        colors: true,\n        historyApiFallback: true,\n        inline: true,\n        hot: true\n      }\n    }\n\n安装react-transform-hmr\n\n    npm install --save-dev babel-plugin-react-transform react-transform-hmr\n\n配置Babel\n\n    {\n      \"presets\": [\"react\", \"es2015\"],\n      \"env\": {\n        \"development\": {\n        \"plugins\": [[\"react-transform\", {\n           \"transforms\": [{\n             \"transform\": \"react-transform-hmr\",\n    \n             \"imports\": [\"react\"],\n    \n             \"locals\": [\"module\"]\n           }]\n         }]]\n        }\n      }\n    }\n\n现在当你使用React时，可以热加载模块了\n\n# 产品阶段的构建\n目前为止，我们已经使用webpack构建了一个完整的开发环境。但是在产品阶段，可能还需要对打包的文件进行额外的处理，比如说优化，压缩，缓存以及分离CSS和JS。\n\n对于复杂的项目来说，需要复杂的配置，这时候分解配置文件为多个小的文件可以使得事情井井有条，以上面的例子来说，我们创建一个“webpack.production.config.js”的文件，在里面加上基本的配置,它和原始的webpack.config.js很像，如下\n\n    var webpack = require('webpack');\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    \n    module.exports = {\n      entry: __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"bundle.js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: 'style!css?modules!postcss'\n          }\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new HtmlWebpackPlugin({\n          template: __dirname + \"/app/index.tmpl.html\"\n        }),\n      ],\n    \n    }\n\n\n    //package.json\n    {\n      \"name\": \"webpack-sample-project\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Sample webpack project\",\n      \"scripts\": {\n        \"start\": \"webpack-dev-server --progress\",\n        \"build\": \"NODE_ENV=production webpack --config ./webpack.production.config.js --progress\"\n      },\n      \"author\": \"Cássio Zen\",\n      \"license\": \"ISC\",\n      \"devDependencies\": {...},\n      \"dependencies\": {...}\n    }\n\n# 优化插件\nwebpack提供了一些在发布阶段非常有用的优化插件，它们大多来自于webpack社区，可以通过npm安装，通过以下插件可以完成产品发布阶段所需的功能\n\n* OccurenceOrderPlugin :为组件分配ID，通过这个插件webpack可以分析和优先考虑使用最多的模块，并为它们分配最小的ID\n* UglifyJsPlugin：压缩JS代码；\n* ExtractTextPlugin：分离CSS和JS文件\n\n我们继续用例子来看看如何添加它们，OccurenceOrder 和 UglifyJS plugins 都是内置插件，你需要做的只是安装它们\n\n    npm install --save-dev extract-text-webpack-plugin  \n\n在配置文件的plugins后引用它们\n\n    var webpack = require('webpack');\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    var ExtractTextPlugin = require('extract-text-webpack-plugin');\n    \n    module.exports = {\n      entry: __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"bundle.js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: ExtractTextPlugin.extract('style', 'css?modules!postcss')\n          }\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new HtmlWebpackPlugin({\n          template: __dirname + \"/app/index.tmpl.html\"\n        }),\n        new webpack.optimize.OccurenceOrderPlugin(),\n        new webpack.optimize.UglifyJsPlugin(),\n        new ExtractTextPlugin(\"style.css\")\n      ]\n    }\n\n# 缓存\n缓存无处不在，使用缓存的最好方法是保证你的文件名和文件内容是匹配的（内容改变，名称相应改变）\n\nwebpack可以把一个哈希值添加到打包的文件名中，使用方法如下,添加特殊的字符串混合体（[name], [id] and [hash]）到输出文件名前\n\n    var webpack = require('webpack');\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    var ExtractTextPlugin = require('extract-text-webpack-plugin');\n    \n    module.exports = {\n      entry: __dirname + \"/app/main.js\",\n      output: {\n        path: __dirname + \"/build\",\n        filename: \"[name]-[hash].js\"\n      },\n    \n      module: {\n        loaders: [\n          {\n            test: /\\.json$/,\n            loader: \"json\"\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel'\n          },\n          {\n            test: /\\.css$/,\n            loader: ExtractTextPlugin.extract('style', 'css?modules!postcss')\n          }\n        ]\n      },\n      postcss: [\n        require('autoprefixer')\n      ],\n    \n      plugins: [\n        new HtmlWebpackPlugin({\n          template: __dirname + \"/app/index.tmpl.html\"\n        }),\n        new webpack.optimize.OccurenceOrderPlugin(),\n        new webpack.optimize.UglifyJsPlugin(),\n        new ExtractTextPlugin(\"[name]-[hash].css\")\n      ]\n    }\n\n现在用户会有合理的缓存了。\n\n# 总结\n这是一篇好长的文章，谢谢你的耐心，能仔细看到了这里，大概半个月前我第一次自己一步步配置项目所需的Webpack后就一直想写一篇笔记做总结，几次动笔都不能让自己满意，总觉得写不清楚。直到看到本文的英文版Webpack for React，真的有多次豁然开朗的感觉，喜欢看原文的点链接就可以看了。其实关于Webpack本文讲述得仍不完全，不过相信你看完后已经进入Webpack的大门，能够更好的探索其它的关于Webpack的知识了。\n\n本文转载自 http://www.jianshu.com/p/42e11515c10f  \n","slug":"Webpack入门教程","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0x7001v6atfwiyh0nab","content":"<p>目前，我正在学习用webpack搭建React-Native的环境，在众多的学习过程中，发现这个时期的代码更新速度非常的快，而且学习资料也有很多渐渐过时，而我，不得不在这些（旧）教程中掺杂着最新技术开始我漫长的埋坑之旅。</p>\n<p>以下资料来源于<a href=\"http://www.pro-react.com/materials/appendixA/\" target=\"_blank\" rel=\"noopener\">Webpack for React</a>、 <a href=\"http://blog.csdn.net/kun5706947/article/details/52596766\" target=\"_blank\" rel=\"noopener\">入门Webpack，看这篇就够了</a>，敬请参考:</p>\n<h1 id=\"什么是WebPack，为什么要使用它？\"><a href=\"#什么是WebPack，为什么要使用它？\" class=\"headerlink\" title=\"什么是WebPack，为什么要使用它？\"></a>什么是WebPack，为什么要使用它？</h1><h2 id=\"为什要使用WebPack\"><a href=\"#为什要使用WebPack\" class=\"headerlink\" title=\"为什要使用WebPack\"></a>为什要使用WebPack</h2><p>现今的很多网页其实可以看做是功能丰富的应用，它们拥有着复杂的JavaScript代码和一大堆依赖包。为了简化开发的复杂度，前端社区涌现出了很多好的实践方法</p>\n<ul>\n<li>模块化，让我们可以把复杂的程序细化为小的文件;</li>\n<li>类似于TypeScript这种在JavaScript基础上拓展的开发语言：使我们能够实现目前版本的JavaScript不能直接使用的特性，并且之后还能能装换为JavaScript文件使浏览器可以识别；</li>\n<li>Scss，less等CSS预处理器</li>\n</ul>\n<p>这些改进确实大大的提高了我们的开发效率，但是利用它们开发的文件往往需要进行额外的处理才能让浏览器识别,而手动处理又是非常反锁的，这就为WebPack类的工具的出现提供了需求。</p>\n<h2 id=\"什么是Webpack\"><a href=\"#什么是Webpack\" class=\"headerlink\" title=\"什么是Webpack\"></a>什么是Webpack</h2><p>WebPack可以看做是模块打包机：它做的事情是，分析你的项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（Scss，TypeScript等），并将其打包为合适的格式以供浏览器使用。</p>\n<h2 id=\"WebPack和Grunt以及Gulp相比有什么特性\"><a href=\"#WebPack和Grunt以及Gulp相比有什么特性\" class=\"headerlink\" title=\"WebPack和Grunt以及Gulp相比有什么特性\"></a>WebPack和Grunt以及Gulp相比有什么特性</h2><p>其实Webpack和另外两个并没有太多的可比性，Gulp/Grunt是一种能够优化前端的开发流程的工具，而WebPack是一种模块化的解决方案，不过Webpack的优点使得Webpack可以替代Gulp/Grunt类的工具。</p>\n<p>Grunt和Gulp的工作方式是：在一个配置文件中，指明对某些文件进行类似编译，组合，压缩等任务的具体步骤，这个工具之后可以自动替你完成这些任务。</p>\n<p> <img src=\"../../../../images/webpack/picture1.png\" alt=\"Grunt和Gulp的工作流程\"><br><a id=\"more\"></a><br> Webpack的工作方式是：把你的项目当做一个整体，通过一个给定的主文件（如：index.js），Webpack将从这个文件开始找到你的项目的所有依赖文件，使用loaders处理它们，最后打包为一个浏览器可识别的JavaScript文件。</p>\n<p>  <img src=\"../../../../images/webpack/picture2.png\" alt=\"Webpack工作方式\"></p>\n<p>如果实在要把二者进行比较，Webpack的处理速度更快更直接，能打包更多不同类型的文件。</p>\n<h1 id=\"开始使用Webpack\"><a href=\"#开始使用Webpack\" class=\"headerlink\" title=\"开始使用Webpack\"></a>开始使用Webpack</h1><p>初步了解了Webpack工作方式后，我们一步步的开始学习使用Webpack。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>Webpack可以使用npm安装，新建一个空的练习文件夹（此处命名为webpack sample progect），在终端中转到该文件夹后执行下述指令就可以完成安装。</p>\n<pre><code>//全局安装\nnpm install -g webpack\n//安装到你的项目目录\nnpm install --save-dev webpack\n</code></pre><h2 id=\"正式使用Webpack前的准备\"><a href=\"#正式使用Webpack前的准备\" class=\"headerlink\" title=\"正式使用Webpack前的准备\"></a>正式使用Webpack前的准备</h2><p>在上述练习文件夹中创建一个package.json文件，这是一个标准的npm说明文件，里面蕴含了丰富的信息，包括当前项目的依赖模块，自定义的脚本任务等等。在终端中使用<code>npm</code><br><code>init</code>命令可以自动创建这个package.json文件</p>\n<pre><code>npm init\n</code></pre><p>输入这个命令后，终端会问你一系列诸如项目名称，项目描述，作者等信息，不过不用担心，如果你不准备在npm中发布你的模块，这些问题的答案都不重要，回车默认即可。</p>\n<p>1、package.json文件已经就绪，我们在本项目中安装Webpack作为依赖包</p>\n<pre><code>// 安装Webpack\nnpm install --save-dev webpack\n</code></pre><p>2、回到之前的空文件夹，并在里面创建两个文件夹,app文件夹和public文件夹，app文件夹用来存放原始数据和我们将写的JavaScript模块，public文件夹用来存放准备给浏览器读取的数据（包括使用webpack生成的打包后的js文件以及一个index.html文件）。在这里还需要创建三个文件，index.html 文件放在public文件夹中，两个js文件（Greeter.js和main.js）放在app文件夹中，此时项目结构如下图所示</p>\n<p> <img src=\"../../../../images/webpack/picture3.png\" alt=\"项目结构\"></p>\n<p>index.html文件只有最基础的html代码，它唯一的目的就是加载打包后的js文件（index.js）</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;React-Native&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=&quot;App&quot;&gt;&lt;/div&gt;\n    &lt;script src=&quot;index.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>Greeter.js只包括一个用来返回包含问候信息的html元素的函数。</p>\n<pre><code>// Greeter.js\nmodule.exports=&quot;Hi,World!&quot;;\n</code></pre><p>main.js用来把Greeter模块返回的节点插入页面。</p>\n<pre><code>//main.js \nvar greeter=require(&apos;./Greeter.js&apos;);\ndocument.getElementById(&apos;App&apos;).innerHTML=greeter;\n</code></pre><h2 id=\"正式使用Webpack\"><a href=\"#正式使用Webpack\" class=\"headerlink\" title=\"正式使用Webpack\"></a>正式使用Webpack</h2><p>webpack可以在终端中使用，其最基础的命令是</p>\n<pre><code>webpack {entry file/入口文件} {destination for bundled file/存放bundle.js的地方,我们这里用index.js}\n</code></pre><p>只需要指定一个入口文件，webpack将自动识别项目所依赖的其它文件，不过需要注意的是如果你的webpack没有进行全局安装，那么当你在终端中使用此命令时，需要额外指定其在node_modules中的地址，继续上面的例子，在终端中属于如下命令</p>\n<pre><code>//webpack非全局安装的情况\nnode_modules/.bin/webpack app/main.js public/index.js\n</code></pre><p>结果如下</p>\n<p><img src=\"../../../../images/webpack/picture4.png\" alt=\"termialResult1\"></p>\n<p>可以看出webpack同时编译了main.js和Greeter,js,现在打开index.html,可以看到如下结果</p>\n<p><img src=\"../../../../images/webpack/picture5.png\" alt=\"htmlResult1\"></p>\n<p>有没有很激动，已经成功的使用Webpack打包了一个文件了。不过如果在终端中进行复杂的操作，还是不太方便且容易出错的，接下来看看Webpack的另一种使用方法。</p>\n<h2 id=\"通过配置文件来使用Webpack\"><a href=\"#通过配置文件来使用Webpack\" class=\"headerlink\" title=\"通过配置文件来使用Webpack\"></a>通过配置文件来使用Webpack</h2><p>Webpack拥有很多其它的比较高级的功能（比如说本文后面会介绍的loaders和plugins），这些功能其实都可以通过命令行模式实现，但是正如已经提到的，这样不太方便且容易出错的，一个更好的办法是定义一个配置文件，这个配置文件其实也是一个简单的JavaScript模块，可以把所有的与构建相关的信息放在里面。</p>\n<p>还是继续上面的例子来说明如何写这个配置文件，在当前练习文件夹的根目录下新建一个名为webpack.config.js的文件，并在其中进行最最简单的配置，如下所示，它包含入口文件路径和存放打包后文件的地方的路径。</p>\n<pre><code>module.exports = {\n    entry:  __dirname + &quot;/app/main.js&quot;,//已多次提及的唯一入口文件\n    output: {\n    path: __dirname + &quot;/public&quot;,//打包后的文件存放的地方\n    filename: &quot;index.js&quot;//打包后输出文件的文件名\n    }\n}\n</code></pre><blockquote>\n<p>注：“__dirname”是Node.js中的一个全局变量，它指向当前执行脚本所在的目录。</p>\n</blockquote>\n<p>现在如果你需要打包文件只需要在终端里你运行<code>webpack(非全局安装需使用node_modules/.bin/webpack)</code>命令就可以了，这条命令会自动参考webpack.config.js文件中的配置选项打包你的项目，输出结果如下</p>\n<p><img src=\"../../../../images/webpack/picture6.png\" alt=\"webpack\"></p>\n<p>又学会了一种使用Webpack的方法，而且不用管那烦人的命令行参数了，有没有感觉很爽。有没有想过如果可以连webpack(非全局安装需使用node_modules/.bin/webpack)这条命令都可以不用，那种感觉会不会更爽~，继续看下文。</p>\n<h2 id=\"更快捷的执行打包任务\"><a href=\"#更快捷的执行打包任务\" class=\"headerlink\" title=\"更快捷的执行打包任务\"></a>更快捷的执行打包任务</h2><p>执行类似于node_modules/.bin/webpack这样的命令其实是比较烦人且容易出错的，不过值得庆幸的是<code>npm</code>可以引导任务执行，对其进行配置后可以使用简单的<code>npm start</code>命令来代替这些繁琐的命令。在package.json中对<code>npm</code>的脚本部分进行相关设置即可，设置方法如下。</p>\n<pre><code>{\n  &quot;name&quot;: &quot;react-app&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;description&quot;: &quot;尝试搭建一次react-native环境&quot;,\n  &quot;main&quot;: &quot;main.js&quot;,\n  &quot;scripts&quot;: {\n    &quot;start&quot;: &quot;webpack&quot;\n  },\n  &quot;author&quot;: &quot;FoxSnower&quot;,\n  &quot;license&quot;: &quot;ISC&quot;,\n  &quot;devDependencies&quot;: {\n    &quot;webpack&quot;: &quot;^1.13.2&quot;\n  }\n}\n</code></pre><blockquote>\n<p>注：package.json中的脚本部分已经默认在命令前添加了node_modules/.bin路径，所以无论是全局还是局部安装的Webpack，你都不需要写前面那指明详细的路径了。</p>\n</blockquote>\n<p>npm的<code>start</code>是一个特殊的脚本名称，它的特殊性表现在，在命令行中使用<code>npm start</code>就可以执行相关命令，如果对应的此脚本名称不是<code>start</code>，想要在命令行中运行时，需要这样用<code>npm run {script name}</code>如<code>npm run build</code>，以下是执行<code>npm start</code>后命令行的输出显示</p>\n<p><img src=\"../../../../images/webpack/picture7.png\" alt=\"npmStartTermialResult\"></p>\n<p>现在只需要使用<code>npm start</code>就可以打包文件了，有没有觉得webpack也不过如此嘛，不过不要太小瞧Webpack，其强大的功能包含在其一系列可供配置的选项中，我们一项项来看。</p>\n<h1 id=\"Webpack的强大功能\"><a href=\"#Webpack的强大功能\" class=\"headerlink\" title=\"Webpack的强大功能\"></a>Webpack的强大功能</h1><h2 id=\"生成Source-Maps（使调试更容易）\"><a href=\"#生成Source-Maps（使调试更容易）\" class=\"headerlink\" title=\"生成Source Maps（使调试更容易）\"></a>生成Source Maps（使调试更容易）</h2><p>开发总是离不开调试，如果可以更加方便的调试当然就能提高开发效率，不过打包后的文件有时候你是不容易找到出错了的地方对应的源代码的位置的，Source Maps就是来帮我们解决这个问题的。<br>通过简单的配置后，Webpack在打包时可以为我们生成的source maps，这为我们提供了一种对应编译文件和源文件的方法，使得编译后的代码可读性更高，也更容易调试。</p>\n<p>在webpack的配置文件中配置source maps，需要配置devtool，它有以下四种不同的配置选项，各具优缺点，描述如下：</p>\n<p><img src=\"../../../../images/webpack/picture8.png\" alt=\"devtool配置选项\"></p>\n<p>正如上表所述，上述选项由上到下打包速度越来越快，不过同时也具有越来越多的负面作用，较快的构建速度的后果就是对打包后的文件的的执行有一定影响。</p>\n<p>在学习阶段以及在小到中性的项目上，eval-source-map是一个很好的选项，不过记得只在开发阶段使用它，继续上面的例子，进行如下配置</p>\n<pre><code>module.exports = {\n  devtool: &apos;eval-source-map&apos;,//配置生成Source Maps，选择合适的选项\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/public&quot;,\n    filename: &quot;bundle.js&quot;\n  }\n}\n</code></pre><blockquote>\n<p>cheap-module-eval-source-map方法构建速度更快，但是不利于调试，推荐在大型项目考虑da时间成本是使用。</p>\n</blockquote>\n<h2 id=\"使用webpack构建本地服务器\"><a href=\"#使用webpack构建本地服务器\" class=\"headerlink\" title=\"使用webpack构建本地服务器\"></a>使用webpack构建本地服务器</h2><p>想不想让你的浏览器监测你都代码的修改，并自动刷新修改后的结果，其实Webpack提供一个可选的本地开发服务器，这个本地服务器基于node.js构建，可以实现你想要的这些功能，不过它是一个单独的组件，在webpack中进行配置之前需要单独安装它作为项目依赖</p>\n<pre><code>npm install --save-dev webpack-dev-server\n</code></pre><p>devserver作为webpack配置选项中的一项，具有以下配置选项</p>\n<p><img src=\"../../../../images/webpack/picture9.png\" alt=\"devserver配置选项\"></p>\n<p>继续把这些命令加到webpack的配置文件中，现在的配置文件如下所示</p>\n<pre><code>module.exports={\n    devtool:&apos;eval-source-map&apos;,//配置生成Source Maps，选择合适的选项\n\n    entry:__dirname+&quot;/app/main.js&quot;,//唯一的入口文件\n    output:{\n        path:__dirname+&quot;/public&quot;,//打包后的文件存放的地方\n        filename:&quot;index.js&quot;//打包后输出的文件名\n    },\n    devServer:{\n        contentBase:&apos;./public&apos;,//本地服务器所加载的页面所在的目录\n        color:true,//终端中输出结果为彩色\n        historyApiFallBack:true,//不跳转\n        inline:true//实时刷新\n    }\n}\n</code></pre><h1 id=\"Loaders\"><a href=\"#Loaders\" class=\"headerlink\" title=\"Loaders\"></a>Loaders</h1><h2 id=\"鼎鼎大名的Loaders登场了！\"><a href=\"#鼎鼎大名的Loaders登场了！\" class=\"headerlink\" title=\"鼎鼎大名的Loaders登场了！\"></a>鼎鼎大名的Loaders登场了！</h2><p>Loaders是webpack中最让人激动人心的功能之一了。通过使用不同的loader，webpack通过调用外部的脚本或工具可以对各种各样的格式的文件进行处理，比如说分析JSON文件并把它转换为JavaScript文件，或者说把下一代的JS文件（ES6，ES7)转换为现代浏览器可以识别的JS文件。或者说对React的开发而言，合适的Loaders可以把React的JSX文件转换为JS文件。</p>\n<p>Loaders需要单独安装并且需要在webpack.config.js下的modules关键字下进行配置，Loaders的配置选项包括以下几方面：</p>\n<ul>\n<li><code>test</code>：一个匹配loaders所处理的文件的拓展名的正则表达式（必须）</li>\n<li><code>loader</code>：loader的名称（必须）</li>\n<li><code>include/exclude</code>:手动添加必须处理的文件（文件夹）或屏蔽不需要处理的文件（文件夹）（可选）；</li>\n<li><code>query</code>：为loaders提供额外的设置选项（可选）</li>\n</ul>\n<p>继续上面的例子，我们把Greeter.js里的问候消息放在一个单独的JSON文件里,并通过合适的配置使Greeter.js可以读取该JSON文件的值，配置方法如下</p>\n<pre><code>//安装可以装换JSON的loader\nnpm install --save-dev json-loader\n</code></pre><p>创建带有问候信息的JSON文件(命名为config.json)</p>\n<pre><code>//config.json\n{\n  &quot;greetText&quot;: &quot;Hi there and greetings from JSON!&quot;\n}\n</code></pre><p>更新后的Greeter.js</p>\n<pre><code>var config = require(&apos;./config.json&apos;);\n\nmodule.exports = function() {\n  var greet = document.createElement(&apos;div&apos;);\n  greet.textContent = config.greetText;\n  return greet;\n};\n</code></pre><p>Loaders很好，不过有的Loaders使用起来比较复杂，比如说Babel。</p>\n<h2 id=\"Babel\"><a href=\"#Babel\" class=\"headerlink\" title=\"Babel\"></a>Babel</h2><p>Babel其实是一个编译JavaScript的平台，它的强大之处表现在可以通过编译帮你达到以下目的：</p>\n<ul>\n<li>一代的JavaScript标准（ES6，ES7），这些标准目前并未被当前的浏览器完全的支持；</li>\n<li>使用基于JavaScript进行了拓展的语言，比如React的JSX</li>\n</ul>\n<h2 id=\"Babel的安装与配置\"><a href=\"#Babel的安装与配置\" class=\"headerlink\" title=\"Babel的安装与配置\"></a>Babel的安装与配置</h2><p>Babel其实是几个模块化的包，其核心功能位于称为babel-core的npm包中，不过webpack把它们整合在一起使用，但是对于每一个你需要的功能或拓展，你都需要安装单独的包（用得最多的是解析Es6的babel-preset-es2015包和解析JSX的babel-preset-react包）。</p>\n<p>我们先来一次性安装这些依赖包</p>\n<pre><code>// npm一次性安装多个依赖模块，模块之间用空格隔开\nnpm install --save-dev babel-core babel-loader babel-preset-es2015 babel-preset-react\n</code></pre><p>在webpack中配置Babel的方法如下</p>\n<pre><code>module.exports = {\n  devtool: &apos;eval-source-map&apos;,\n\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/public&quot;,\n    filename: &quot;index.js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;,//在webpack的module部分的loaders里进行配置即可\n        query: {\n          presets: [&apos;es2015&apos;,&apos;react&apos;]\n        }\n      }\n    ]\n  },\n\n  devServer: {\n    contentBase: &quot;./public&quot;,\n    colors: true,\n    historyApiFallback: true,\n    inline: true\n  }\n}\n</code></pre><p>现在你的webpack的配置已经允许你使用ES6以及JSX的语法了。继续用上面的例子进行测试，不过这次我们会使用React，记得先安装 React 和 React-DOM</p>\n<pre><code>npm install --save react react-dom\n</code></pre><p>使用ES6的语法，更新Greeter.js并返回一个React组件</p>\n<pre><code>//Greeter,js\nimport React, {Component} from &apos;react&apos;\nimport config from &apos;./config.json&apos;;\n\nclass Greeter extends Component{\n  render() {\n    return (\n      &lt;div&gt;\n        {config.greetText}\n      &lt;/div&gt;\n    );\n  }\n}\n\nexport default Greeter\n</code></pre><p>使用ES6的模块定义和渲染Greeter模块</p>\n<pre><code>//main.js\nimport React from &apos;react&apos;;\nimport {render} from &apos;react-dom&apos;;\nimport Greeter from &apos;./Greeter&apos;;\n\nrender(&lt;Greeter /&gt;, document.getElementById(&apos;App&apos;));\n</code></pre><h2 id=\"Babel的配置选项\"><a href=\"#Babel的配置选项\" class=\"headerlink\" title=\"Babel的配置选项\"></a>Babel的配置选项</h2><p>Babel其实可以完全在webpack.config.js中进行配置，但是考虑到babel具有非常多的配置选项，在单一的webpack.config.js文件中进行配置往往使得这个文件显得太复杂，因此一些开发者支持把babel的配置选项放在一个单独的名为 “.babelrc” 的配置文件中。我们现在的babel的配置并不算复杂，不过之后我们会再加一些东西，因此现在我们就提取出相关部分，分两个配置文件进行配置（webpack会自动调用.babelrc里的babel配置选项），如下：</p>\n<pre><code>// webpack.config.js\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/public&quot;,\n    filename: &quot;index.js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      }\n    ]\n  },\n\n  devServer: {...} // Omitted for brevity\n}\n\n//.babelrc\n{\n  &quot;presets&quot;: [&quot;react&quot;, &quot;es2015&quot;]\n}\n</code></pre><p>到目前为止，我们已经知道了，对于模块，Webpack能提供非常强大的处理功能，那哪些是模块呢。 </p>\n<h1 id=\"一切皆模块\"><a href=\"#一切皆模块\" class=\"headerlink\" title=\"一切皆模块\"></a>一切皆模块</h1><p>Webpack有一个不可不说的优点，它把所有的文件都可以当做模块处理，包括你的JavaScript代码，也包括CSS和fonts以及图片等等等，只有通过合适的loaders，它们都可以被当做模块被处理。</p>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><p>webpack提供两个工具处理样式表，css-loader 和 style-loader，二者处理的任务不同，css-loader使你能够使用类似@import 和 url(…)的方法实现 require()的功能,style-loader将所有的计算后的样式加入页面中，二者组合在一起使你能够把样式表嵌入webpack打包后的JS文件中。</p>\n<p>继续上面的例子</p>\n<pre><code>//安装\nnpm install --save-dev style-loader css-loader\n\n//使用\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;index.js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: &apos;style!css&apos;//添加对样式表的处理\n      }\n    ]\n  },\n\n  devServer: {...}\n}\n</code></pre><blockquote>\n<p>注：感叹号的作用在于使同一文件能够使用不同类型的loader</p>\n</blockquote>\n<p>接下来，在app文件夹里创建一个名字为”main.css”的文件，对一些元素设置样式</p>\n<pre><code>html {\n  box-sizing: border-box;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\n*, *:before, *:after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  font-family: &apos;Helvetica Neue&apos;, Helvetica, Arial, sans-serif;\n}\nh1, h2, h3, h4, h5, h6, p, ul {\n  margin: 0;\n  padding: 0;\n}\n</code></pre><p>你还记得吗？webpack只有单一的入口，其它的模块需要通过 import, require, url等导入相关位置，为了让webpack能找到”main.css“文件，我们把它导入”main.js “中，如下</p>\n<pre><code>//main.js\nimport React from &apos;react&apos;;\nimport {render} from &apos;react-dom&apos;;\nimport Greeter from &apos;./Greeter&apos;;\n\nimport &apos;./main.css&apos;;//使用require导入css文件\n\nrender(&lt;Greeter /&gt;, document.getElementById(&apos;App&apos;));  \n</code></pre><blockquote>\n<p>通常情况下，css会和js打包到同一个文件中，并不会打包为一个单独的css文件，不过通过合适的配置webpack也可以把css打包为单独的文件的。<br>不过这也只是webpack把css当做模块而已，咱们继续看看一个真的CSS模块的实践。</p>\n</blockquote>\n<h2 id=\"CSS-module\"><a href=\"#CSS-module\" class=\"headerlink\" title=\"CSS module\"></a>CSS module</h2><p>在过去的一些年里，JavaScript通过一些新的语言特性，更好的工具以及更好的实践方法（比如说模块化）发展得非常迅速。模块使得开发者把复杂的代码转化为小的，干净的，依赖声明明确的单元，且基于优化工具，依赖管理和加载管理可以自动完成。<br>不过前端的另外一部分，CSS发展就相对慢一些，大多的样式表却依旧是巨大且充满了全局类名，这使得维护和修改都非常困难和复杂。</p>\n<p>最近有一个叫做 CSS modules 的技术就意在把JS的模块化思想带入CSS中来，通过CSS模块，所有的类名，动画名默认都只作用于当前模块。Webpack从一开始就对CSS模块化提供了支持，在CSS loader中进行配置后，你所需要做的一切就是把”modules“传递都所需要的地方，然后就可以直接把CSS的类名传递到组件的代码中，且这样做只对当前组件有效，不必担心在不同的模块中具有相同的类名可能会造成的问题。具体的代码如下</p>\n<pre><code>module.exports = {\n  devtool: &apos;eval-source-map&apos;,\n\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {...},\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: &apos;style!css?modules&apos;//跟前面相比就在后面加上了?modules\n      }\n    ]\n  },\n\n  devServer: {...}\n}\n</code></pre><p>创建一个Greeter.css文件</p>\n<pre><code>.root {\n  background-color: #eee;\n  padding: 10px;\n  border: 3px solid #ccc;\n}\n</code></pre><p>导入.root到Greeter.js中</p>\n<pre><code>import React, {Component} from &apos;react&apos;;\nimport config from &apos;./config.json&apos;;\nimport styles from &apos;./Greeter.css&apos;;//导入\n\nclass Greeter extends Component{\n  render() {\n    return (\n      &lt;div className={styles.root}&gt;//添加类名\n        {config.greetText}\n      &lt;/div&gt;\n    );\n  }\n}\n\nexport default Greeter   \n</code></pre><p>放心使用把，相同的类名也不会造成不同组件之间的污染。<br>CSS modules 也是一个很大的主题，有兴趣的话可以去官方文档查看更多消息</p>\n<h2 id=\"CSS预处理器\"><a href=\"#CSS预处理器\" class=\"headerlink\" title=\"CSS预处理器\"></a>CSS预处理器</h2><p>Sass 和 Less之类的预处理器是对原生CSS的拓展，它们允许你使用类似于variables, nesting, mixins, inheritance等不存在于CSS中的特性来写CSS，CSS预处理器可以这些特殊类型的语句转化为浏览器可识别的CSS语句，<br>你现在可能都已经熟悉了，在webpack里使用相关loaders进行配置就可以使用了，以下是常用的CSS 处理loaders</p>\n<ul>\n<li>Less Loader</li>\n<li>Sass Loader</li>\n<li>Stylus Loader</li>\n</ul>\n<p>不过其实也存在一个CSS的处理平台-PostCSS，它可以帮助你的CSS实现更多的功能，在其<a href=\"https://github.com/postcss/postcss\" target=\"_blank\" rel=\"noopener\">CSS官方文档</a>可了解更多相关知识。</p>\n<p>举例来说如何使用PostCSS，我们使用PostCSS来为CSS代码自动添加适应不同浏览器的CSS前缀。</p>\n<p>首先安装postcss-loader 和 autoprefixer（自动添加前缀的插件）</p>\n<pre><code>npm install --save-dev postcss-loader autoprefixer\n</code></pre><p>接下来，在webpack配置文件中进行设置，只需要新建一个postcss关键字，并在里面申明依赖的插件，如下，现在你写的css会自动根据Can i use里的数据添加不同前缀了。</p>\n<pre><code>//webpack配置文件\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n  entry: __dirname + &quot;/app/main.js&quot;,\n  output: {...},\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: &apos;style!css?modules!postcss&apos;\n      }\n    ]\n  },\n\n  postcss: [\n    require(&apos;autoprefixer&apos;)//调用autoprefixer插件\n  ],\n\n  devServer: {...}\n}\n</code></pre><p>到现在，本文已经涉及到处理JS的Babel和处理CSS的PostCSS，它们其实也是两个单独的平台，配合Webpack可以很好的发挥它们的作用。接下来介绍Webpack中另一个非常重要的功能-Plugins</p>\n<h1 id=\"插件（Plugins）\"><a href=\"#插件（Plugins）\" class=\"headerlink\" title=\"插件（Plugins）\"></a>插件（Plugins）</h1><p>插件（Plugins）是用来拓展Webpack功能的，它们会在整个构建过程中生效，执行相关的任务。<br>Loaders和Plugins常常被弄混，但是他们其实是完全不同的东西，可以这么来说，loaders是在打包构建过程中用来处理源文件的（JSX，Scss，Less..），一次处理一个，插件并不直接操作单个文件，它直接对整个构建过程其作用。</p>\n<p>Webpack有很多内置插件，同时也有很多第三方插件，可以让我们完成更加丰富的功能。</p>\n<h2 id=\"使用插件的方法\"><a href=\"#使用插件的方法\" class=\"headerlink\" title=\"使用插件的方法\"></a>使用插件的方法</h2><p>要使用某个插件，我们需要通过npm安装它，然后要做的就是在webpack配置中的plugins关键字部分添加该插件的一个实例（plugins是一个数组）继续看例子，我们添加了一个实现版权声明的插件。</p>\n<pre><code>//webpack.config.js\nvar webpack = require(&apos;webpack&apos;);\n\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {...},\n\n  module: {\n    loaders: [\n      { test: /\\.json$/, loader: &quot;json&quot; },\n      { test: /\\.js$/, exclude: /node_modules/, loader: &apos;babel&apos; },\n      { test: /\\.css$/, loader: &apos;style!css?modules!postcss&apos; }//这里添加PostCSS\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new webpack.BannerPlugin(&quot;Copyright Flying Unicorns inc.&quot;)//在这个数组中new一个就可以了\n  ],\n\n  devServer: {...}\n}\n</code></pre><p>通过这个插件，打包后的JS文件显示如下</p>\n<p>知道Webpack中的插件如何使用了，下面给大家推荐几个常用的插件</p>\n<h2 id=\"HtmlWebpackPlugin\"><a href=\"#HtmlWebpackPlugin\" class=\"headerlink\" title=\"HtmlWebpackPlugin\"></a>HtmlWebpackPlugin</h2><p>这个插件的作用是依据一个简单的模板，帮你生成最终的HTML5文件，这个文件中自动引用了你打包后的JS文件。每次编译都在文件名中插入一个不同的哈希值。</p>\n<p>安装</p>\n<pre><code>npm install --save-dev html-webpack-plugin\n</code></pre><p>这个插件自动完成了我们之前手动做的一些事情，在正式使用之前需要对一直以来的项目结构做一些改变：</p>\n<p>1、移除public文件夹，利用此插件，HTML5文件会自动生成，此外CSS已经通过前面的操作打包到JS中了，public文件夹里。<br>2、在app目录下，创建一个Html文件模板，这个模板包含title等其它你需要的元素，在编译过程中，本插件会依据此模板生成最终的html页面，会自动添加所依赖的 css, js，favicon等文件，在本例中我们命名模板文件名称为index.tmpl.html，模板源代码如下</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;title&gt;Webpack Sample Project&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=&apos;App&apos;&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>3、更新webpack的配置文件，方法同上,新建一个build文件夹用来存放最终的输出文件</p>\n<pre><code>var webpack = require(&apos;webpack&apos;);\nvar HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;index.js&quot;\n  },\n\n  module: {\n    loaders: [\n      { test: /\\.json$/, loader: &quot;json&quot; },\n      { test: /\\.js$/, exclude: /node_modules/, loader: &apos;babel&apos; },\n      { test: /\\.css$/, loader: &apos;style!css?modules!postcss&apos; }\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: __dirname + &quot;/app/index.tmpl.html&quot;//new 一个这个插件的实例，并传入相关的参数\n    })\n  ],\n\n  devServer: {\n    colors: true,\n    historyApiFallback: true,\n    inline: true\n  }\n}\n</code></pre><h2 id=\"Hot-Module-Replacement\"><a href=\"#Hot-Module-Replacement\" class=\"headerlink\" title=\"Hot Module Replacement\"></a>Hot Module Replacement</h2><p>Hot Module Replacement（HMR）也是webpack里很有用的一个插件，它允许你在修改组件代码后，自动刷新实时预览修改后的效果。<br>在webpack中实现HMR也很简单，只需要做两项配置</p>\n<p>1、在webpack配置文件中添加HMR插件；<br>2、在Webpack Dev Server中添加“hot”参数；</p>\n<p>不过配置完这些后，JS模块其实还是不能自动热加载的，还需要在你的JS模块中执行一个Webpack提供的API才能实现热加载，虽然这个API不难使用，但是如果是React模块，使用我们已经熟悉的Babel可以更方便的实现功能热加载。</p>\n<p>整理下我们的思路，具体实现方法如下</p>\n<ul>\n<li>Babel和webpack是独立的工具</li>\n<li>二者可以一起工作</li>\n<li>二者都可以通过插件拓展功能</li>\n<li>HMR是一个webpack插件，它让你能浏览器中实时观察模块修改后的效果，但是如果你想让它工作，需要对模块进行额外的配额；</li>\n<li>Babel有一个叫做react-transform-hrm的插件，可以在不对React模块进行额外的配置的前提下让HMR正常工作;</li>\n</ul>\n<p>更新我们的例子来实际看看如何配置</p>\n<pre><code>//webpack中的配置\nvar webpack = require(&apos;webpack&apos;);\nvar HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);\n\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n  entry: __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;bundle.js&quot;\n  },\n\n  module: {\n    loaders: [\n      { test: /\\.json$/, loader: &quot;json&quot; },\n      { test: /\\.js$/, exclude: /node_modules/, loader: &apos;babel&apos; },\n      { test: /\\.css$/, loader: &apos;style!css?modules!postcss&apos; }\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: __dirname + &quot;/app/index.tmpl.html&quot;\n    }),\n    new webpack.HotModuleReplacementPlugin()//热加载插件\n  ],\n\n  devServer: {\n    colors: true,\n    historyApiFallback: true,\n    inline: true,\n    hot: true\n  }\n}\n</code></pre><p>安装react-transform-hmr</p>\n<pre><code>npm install --save-dev babel-plugin-react-transform react-transform-hmr\n</code></pre><p>配置Babel</p>\n<pre><code>{\n  &quot;presets&quot;: [&quot;react&quot;, &quot;es2015&quot;],\n  &quot;env&quot;: {\n    &quot;development&quot;: {\n    &quot;plugins&quot;: [[&quot;react-transform&quot;, {\n       &quot;transforms&quot;: [{\n         &quot;transform&quot;: &quot;react-transform-hmr&quot;,\n\n         &quot;imports&quot;: [&quot;react&quot;],\n\n         &quot;locals&quot;: [&quot;module&quot;]\n       }]\n     }]]\n    }\n  }\n}\n</code></pre><p>现在当你使用React时，可以热加载模块了</p>\n<h1 id=\"产品阶段的构建\"><a href=\"#产品阶段的构建\" class=\"headerlink\" title=\"产品阶段的构建\"></a>产品阶段的构建</h1><p>目前为止，我们已经使用webpack构建了一个完整的开发环境。但是在产品阶段，可能还需要对打包的文件进行额外的处理，比如说优化，压缩，缓存以及分离CSS和JS。</p>\n<p>对于复杂的项目来说，需要复杂的配置，这时候分解配置文件为多个小的文件可以使得事情井井有条，以上面的例子来说，我们创建一个“webpack.production.config.js”的文件，在里面加上基本的配置,它和原始的webpack.config.js很像，如下</p>\n<pre><code>var webpack = require(&apos;webpack&apos;);\nvar HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);\n\nmodule.exports = {\n  entry: __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;bundle.js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: &apos;style!css?modules!postcss&apos;\n      }\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: __dirname + &quot;/app/index.tmpl.html&quot;\n    }),\n  ],\n\n}\n\n\n//package.json\n{\n  &quot;name&quot;: &quot;webpack-sample-project&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;description&quot;: &quot;Sample webpack project&quot;,\n  &quot;scripts&quot;: {\n    &quot;start&quot;: &quot;webpack-dev-server --progress&quot;,\n    &quot;build&quot;: &quot;NODE_ENV=production webpack --config ./webpack.production.config.js --progress&quot;\n  },\n  &quot;author&quot;: &quot;Cássio Zen&quot;,\n  &quot;license&quot;: &quot;ISC&quot;,\n  &quot;devDependencies&quot;: {...},\n  &quot;dependencies&quot;: {...}\n}\n</code></pre><h1 id=\"优化插件\"><a href=\"#优化插件\" class=\"headerlink\" title=\"优化插件\"></a>优化插件</h1><p>webpack提供了一些在发布阶段非常有用的优化插件，它们大多来自于webpack社区，可以通过npm安装，通过以下插件可以完成产品发布阶段所需的功能</p>\n<ul>\n<li>OccurenceOrderPlugin :为组件分配ID，通过这个插件webpack可以分析和优先考虑使用最多的模块，并为它们分配最小的ID</li>\n<li>UglifyJsPlugin：压缩JS代码；</li>\n<li>ExtractTextPlugin：分离CSS和JS文件</li>\n</ul>\n<p>我们继续用例子来看看如何添加它们，OccurenceOrder 和 UglifyJS plugins 都是内置插件，你需要做的只是安装它们</p>\n<pre><code>npm install --save-dev extract-text-webpack-plugin  \n</code></pre><p>在配置文件的plugins后引用它们</p>\n<pre><code>var webpack = require(&apos;webpack&apos;);\nvar HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);\nvar ExtractTextPlugin = require(&apos;extract-text-webpack-plugin&apos;);\n\nmodule.exports = {\n  entry: __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;bundle.js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: ExtractTextPlugin.extract(&apos;style&apos;, &apos;css?modules!postcss&apos;)\n      }\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: __dirname + &quot;/app/index.tmpl.html&quot;\n    }),\n    new webpack.optimize.OccurenceOrderPlugin(),\n    new webpack.optimize.UglifyJsPlugin(),\n    new ExtractTextPlugin(&quot;style.css&quot;)\n  ]\n}\n</code></pre><h1 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h1><p>缓存无处不在，使用缓存的最好方法是保证你的文件名和文件内容是匹配的（内容改变，名称相应改变）</p>\n<p>webpack可以把一个哈希值添加到打包的文件名中，使用方法如下,添加特殊的字符串混合体（[name], [id] and [hash]）到输出文件名前</p>\n<pre><code>var webpack = require(&apos;webpack&apos;);\nvar HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);\nvar ExtractTextPlugin = require(&apos;extract-text-webpack-plugin&apos;);\n\nmodule.exports = {\n  entry: __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;[name]-[hash].js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: ExtractTextPlugin.extract(&apos;style&apos;, &apos;css?modules!postcss&apos;)\n      }\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: __dirname + &quot;/app/index.tmpl.html&quot;\n    }),\n    new webpack.optimize.OccurenceOrderPlugin(),\n    new webpack.optimize.UglifyJsPlugin(),\n    new ExtractTextPlugin(&quot;[name]-[hash].css&quot;)\n  ]\n}\n</code></pre><p>现在用户会有合理的缓存了。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>这是一篇好长的文章，谢谢你的耐心，能仔细看到了这里，大概半个月前我第一次自己一步步配置项目所需的Webpack后就一直想写一篇笔记做总结，几次动笔都不能让自己满意，总觉得写不清楚。直到看到本文的英文版Webpack for React，真的有多次豁然开朗的感觉，喜欢看原文的点链接就可以看了。其实关于Webpack本文讲述得仍不完全，不过相信你看完后已经进入Webpack的大门，能够更好的探索其它的关于Webpack的知识了。</p>\n<p>本文转载自 <a href=\"http://www.jianshu.com/p/42e11515c10f\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/42e11515c10f</a>  </p>\n","site":{"data":{}},"excerpt":"<p>目前，我正在学习用webpack搭建React-Native的环境，在众多的学习过程中，发现这个时期的代码更新速度非常的快，而且学习资料也有很多渐渐过时，而我，不得不在这些（旧）教程中掺杂着最新技术开始我漫长的埋坑之旅。</p>\n<p>以下资料来源于<a href=\"http://www.pro-react.com/materials/appendixA/\" target=\"_blank\" rel=\"noopener\">Webpack for React</a>、 <a href=\"http://blog.csdn.net/kun5706947/article/details/52596766\" target=\"_blank\" rel=\"noopener\">入门Webpack，看这篇就够了</a>，敬请参考:</p>\n<h1 id=\"什么是WebPack，为什么要使用它？\"><a href=\"#什么是WebPack，为什么要使用它？\" class=\"headerlink\" title=\"什么是WebPack，为什么要使用它？\"></a>什么是WebPack，为什么要使用它？</h1><h2 id=\"为什要使用WebPack\"><a href=\"#为什要使用WebPack\" class=\"headerlink\" title=\"为什要使用WebPack\"></a>为什要使用WebPack</h2><p>现今的很多网页其实可以看做是功能丰富的应用，它们拥有着复杂的JavaScript代码和一大堆依赖包。为了简化开发的复杂度，前端社区涌现出了很多好的实践方法</p>\n<ul>\n<li>模块化，让我们可以把复杂的程序细化为小的文件;</li>\n<li>类似于TypeScript这种在JavaScript基础上拓展的开发语言：使我们能够实现目前版本的JavaScript不能直接使用的特性，并且之后还能能装换为JavaScript文件使浏览器可以识别；</li>\n<li>Scss，less等CSS预处理器</li>\n</ul>\n<p>这些改进确实大大的提高了我们的开发效率，但是利用它们开发的文件往往需要进行额外的处理才能让浏览器识别,而手动处理又是非常反锁的，这就为WebPack类的工具的出现提供了需求。</p>\n<h2 id=\"什么是Webpack\"><a href=\"#什么是Webpack\" class=\"headerlink\" title=\"什么是Webpack\"></a>什么是Webpack</h2><p>WebPack可以看做是模块打包机：它做的事情是，分析你的项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（Scss，TypeScript等），并将其打包为合适的格式以供浏览器使用。</p>\n<h2 id=\"WebPack和Grunt以及Gulp相比有什么特性\"><a href=\"#WebPack和Grunt以及Gulp相比有什么特性\" class=\"headerlink\" title=\"WebPack和Grunt以及Gulp相比有什么特性\"></a>WebPack和Grunt以及Gulp相比有什么特性</h2><p>其实Webpack和另外两个并没有太多的可比性，Gulp/Grunt是一种能够优化前端的开发流程的工具，而WebPack是一种模块化的解决方案，不过Webpack的优点使得Webpack可以替代Gulp/Grunt类的工具。</p>\n<p>Grunt和Gulp的工作方式是：在一个配置文件中，指明对某些文件进行类似编译，组合，压缩等任务的具体步骤，这个工具之后可以自动替你完成这些任务。</p>\n<p> <img src=\"../../../../images/webpack/picture1.png\" alt=\"Grunt和Gulp的工作流程\"><br>","more":"<br> Webpack的工作方式是：把你的项目当做一个整体，通过一个给定的主文件（如：index.js），Webpack将从这个文件开始找到你的项目的所有依赖文件，使用loaders处理它们，最后打包为一个浏览器可识别的JavaScript文件。</p>\n<p>  <img src=\"../../../../images/webpack/picture2.png\" alt=\"Webpack工作方式\"></p>\n<p>如果实在要把二者进行比较，Webpack的处理速度更快更直接，能打包更多不同类型的文件。</p>\n<h1 id=\"开始使用Webpack\"><a href=\"#开始使用Webpack\" class=\"headerlink\" title=\"开始使用Webpack\"></a>开始使用Webpack</h1><p>初步了解了Webpack工作方式后，我们一步步的开始学习使用Webpack。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>Webpack可以使用npm安装，新建一个空的练习文件夹（此处命名为webpack sample progect），在终端中转到该文件夹后执行下述指令就可以完成安装。</p>\n<pre><code>//全局安装\nnpm install -g webpack\n//安装到你的项目目录\nnpm install --save-dev webpack\n</code></pre><h2 id=\"正式使用Webpack前的准备\"><a href=\"#正式使用Webpack前的准备\" class=\"headerlink\" title=\"正式使用Webpack前的准备\"></a>正式使用Webpack前的准备</h2><p>在上述练习文件夹中创建一个package.json文件，这是一个标准的npm说明文件，里面蕴含了丰富的信息，包括当前项目的依赖模块，自定义的脚本任务等等。在终端中使用<code>npm</code><br><code>init</code>命令可以自动创建这个package.json文件</p>\n<pre><code>npm init\n</code></pre><p>输入这个命令后，终端会问你一系列诸如项目名称，项目描述，作者等信息，不过不用担心，如果你不准备在npm中发布你的模块，这些问题的答案都不重要，回车默认即可。</p>\n<p>1、package.json文件已经就绪，我们在本项目中安装Webpack作为依赖包</p>\n<pre><code>// 安装Webpack\nnpm install --save-dev webpack\n</code></pre><p>2、回到之前的空文件夹，并在里面创建两个文件夹,app文件夹和public文件夹，app文件夹用来存放原始数据和我们将写的JavaScript模块，public文件夹用来存放准备给浏览器读取的数据（包括使用webpack生成的打包后的js文件以及一个index.html文件）。在这里还需要创建三个文件，index.html 文件放在public文件夹中，两个js文件（Greeter.js和main.js）放在app文件夹中，此时项目结构如下图所示</p>\n<p> <img src=\"../../../../images/webpack/picture3.png\" alt=\"项目结构\"></p>\n<p>index.html文件只有最基础的html代码，它唯一的目的就是加载打包后的js文件（index.js）</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;React-Native&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=&quot;App&quot;&gt;&lt;/div&gt;\n    &lt;script src=&quot;index.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>Greeter.js只包括一个用来返回包含问候信息的html元素的函数。</p>\n<pre><code>// Greeter.js\nmodule.exports=&quot;Hi,World!&quot;;\n</code></pre><p>main.js用来把Greeter模块返回的节点插入页面。</p>\n<pre><code>//main.js \nvar greeter=require(&apos;./Greeter.js&apos;);\ndocument.getElementById(&apos;App&apos;).innerHTML=greeter;\n</code></pre><h2 id=\"正式使用Webpack\"><a href=\"#正式使用Webpack\" class=\"headerlink\" title=\"正式使用Webpack\"></a>正式使用Webpack</h2><p>webpack可以在终端中使用，其最基础的命令是</p>\n<pre><code>webpack {entry file/入口文件} {destination for bundled file/存放bundle.js的地方,我们这里用index.js}\n</code></pre><p>只需要指定一个入口文件，webpack将自动识别项目所依赖的其它文件，不过需要注意的是如果你的webpack没有进行全局安装，那么当你在终端中使用此命令时，需要额外指定其在node_modules中的地址，继续上面的例子，在终端中属于如下命令</p>\n<pre><code>//webpack非全局安装的情况\nnode_modules/.bin/webpack app/main.js public/index.js\n</code></pre><p>结果如下</p>\n<p><img src=\"../../../../images/webpack/picture4.png\" alt=\"termialResult1\"></p>\n<p>可以看出webpack同时编译了main.js和Greeter,js,现在打开index.html,可以看到如下结果</p>\n<p><img src=\"../../../../images/webpack/picture5.png\" alt=\"htmlResult1\"></p>\n<p>有没有很激动，已经成功的使用Webpack打包了一个文件了。不过如果在终端中进行复杂的操作，还是不太方便且容易出错的，接下来看看Webpack的另一种使用方法。</p>\n<h2 id=\"通过配置文件来使用Webpack\"><a href=\"#通过配置文件来使用Webpack\" class=\"headerlink\" title=\"通过配置文件来使用Webpack\"></a>通过配置文件来使用Webpack</h2><p>Webpack拥有很多其它的比较高级的功能（比如说本文后面会介绍的loaders和plugins），这些功能其实都可以通过命令行模式实现，但是正如已经提到的，这样不太方便且容易出错的，一个更好的办法是定义一个配置文件，这个配置文件其实也是一个简单的JavaScript模块，可以把所有的与构建相关的信息放在里面。</p>\n<p>还是继续上面的例子来说明如何写这个配置文件，在当前练习文件夹的根目录下新建一个名为webpack.config.js的文件，并在其中进行最最简单的配置，如下所示，它包含入口文件路径和存放打包后文件的地方的路径。</p>\n<pre><code>module.exports = {\n    entry:  __dirname + &quot;/app/main.js&quot;,//已多次提及的唯一入口文件\n    output: {\n    path: __dirname + &quot;/public&quot;,//打包后的文件存放的地方\n    filename: &quot;index.js&quot;//打包后输出文件的文件名\n    }\n}\n</code></pre><blockquote>\n<p>注：“__dirname”是Node.js中的一个全局变量，它指向当前执行脚本所在的目录。</p>\n</blockquote>\n<p>现在如果你需要打包文件只需要在终端里你运行<code>webpack(非全局安装需使用node_modules/.bin/webpack)</code>命令就可以了，这条命令会自动参考webpack.config.js文件中的配置选项打包你的项目，输出结果如下</p>\n<p><img src=\"../../../../images/webpack/picture6.png\" alt=\"webpack\"></p>\n<p>又学会了一种使用Webpack的方法，而且不用管那烦人的命令行参数了，有没有感觉很爽。有没有想过如果可以连webpack(非全局安装需使用node_modules/.bin/webpack)这条命令都可以不用，那种感觉会不会更爽~，继续看下文。</p>\n<h2 id=\"更快捷的执行打包任务\"><a href=\"#更快捷的执行打包任务\" class=\"headerlink\" title=\"更快捷的执行打包任务\"></a>更快捷的执行打包任务</h2><p>执行类似于node_modules/.bin/webpack这样的命令其实是比较烦人且容易出错的，不过值得庆幸的是<code>npm</code>可以引导任务执行，对其进行配置后可以使用简单的<code>npm start</code>命令来代替这些繁琐的命令。在package.json中对<code>npm</code>的脚本部分进行相关设置即可，设置方法如下。</p>\n<pre><code>{\n  &quot;name&quot;: &quot;react-app&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;description&quot;: &quot;尝试搭建一次react-native环境&quot;,\n  &quot;main&quot;: &quot;main.js&quot;,\n  &quot;scripts&quot;: {\n    &quot;start&quot;: &quot;webpack&quot;\n  },\n  &quot;author&quot;: &quot;FoxSnower&quot;,\n  &quot;license&quot;: &quot;ISC&quot;,\n  &quot;devDependencies&quot;: {\n    &quot;webpack&quot;: &quot;^1.13.2&quot;\n  }\n}\n</code></pre><blockquote>\n<p>注：package.json中的脚本部分已经默认在命令前添加了node_modules/.bin路径，所以无论是全局还是局部安装的Webpack，你都不需要写前面那指明详细的路径了。</p>\n</blockquote>\n<p>npm的<code>start</code>是一个特殊的脚本名称，它的特殊性表现在，在命令行中使用<code>npm start</code>就可以执行相关命令，如果对应的此脚本名称不是<code>start</code>，想要在命令行中运行时，需要这样用<code>npm run {script name}</code>如<code>npm run build</code>，以下是执行<code>npm start</code>后命令行的输出显示</p>\n<p><img src=\"../../../../images/webpack/picture7.png\" alt=\"npmStartTermialResult\"></p>\n<p>现在只需要使用<code>npm start</code>就可以打包文件了，有没有觉得webpack也不过如此嘛，不过不要太小瞧Webpack，其强大的功能包含在其一系列可供配置的选项中，我们一项项来看。</p>\n<h1 id=\"Webpack的强大功能\"><a href=\"#Webpack的强大功能\" class=\"headerlink\" title=\"Webpack的强大功能\"></a>Webpack的强大功能</h1><h2 id=\"生成Source-Maps（使调试更容易）\"><a href=\"#生成Source-Maps（使调试更容易）\" class=\"headerlink\" title=\"生成Source Maps（使调试更容易）\"></a>生成Source Maps（使调试更容易）</h2><p>开发总是离不开调试，如果可以更加方便的调试当然就能提高开发效率，不过打包后的文件有时候你是不容易找到出错了的地方对应的源代码的位置的，Source Maps就是来帮我们解决这个问题的。<br>通过简单的配置后，Webpack在打包时可以为我们生成的source maps，这为我们提供了一种对应编译文件和源文件的方法，使得编译后的代码可读性更高，也更容易调试。</p>\n<p>在webpack的配置文件中配置source maps，需要配置devtool，它有以下四种不同的配置选项，各具优缺点，描述如下：</p>\n<p><img src=\"../../../../images/webpack/picture8.png\" alt=\"devtool配置选项\"></p>\n<p>正如上表所述，上述选项由上到下打包速度越来越快，不过同时也具有越来越多的负面作用，较快的构建速度的后果就是对打包后的文件的的执行有一定影响。</p>\n<p>在学习阶段以及在小到中性的项目上，eval-source-map是一个很好的选项，不过记得只在开发阶段使用它，继续上面的例子，进行如下配置</p>\n<pre><code>module.exports = {\n  devtool: &apos;eval-source-map&apos;,//配置生成Source Maps，选择合适的选项\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/public&quot;,\n    filename: &quot;bundle.js&quot;\n  }\n}\n</code></pre><blockquote>\n<p>cheap-module-eval-source-map方法构建速度更快，但是不利于调试，推荐在大型项目考虑da时间成本是使用。</p>\n</blockquote>\n<h2 id=\"使用webpack构建本地服务器\"><a href=\"#使用webpack构建本地服务器\" class=\"headerlink\" title=\"使用webpack构建本地服务器\"></a>使用webpack构建本地服务器</h2><p>想不想让你的浏览器监测你都代码的修改，并自动刷新修改后的结果，其实Webpack提供一个可选的本地开发服务器，这个本地服务器基于node.js构建，可以实现你想要的这些功能，不过它是一个单独的组件，在webpack中进行配置之前需要单独安装它作为项目依赖</p>\n<pre><code>npm install --save-dev webpack-dev-server\n</code></pre><p>devserver作为webpack配置选项中的一项，具有以下配置选项</p>\n<p><img src=\"../../../../images/webpack/picture9.png\" alt=\"devserver配置选项\"></p>\n<p>继续把这些命令加到webpack的配置文件中，现在的配置文件如下所示</p>\n<pre><code>module.exports={\n    devtool:&apos;eval-source-map&apos;,//配置生成Source Maps，选择合适的选项\n\n    entry:__dirname+&quot;/app/main.js&quot;,//唯一的入口文件\n    output:{\n        path:__dirname+&quot;/public&quot;,//打包后的文件存放的地方\n        filename:&quot;index.js&quot;//打包后输出的文件名\n    },\n    devServer:{\n        contentBase:&apos;./public&apos;,//本地服务器所加载的页面所在的目录\n        color:true,//终端中输出结果为彩色\n        historyApiFallBack:true,//不跳转\n        inline:true//实时刷新\n    }\n}\n</code></pre><h1 id=\"Loaders\"><a href=\"#Loaders\" class=\"headerlink\" title=\"Loaders\"></a>Loaders</h1><h2 id=\"鼎鼎大名的Loaders登场了！\"><a href=\"#鼎鼎大名的Loaders登场了！\" class=\"headerlink\" title=\"鼎鼎大名的Loaders登场了！\"></a>鼎鼎大名的Loaders登场了！</h2><p>Loaders是webpack中最让人激动人心的功能之一了。通过使用不同的loader，webpack通过调用外部的脚本或工具可以对各种各样的格式的文件进行处理，比如说分析JSON文件并把它转换为JavaScript文件，或者说把下一代的JS文件（ES6，ES7)转换为现代浏览器可以识别的JS文件。或者说对React的开发而言，合适的Loaders可以把React的JSX文件转换为JS文件。</p>\n<p>Loaders需要单独安装并且需要在webpack.config.js下的modules关键字下进行配置，Loaders的配置选项包括以下几方面：</p>\n<ul>\n<li><code>test</code>：一个匹配loaders所处理的文件的拓展名的正则表达式（必须）</li>\n<li><code>loader</code>：loader的名称（必须）</li>\n<li><code>include/exclude</code>:手动添加必须处理的文件（文件夹）或屏蔽不需要处理的文件（文件夹）（可选）；</li>\n<li><code>query</code>：为loaders提供额外的设置选项（可选）</li>\n</ul>\n<p>继续上面的例子，我们把Greeter.js里的问候消息放在一个单独的JSON文件里,并通过合适的配置使Greeter.js可以读取该JSON文件的值，配置方法如下</p>\n<pre><code>//安装可以装换JSON的loader\nnpm install --save-dev json-loader\n</code></pre><p>创建带有问候信息的JSON文件(命名为config.json)</p>\n<pre><code>//config.json\n{\n  &quot;greetText&quot;: &quot;Hi there and greetings from JSON!&quot;\n}\n</code></pre><p>更新后的Greeter.js</p>\n<pre><code>var config = require(&apos;./config.json&apos;);\n\nmodule.exports = function() {\n  var greet = document.createElement(&apos;div&apos;);\n  greet.textContent = config.greetText;\n  return greet;\n};\n</code></pre><p>Loaders很好，不过有的Loaders使用起来比较复杂，比如说Babel。</p>\n<h2 id=\"Babel\"><a href=\"#Babel\" class=\"headerlink\" title=\"Babel\"></a>Babel</h2><p>Babel其实是一个编译JavaScript的平台，它的强大之处表现在可以通过编译帮你达到以下目的：</p>\n<ul>\n<li>一代的JavaScript标准（ES6，ES7），这些标准目前并未被当前的浏览器完全的支持；</li>\n<li>使用基于JavaScript进行了拓展的语言，比如React的JSX</li>\n</ul>\n<h2 id=\"Babel的安装与配置\"><a href=\"#Babel的安装与配置\" class=\"headerlink\" title=\"Babel的安装与配置\"></a>Babel的安装与配置</h2><p>Babel其实是几个模块化的包，其核心功能位于称为babel-core的npm包中，不过webpack把它们整合在一起使用，但是对于每一个你需要的功能或拓展，你都需要安装单独的包（用得最多的是解析Es6的babel-preset-es2015包和解析JSX的babel-preset-react包）。</p>\n<p>我们先来一次性安装这些依赖包</p>\n<pre><code>// npm一次性安装多个依赖模块，模块之间用空格隔开\nnpm install --save-dev babel-core babel-loader babel-preset-es2015 babel-preset-react\n</code></pre><p>在webpack中配置Babel的方法如下</p>\n<pre><code>module.exports = {\n  devtool: &apos;eval-source-map&apos;,\n\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/public&quot;,\n    filename: &quot;index.js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;,//在webpack的module部分的loaders里进行配置即可\n        query: {\n          presets: [&apos;es2015&apos;,&apos;react&apos;]\n        }\n      }\n    ]\n  },\n\n  devServer: {\n    contentBase: &quot;./public&quot;,\n    colors: true,\n    historyApiFallback: true,\n    inline: true\n  }\n}\n</code></pre><p>现在你的webpack的配置已经允许你使用ES6以及JSX的语法了。继续用上面的例子进行测试，不过这次我们会使用React，记得先安装 React 和 React-DOM</p>\n<pre><code>npm install --save react react-dom\n</code></pre><p>使用ES6的语法，更新Greeter.js并返回一个React组件</p>\n<pre><code>//Greeter,js\nimport React, {Component} from &apos;react&apos;\nimport config from &apos;./config.json&apos;;\n\nclass Greeter extends Component{\n  render() {\n    return (\n      &lt;div&gt;\n        {config.greetText}\n      &lt;/div&gt;\n    );\n  }\n}\n\nexport default Greeter\n</code></pre><p>使用ES6的模块定义和渲染Greeter模块</p>\n<pre><code>//main.js\nimport React from &apos;react&apos;;\nimport {render} from &apos;react-dom&apos;;\nimport Greeter from &apos;./Greeter&apos;;\n\nrender(&lt;Greeter /&gt;, document.getElementById(&apos;App&apos;));\n</code></pre><h2 id=\"Babel的配置选项\"><a href=\"#Babel的配置选项\" class=\"headerlink\" title=\"Babel的配置选项\"></a>Babel的配置选项</h2><p>Babel其实可以完全在webpack.config.js中进行配置，但是考虑到babel具有非常多的配置选项，在单一的webpack.config.js文件中进行配置往往使得这个文件显得太复杂，因此一些开发者支持把babel的配置选项放在一个单独的名为 “.babelrc” 的配置文件中。我们现在的babel的配置并不算复杂，不过之后我们会再加一些东西，因此现在我们就提取出相关部分，分两个配置文件进行配置（webpack会自动调用.babelrc里的babel配置选项），如下：</p>\n<pre><code>// webpack.config.js\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/public&quot;,\n    filename: &quot;index.js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      }\n    ]\n  },\n\n  devServer: {...} // Omitted for brevity\n}\n\n//.babelrc\n{\n  &quot;presets&quot;: [&quot;react&quot;, &quot;es2015&quot;]\n}\n</code></pre><p>到目前为止，我们已经知道了，对于模块，Webpack能提供非常强大的处理功能，那哪些是模块呢。 </p>\n<h1 id=\"一切皆模块\"><a href=\"#一切皆模块\" class=\"headerlink\" title=\"一切皆模块\"></a>一切皆模块</h1><p>Webpack有一个不可不说的优点，它把所有的文件都可以当做模块处理，包括你的JavaScript代码，也包括CSS和fonts以及图片等等等，只有通过合适的loaders，它们都可以被当做模块被处理。</p>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><p>webpack提供两个工具处理样式表，css-loader 和 style-loader，二者处理的任务不同，css-loader使你能够使用类似@import 和 url(…)的方法实现 require()的功能,style-loader将所有的计算后的样式加入页面中，二者组合在一起使你能够把样式表嵌入webpack打包后的JS文件中。</p>\n<p>继续上面的例子</p>\n<pre><code>//安装\nnpm install --save-dev style-loader css-loader\n\n//使用\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;index.js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: &apos;style!css&apos;//添加对样式表的处理\n      }\n    ]\n  },\n\n  devServer: {...}\n}\n</code></pre><blockquote>\n<p>注：感叹号的作用在于使同一文件能够使用不同类型的loader</p>\n</blockquote>\n<p>接下来，在app文件夹里创建一个名字为”main.css”的文件，对一些元素设置样式</p>\n<pre><code>html {\n  box-sizing: border-box;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\n*, *:before, *:after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  font-family: &apos;Helvetica Neue&apos;, Helvetica, Arial, sans-serif;\n}\nh1, h2, h3, h4, h5, h6, p, ul {\n  margin: 0;\n  padding: 0;\n}\n</code></pre><p>你还记得吗？webpack只有单一的入口，其它的模块需要通过 import, require, url等导入相关位置，为了让webpack能找到”main.css“文件，我们把它导入”main.js “中，如下</p>\n<pre><code>//main.js\nimport React from &apos;react&apos;;\nimport {render} from &apos;react-dom&apos;;\nimport Greeter from &apos;./Greeter&apos;;\n\nimport &apos;./main.css&apos;;//使用require导入css文件\n\nrender(&lt;Greeter /&gt;, document.getElementById(&apos;App&apos;));  \n</code></pre><blockquote>\n<p>通常情况下，css会和js打包到同一个文件中，并不会打包为一个单独的css文件，不过通过合适的配置webpack也可以把css打包为单独的文件的。<br>不过这也只是webpack把css当做模块而已，咱们继续看看一个真的CSS模块的实践。</p>\n</blockquote>\n<h2 id=\"CSS-module\"><a href=\"#CSS-module\" class=\"headerlink\" title=\"CSS module\"></a>CSS module</h2><p>在过去的一些年里，JavaScript通过一些新的语言特性，更好的工具以及更好的实践方法（比如说模块化）发展得非常迅速。模块使得开发者把复杂的代码转化为小的，干净的，依赖声明明确的单元，且基于优化工具，依赖管理和加载管理可以自动完成。<br>不过前端的另外一部分，CSS发展就相对慢一些，大多的样式表却依旧是巨大且充满了全局类名，这使得维护和修改都非常困难和复杂。</p>\n<p>最近有一个叫做 CSS modules 的技术就意在把JS的模块化思想带入CSS中来，通过CSS模块，所有的类名，动画名默认都只作用于当前模块。Webpack从一开始就对CSS模块化提供了支持，在CSS loader中进行配置后，你所需要做的一切就是把”modules“传递都所需要的地方，然后就可以直接把CSS的类名传递到组件的代码中，且这样做只对当前组件有效，不必担心在不同的模块中具有相同的类名可能会造成的问题。具体的代码如下</p>\n<pre><code>module.exports = {\n  devtool: &apos;eval-source-map&apos;,\n\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {...},\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: &apos;style!css?modules&apos;//跟前面相比就在后面加上了?modules\n      }\n    ]\n  },\n\n  devServer: {...}\n}\n</code></pre><p>创建一个Greeter.css文件</p>\n<pre><code>.root {\n  background-color: #eee;\n  padding: 10px;\n  border: 3px solid #ccc;\n}\n</code></pre><p>导入.root到Greeter.js中</p>\n<pre><code>import React, {Component} from &apos;react&apos;;\nimport config from &apos;./config.json&apos;;\nimport styles from &apos;./Greeter.css&apos;;//导入\n\nclass Greeter extends Component{\n  render() {\n    return (\n      &lt;div className={styles.root}&gt;//添加类名\n        {config.greetText}\n      &lt;/div&gt;\n    );\n  }\n}\n\nexport default Greeter   \n</code></pre><p>放心使用把，相同的类名也不会造成不同组件之间的污染。<br>CSS modules 也是一个很大的主题，有兴趣的话可以去官方文档查看更多消息</p>\n<h2 id=\"CSS预处理器\"><a href=\"#CSS预处理器\" class=\"headerlink\" title=\"CSS预处理器\"></a>CSS预处理器</h2><p>Sass 和 Less之类的预处理器是对原生CSS的拓展，它们允许你使用类似于variables, nesting, mixins, inheritance等不存在于CSS中的特性来写CSS，CSS预处理器可以这些特殊类型的语句转化为浏览器可识别的CSS语句，<br>你现在可能都已经熟悉了，在webpack里使用相关loaders进行配置就可以使用了，以下是常用的CSS 处理loaders</p>\n<ul>\n<li>Less Loader</li>\n<li>Sass Loader</li>\n<li>Stylus Loader</li>\n</ul>\n<p>不过其实也存在一个CSS的处理平台-PostCSS，它可以帮助你的CSS实现更多的功能，在其<a href=\"https://github.com/postcss/postcss\" target=\"_blank\" rel=\"noopener\">CSS官方文档</a>可了解更多相关知识。</p>\n<p>举例来说如何使用PostCSS，我们使用PostCSS来为CSS代码自动添加适应不同浏览器的CSS前缀。</p>\n<p>首先安装postcss-loader 和 autoprefixer（自动添加前缀的插件）</p>\n<pre><code>npm install --save-dev postcss-loader autoprefixer\n</code></pre><p>接下来，在webpack配置文件中进行设置，只需要新建一个postcss关键字，并在里面申明依赖的插件，如下，现在你写的css会自动根据Can i use里的数据添加不同前缀了。</p>\n<pre><code>//webpack配置文件\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n  entry: __dirname + &quot;/app/main.js&quot;,\n  output: {...},\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: &apos;style!css?modules!postcss&apos;\n      }\n    ]\n  },\n\n  postcss: [\n    require(&apos;autoprefixer&apos;)//调用autoprefixer插件\n  ],\n\n  devServer: {...}\n}\n</code></pre><p>到现在，本文已经涉及到处理JS的Babel和处理CSS的PostCSS，它们其实也是两个单独的平台，配合Webpack可以很好的发挥它们的作用。接下来介绍Webpack中另一个非常重要的功能-Plugins</p>\n<h1 id=\"插件（Plugins）\"><a href=\"#插件（Plugins）\" class=\"headerlink\" title=\"插件（Plugins）\"></a>插件（Plugins）</h1><p>插件（Plugins）是用来拓展Webpack功能的，它们会在整个构建过程中生效，执行相关的任务。<br>Loaders和Plugins常常被弄混，但是他们其实是完全不同的东西，可以这么来说，loaders是在打包构建过程中用来处理源文件的（JSX，Scss，Less..），一次处理一个，插件并不直接操作单个文件，它直接对整个构建过程其作用。</p>\n<p>Webpack有很多内置插件，同时也有很多第三方插件，可以让我们完成更加丰富的功能。</p>\n<h2 id=\"使用插件的方法\"><a href=\"#使用插件的方法\" class=\"headerlink\" title=\"使用插件的方法\"></a>使用插件的方法</h2><p>要使用某个插件，我们需要通过npm安装它，然后要做的就是在webpack配置中的plugins关键字部分添加该插件的一个实例（plugins是一个数组）继续看例子，我们添加了一个实现版权声明的插件。</p>\n<pre><code>//webpack.config.js\nvar webpack = require(&apos;webpack&apos;);\n\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {...},\n\n  module: {\n    loaders: [\n      { test: /\\.json$/, loader: &quot;json&quot; },\n      { test: /\\.js$/, exclude: /node_modules/, loader: &apos;babel&apos; },\n      { test: /\\.css$/, loader: &apos;style!css?modules!postcss&apos; }//这里添加PostCSS\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new webpack.BannerPlugin(&quot;Copyright Flying Unicorns inc.&quot;)//在这个数组中new一个就可以了\n  ],\n\n  devServer: {...}\n}\n</code></pre><p>通过这个插件，打包后的JS文件显示如下</p>\n<p>知道Webpack中的插件如何使用了，下面给大家推荐几个常用的插件</p>\n<h2 id=\"HtmlWebpackPlugin\"><a href=\"#HtmlWebpackPlugin\" class=\"headerlink\" title=\"HtmlWebpackPlugin\"></a>HtmlWebpackPlugin</h2><p>这个插件的作用是依据一个简单的模板，帮你生成最终的HTML5文件，这个文件中自动引用了你打包后的JS文件。每次编译都在文件名中插入一个不同的哈希值。</p>\n<p>安装</p>\n<pre><code>npm install --save-dev html-webpack-plugin\n</code></pre><p>这个插件自动完成了我们之前手动做的一些事情，在正式使用之前需要对一直以来的项目结构做一些改变：</p>\n<p>1、移除public文件夹，利用此插件，HTML5文件会自动生成，此外CSS已经通过前面的操作打包到JS中了，public文件夹里。<br>2、在app目录下，创建一个Html文件模板，这个模板包含title等其它你需要的元素，在编译过程中，本插件会依据此模板生成最终的html页面，会自动添加所依赖的 css, js，favicon等文件，在本例中我们命名模板文件名称为index.tmpl.html，模板源代码如下</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;title&gt;Webpack Sample Project&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=&apos;App&apos;&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>3、更新webpack的配置文件，方法同上,新建一个build文件夹用来存放最终的输出文件</p>\n<pre><code>var webpack = require(&apos;webpack&apos;);\nvar HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n\n  entry:  __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;index.js&quot;\n  },\n\n  module: {\n    loaders: [\n      { test: /\\.json$/, loader: &quot;json&quot; },\n      { test: /\\.js$/, exclude: /node_modules/, loader: &apos;babel&apos; },\n      { test: /\\.css$/, loader: &apos;style!css?modules!postcss&apos; }\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: __dirname + &quot;/app/index.tmpl.html&quot;//new 一个这个插件的实例，并传入相关的参数\n    })\n  ],\n\n  devServer: {\n    colors: true,\n    historyApiFallback: true,\n    inline: true\n  }\n}\n</code></pre><h2 id=\"Hot-Module-Replacement\"><a href=\"#Hot-Module-Replacement\" class=\"headerlink\" title=\"Hot Module Replacement\"></a>Hot Module Replacement</h2><p>Hot Module Replacement（HMR）也是webpack里很有用的一个插件，它允许你在修改组件代码后，自动刷新实时预览修改后的效果。<br>在webpack中实现HMR也很简单，只需要做两项配置</p>\n<p>1、在webpack配置文件中添加HMR插件；<br>2、在Webpack Dev Server中添加“hot”参数；</p>\n<p>不过配置完这些后，JS模块其实还是不能自动热加载的，还需要在你的JS模块中执行一个Webpack提供的API才能实现热加载，虽然这个API不难使用，但是如果是React模块，使用我们已经熟悉的Babel可以更方便的实现功能热加载。</p>\n<p>整理下我们的思路，具体实现方法如下</p>\n<ul>\n<li>Babel和webpack是独立的工具</li>\n<li>二者可以一起工作</li>\n<li>二者都可以通过插件拓展功能</li>\n<li>HMR是一个webpack插件，它让你能浏览器中实时观察模块修改后的效果，但是如果你想让它工作，需要对模块进行额外的配额；</li>\n<li>Babel有一个叫做react-transform-hrm的插件，可以在不对React模块进行额外的配置的前提下让HMR正常工作;</li>\n</ul>\n<p>更新我们的例子来实际看看如何配置</p>\n<pre><code>//webpack中的配置\nvar webpack = require(&apos;webpack&apos;);\nvar HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);\n\nmodule.exports = {\n  devtool: &apos;eval-source-map&apos;,\n  entry: __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;bundle.js&quot;\n  },\n\n  module: {\n    loaders: [\n      { test: /\\.json$/, loader: &quot;json&quot; },\n      { test: /\\.js$/, exclude: /node_modules/, loader: &apos;babel&apos; },\n      { test: /\\.css$/, loader: &apos;style!css?modules!postcss&apos; }\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: __dirname + &quot;/app/index.tmpl.html&quot;\n    }),\n    new webpack.HotModuleReplacementPlugin()//热加载插件\n  ],\n\n  devServer: {\n    colors: true,\n    historyApiFallback: true,\n    inline: true,\n    hot: true\n  }\n}\n</code></pre><p>安装react-transform-hmr</p>\n<pre><code>npm install --save-dev babel-plugin-react-transform react-transform-hmr\n</code></pre><p>配置Babel</p>\n<pre><code>{\n  &quot;presets&quot;: [&quot;react&quot;, &quot;es2015&quot;],\n  &quot;env&quot;: {\n    &quot;development&quot;: {\n    &quot;plugins&quot;: [[&quot;react-transform&quot;, {\n       &quot;transforms&quot;: [{\n         &quot;transform&quot;: &quot;react-transform-hmr&quot;,\n\n         &quot;imports&quot;: [&quot;react&quot;],\n\n         &quot;locals&quot;: [&quot;module&quot;]\n       }]\n     }]]\n    }\n  }\n}\n</code></pre><p>现在当你使用React时，可以热加载模块了</p>\n<h1 id=\"产品阶段的构建\"><a href=\"#产品阶段的构建\" class=\"headerlink\" title=\"产品阶段的构建\"></a>产品阶段的构建</h1><p>目前为止，我们已经使用webpack构建了一个完整的开发环境。但是在产品阶段，可能还需要对打包的文件进行额外的处理，比如说优化，压缩，缓存以及分离CSS和JS。</p>\n<p>对于复杂的项目来说，需要复杂的配置，这时候分解配置文件为多个小的文件可以使得事情井井有条，以上面的例子来说，我们创建一个“webpack.production.config.js”的文件，在里面加上基本的配置,它和原始的webpack.config.js很像，如下</p>\n<pre><code>var webpack = require(&apos;webpack&apos;);\nvar HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);\n\nmodule.exports = {\n  entry: __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;bundle.js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: &apos;style!css?modules!postcss&apos;\n      }\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: __dirname + &quot;/app/index.tmpl.html&quot;\n    }),\n  ],\n\n}\n\n\n//package.json\n{\n  &quot;name&quot;: &quot;webpack-sample-project&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;description&quot;: &quot;Sample webpack project&quot;,\n  &quot;scripts&quot;: {\n    &quot;start&quot;: &quot;webpack-dev-server --progress&quot;,\n    &quot;build&quot;: &quot;NODE_ENV=production webpack --config ./webpack.production.config.js --progress&quot;\n  },\n  &quot;author&quot;: &quot;Cássio Zen&quot;,\n  &quot;license&quot;: &quot;ISC&quot;,\n  &quot;devDependencies&quot;: {...},\n  &quot;dependencies&quot;: {...}\n}\n</code></pre><h1 id=\"优化插件\"><a href=\"#优化插件\" class=\"headerlink\" title=\"优化插件\"></a>优化插件</h1><p>webpack提供了一些在发布阶段非常有用的优化插件，它们大多来自于webpack社区，可以通过npm安装，通过以下插件可以完成产品发布阶段所需的功能</p>\n<ul>\n<li>OccurenceOrderPlugin :为组件分配ID，通过这个插件webpack可以分析和优先考虑使用最多的模块，并为它们分配最小的ID</li>\n<li>UglifyJsPlugin：压缩JS代码；</li>\n<li>ExtractTextPlugin：分离CSS和JS文件</li>\n</ul>\n<p>我们继续用例子来看看如何添加它们，OccurenceOrder 和 UglifyJS plugins 都是内置插件，你需要做的只是安装它们</p>\n<pre><code>npm install --save-dev extract-text-webpack-plugin  \n</code></pre><p>在配置文件的plugins后引用它们</p>\n<pre><code>var webpack = require(&apos;webpack&apos;);\nvar HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);\nvar ExtractTextPlugin = require(&apos;extract-text-webpack-plugin&apos;);\n\nmodule.exports = {\n  entry: __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;bundle.js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: ExtractTextPlugin.extract(&apos;style&apos;, &apos;css?modules!postcss&apos;)\n      }\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: __dirname + &quot;/app/index.tmpl.html&quot;\n    }),\n    new webpack.optimize.OccurenceOrderPlugin(),\n    new webpack.optimize.UglifyJsPlugin(),\n    new ExtractTextPlugin(&quot;style.css&quot;)\n  ]\n}\n</code></pre><h1 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h1><p>缓存无处不在，使用缓存的最好方法是保证你的文件名和文件内容是匹配的（内容改变，名称相应改变）</p>\n<p>webpack可以把一个哈希值添加到打包的文件名中，使用方法如下,添加特殊的字符串混合体（[name], [id] and [hash]）到输出文件名前</p>\n<pre><code>var webpack = require(&apos;webpack&apos;);\nvar HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);\nvar ExtractTextPlugin = require(&apos;extract-text-webpack-plugin&apos;);\n\nmodule.exports = {\n  entry: __dirname + &quot;/app/main.js&quot;,\n  output: {\n    path: __dirname + &quot;/build&quot;,\n    filename: &quot;[name]-[hash].js&quot;\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.json$/,\n        loader: &quot;json&quot;\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: &apos;babel&apos;\n      },\n      {\n        test: /\\.css$/,\n        loader: ExtractTextPlugin.extract(&apos;style&apos;, &apos;css?modules!postcss&apos;)\n      }\n    ]\n  },\n  postcss: [\n    require(&apos;autoprefixer&apos;)\n  ],\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: __dirname + &quot;/app/index.tmpl.html&quot;\n    }),\n    new webpack.optimize.OccurenceOrderPlugin(),\n    new webpack.optimize.UglifyJsPlugin(),\n    new ExtractTextPlugin(&quot;[name]-[hash].css&quot;)\n  ]\n}\n</code></pre><p>现在用户会有合理的缓存了。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>这是一篇好长的文章，谢谢你的耐心，能仔细看到了这里，大概半个月前我第一次自己一步步配置项目所需的Webpack后就一直想写一篇笔记做总结，几次动笔都不能让自己满意，总觉得写不清楚。直到看到本文的英文版Webpack for React，真的有多次豁然开朗的感觉，喜欢看原文的点链接就可以看了。其实关于Webpack本文讲述得仍不完全，不过相信你看完后已经进入Webpack的大门，能够更好的探索其它的关于Webpack的知识了。</p>\n<p>本文转载自 <a href=\"http://www.jianshu.com/p/42e11515c10f\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/42e11515c10f</a>  </p>"},{"title":"想买一件东西又觉得太贵的时候","keywords":"买 太贵","date":"2015-05-10T16:00:00.000Z","_content":"\n想买一件东西又觉得太贵的时候，看看下面这些你就会改变你的看法了...\n<!-- more -->\n![这是第一张图片](../../../../images/mouse-images/1.jpg)\n\n![这是第二张图片](../../../../images/mouse-images/2.jpg)\n\n![这是第三张图片](../../../../images/mouse-images/3.jpg)\n\n![这是第四张图片](../../../../images/mouse-images/4.jpg)\n\n![这是第五张图片](../../../../images/mouse-images/5.jpg)\n\n![这是第六张图片](../../../../images/mouse-images/6.jpg)\n\n![这是第七张图片](../../../../images/mouse-images/7.jpg)\n\n![这是第八张图片](../../../../images/mouse-images/8.jpg)\n\n![这是第九张图片](../../../../images/mouse-images/9.jpg)\n\n### 我竟无力反驳·\n\n### O(∩_∩)O哈哈~","source":"_posts/Z想买一件东西又觉得太贵的时候.md","raw":"---\ntitle: 想买一件东西又觉得太贵的时候\nkeywords: 买 太贵\ntags: 生活趣事\ncategories: coder\ndate: 2015-05-11\n---\n\n想买一件东西又觉得太贵的时候，看看下面这些你就会改变你的看法了...\n<!-- more -->\n![这是第一张图片](../../../../images/mouse-images/1.jpg)\n\n![这是第二张图片](../../../../images/mouse-images/2.jpg)\n\n![这是第三张图片](../../../../images/mouse-images/3.jpg)\n\n![这是第四张图片](../../../../images/mouse-images/4.jpg)\n\n![这是第五张图片](../../../../images/mouse-images/5.jpg)\n\n![这是第六张图片](../../../../images/mouse-images/6.jpg)\n\n![这是第七张图片](../../../../images/mouse-images/7.jpg)\n\n![这是第八张图片](../../../../images/mouse-images/8.jpg)\n\n![这是第九张图片](../../../../images/mouse-images/9.jpg)\n\n### 我竟无力反驳·\n\n### O(∩_∩)O哈哈~","slug":"Z想买一件东西又觉得太贵的时候","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0x8001y6atflp069y4y","content":"<p>想买一件东西又觉得太贵的时候，看看下面这些你就会改变你的看法了…<br><a id=\"more\"></a><br><img src=\"../../../../images/mouse-images/1.jpg\" alt=\"这是第一张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/2.jpg\" alt=\"这是第二张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/3.jpg\" alt=\"这是第三张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/4.jpg\" alt=\"这是第四张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/5.jpg\" alt=\"这是第五张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/6.jpg\" alt=\"这是第六张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/7.jpg\" alt=\"这是第七张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/8.jpg\" alt=\"这是第八张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/9.jpg\" alt=\"这是第九张图片\"></p>\n<h3 id=\"我竟无力反驳·\"><a href=\"#我竟无力反驳·\" class=\"headerlink\" title=\"我竟无力反驳·\"></a>我竟无力反驳·</h3><h3 id=\"O-∩-∩-O哈哈\"><a href=\"#O-∩-∩-O哈哈\" class=\"headerlink\" title=\"O(∩_∩)O哈哈~\"></a>O(∩_∩)O哈哈~</h3>","site":{"data":{}},"excerpt":"<p>想买一件东西又觉得太贵的时候，看看下面这些你就会改变你的看法了…<br>","more":"<br><img src=\"../../../../images/mouse-images/1.jpg\" alt=\"这是第一张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/2.jpg\" alt=\"这是第二张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/3.jpg\" alt=\"这是第三张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/4.jpg\" alt=\"这是第四张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/5.jpg\" alt=\"这是第五张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/6.jpg\" alt=\"这是第六张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/7.jpg\" alt=\"这是第七张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/8.jpg\" alt=\"这是第八张图片\"></p>\n<p><img src=\"../../../../images/mouse-images/9.jpg\" alt=\"这是第九张图片\"></p>\n<h3 id=\"我竟无力反驳·\"><a href=\"#我竟无力反驳·\" class=\"headerlink\" title=\"我竟无力反驳·\"></a>我竟无力反驳·</h3><h3 id=\"O-∩-∩-O哈哈\"><a href=\"#O-∩-∩-O哈哈\" class=\"headerlink\" title=\"O(∩_∩)O哈哈~\"></a>O(∩_∩)O哈哈~</h3>"},{"title":"有一种错觉叫我能做到","keywords":"错觉 有一种错觉叫我能做到 吾皇","date":"2015-05-14T16:00:00.000Z","_content":"有一种错觉叫我能做到...\n<!-- more -->\n![这是第一张图片](../../../../images/miss-feeling/1.gif)\n\n![这是第二张图片](../../../../images/miss-feeling/2.gif)\n\n![这是第三张图片](../../../../images/miss-feeling/3.gif)\n\n![这是第四张图片](../../../../images/miss-feeling/4.gif)\n\n![这是第五张图片](../../../../images/miss-feeling/5.gif)\n\n![这是第六张图片](../../../../images/miss-feeling/6.gif)\n\n![这是第七张图片](../../../../images/miss-feeling/7.gif)\n\n![这是第八张图片](../../../../images/miss-feeling/8.gif)\n\n![这是第九张图片](../../../../images/miss-feeling/9.gif)\n\n### 吾皇现实中好厉害！","source":"_posts/Z有一种错觉叫我能做到.md","raw":"---\ntitle: 有一种错觉叫我能做到\nkeywords: 错觉 有一种错觉叫我能做到 吾皇\ntags: 生活趣事\ncategories: coder\ndate: 2015-05-15\n---\n有一种错觉叫我能做到...\n<!-- more -->\n![这是第一张图片](../../../../images/miss-feeling/1.gif)\n\n![这是第二张图片](../../../../images/miss-feeling/2.gif)\n\n![这是第三张图片](../../../../images/miss-feeling/3.gif)\n\n![这是第四张图片](../../../../images/miss-feeling/4.gif)\n\n![这是第五张图片](../../../../images/miss-feeling/5.gif)\n\n![这是第六张图片](../../../../images/miss-feeling/6.gif)\n\n![这是第七张图片](../../../../images/miss-feeling/7.gif)\n\n![这是第八张图片](../../../../images/miss-feeling/8.gif)\n\n![这是第九张图片](../../../../images/miss-feeling/9.gif)\n\n### 吾皇现实中好厉害！","slug":"Z有一种错觉叫我能做到","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0xb00216atf5i43eq8b","content":"<p>有一种错觉叫我能做到…<br><a id=\"more\"></a><br><img src=\"../../../../images/miss-feeling/1.gif\" alt=\"这是第一张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/2.gif\" alt=\"这是第二张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/3.gif\" alt=\"这是第三张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/4.gif\" alt=\"这是第四张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/5.gif\" alt=\"这是第五张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/6.gif\" alt=\"这是第六张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/7.gif\" alt=\"这是第七张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/8.gif\" alt=\"这是第八张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/9.gif\" alt=\"这是第九张图片\"></p>\n<h3 id=\"吾皇现实中好厉害！\"><a href=\"#吾皇现实中好厉害！\" class=\"headerlink\" title=\"吾皇现实中好厉害！\"></a>吾皇现实中好厉害！</h3>","site":{"data":{}},"excerpt":"<p>有一种错觉叫我能做到…<br>","more":"<br><img src=\"../../../../images/miss-feeling/1.gif\" alt=\"这是第一张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/2.gif\" alt=\"这是第二张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/3.gif\" alt=\"这是第三张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/4.gif\" alt=\"这是第四张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/5.gif\" alt=\"这是第五张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/6.gif\" alt=\"这是第六张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/7.gif\" alt=\"这是第七张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/8.gif\" alt=\"这是第八张图片\"></p>\n<p><img src=\"../../../../images/miss-feeling/9.gif\" alt=\"这是第九张图片\"></p>\n<h3 id=\"吾皇现实中好厉害！\"><a href=\"#吾皇现实中好厉害！\" class=\"headerlink\" title=\"吾皇现实中好厉害！\"></a>吾皇现实中好厉害！</h3>"},{"title":"CSS绘图，实现一些特殊形状","keywords":"CSS绘图 特殊形状 神奇","date":"2017-02-11T16:00:00.000Z","_content":"\n这是一件神奇的事，不信？\n\n贴代码试试...\n\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n        <meta name=\"keywords\" content=\"前端开发,CSS,HTML,XHTML,JS\"/>\n        <meta name=\"description\" content=\"专注前端技术博客\"/>\n        <title>WEB前端开发 | 闪亮于WEB前端的彩虹</title>\n        <title>测试</title>\n        <style type=\"text/css\">\n            - {\n                margin:0;\n                padding:0;\n                border:0;\n            }\n            .wrap {\n                position:absolute;\n            }\n            .arrow {\n                position:relative;\n                width:0;\n                height:0;\n                border-top:9px solid transparent;\n                border-right:9px solid #000;\n                -webkit-transform:rotate(10deg);\n                -moz-transform:rotate(10deg);\n                -ms-transform:rotate(10deg);\n                -o-transform:rotate(10deg);\n            }\n            .arrow:after {\n                content:\"\";\n                position:absolute;\n                border:0 solid transparent;\n                border-top:3px solid #000;\n                border-radius:20px 0 0 0;\n                top:-12px;\n                left:-9px;\n                width:12px;\n                height:12px;\n                -webkit-transform:rotate(45deg);\n                -moz-transform:rotate(45deg);\n                -ms-transform:rotate(45deg);\n                -o-transform:rotate(45deg);\n            }\n            .star-six {\n                width:0;\n                height:0;\n                border-left:50px solid transparent;\n                border-right:50px solid transparent;\n                border-bottom:100px solid #9C3;\n                position:relative;\n            }\n            .star-six:after {\n                width:0;\n                height:0;\n                border-left:50px solid transparent;\n                border-right:50px solid transparent;\n                border-top:100px solid #9C3;\n                position:absolute;\n                content:\"\";\n                top:30px;\n                left:-50px;\n            }\n            .star-five {\n                margin:50px 0;\n                position:relative;\n                display:block;\n                color:#06C;\n                width:0px;\n                height:0px;\n                border-right:100px solid transparent;\n                border-bottom:70px solid #06C;\n                border-left:100px solid transparent;\n                -moz-transform:rotate(35deg);\n                -webkit-transform:rotate(35deg);\n                -ms-transform:rotate(35deg);\n                -o-transform:rotate(35deg);\n            }\n            .star-five:before {\n                border-bottom:80px solid #06C;\n                border-left:30px solid transparent;\n                border-right:30px solid transparent;\n                position:absolute;\n                height:0;\n                width:0;\n                top:-45px;\n                left:-65px;\n                display:block;\n                content:'';\n                -webkit-transform:rotate(-35deg);\n                -moz-transform:rotate(-35deg);\n                -ms-transform:rotate(-35deg);\n                -o-transform:rotate(-35deg);\n            }\n            .star-five:after {\n                position:absolute;\n                display:block;\n                color:#06C;\n                top:3px;\n                left:-105px;\n                width:0px;\n                height:0px;\n                border-right:100px solid transparent;\n                border-bottom:70px solid #06C;\n                border-left:100px solid transparent;\n                -webkit-transform:rotate(-70deg);\n                -moz-transform:rotate(-70deg);\n                -ms-transform:rotate(-70deg);\n                -o-transform:rotate(-70deg);\n                content:'';\n            }\n            .heart {\n                position:relative;\n                width:100px;\n                height:90px;\n            }\n            .heart:before,.heart:after {\n                position:absolute;\n                content:\"\";\n                left:50px;\n                top:0;\n                width:50px;\n                height:80px;\n                background:red;\n                -moz-border-radius:50px 50px 0 0;\n                border-radius:50px 50px 0 0;\n                -webkit-transform:rotate(-45deg);\n                -moz-transform:rotate(-45deg);\n                -ms-transform:rotate(-45deg);\n                -o-transform:rotate(-45deg);\n                transform:rotate(-45deg);\n                -webkit-transform-origin:0 100%;\n                -moz-transform-origin:0 100%;\n                -ms-transform-origin:0 100%;\n                -o-transform-origin:0 100%;\n                transform-origin:0 100%;\n            }\n            .heart:after {\n                left:0;\n                -webkit-transform:rotate(45deg);\n                -moz-transform:rotate(45deg);\n                -ms-transform:rotate(45deg);\n                -o-transform:rotate(45deg);\n                transform:rotate(45deg);\n                -webkit-transform-origin:100% 100%;\n                -moz-transform-origin:100% 100%;\n                -ms-transform-origin:100% 100%;\n                -o-transform-origin:100% 100%;\n                transform-origin:100% 100%;\n            }\n            .infinity {\n                position:relative;\n                width:212px;\n                height:100px;\n            }\n            .infinity:before,.infinity:after {\n                content:\"\";\n                position:absolute;\n                top:0;\n                left:0;\n                width:60px;\n                height:60px;\n                border:20px solid #F3C;\n                -moz-border-radius:50px 50px 0 50px;\n                border-radius:50px 50px 0 50px;\n                -webkit-transform:rotate(-45deg);\n                -moz-transform:rotate(-45deg);\n                -ms-transform:rotate(-45deg);\n                -o-transform:rotate(-45deg);\n                transform:rotate(-45deg);\n            }\n            .infinity:after {\n                left:auto;\n                right:0;\n                -moz-border-radius:50px 50px 50px 0;\n                border-radius:50px 50px 50px 0;\n                -webkit-transform:rotate(45deg);\n                -moz-transform:rotate(45deg);\n                -ms-transform:rotate(45deg);\n                -o-transform:rotate(45deg);\n                transform:rotate(45deg);\n            }\n            .pacman {\n                width:0px;\n                height:0px;\n                border-right:60px solid transparent;\n                border-top:60px solid #FC0;\n                border-left:60px solid #FC0;\n                border-bottom:60px solid #FC0;\n                border-top-left-radius:60px;\n                border-top-right-radius:60px;\n                border-bottom-left-radius:60px;\n                border-bottom-right-radius:60px;\n            }\n            .yin-yang {\n                width:96px;\n                height:48px;\n                background:#fff;\n                border-color:#000;\n                border-style:solid;\n                border-width:2px 2px 50px 2px;\n                border-radius:100%;\n                position:relative;\n            }\n            .yin-yang:before {\n                content:\"\";\n                position:absolute;\n                top:50%;\n                left:0;\n                background:#fff;\n                border:18px solid #000;\n                border-radius:100%;\n                width:12px;\n                height:12px;\n            }\n            .yin-yang:after {\n                content:\"\";\n                position:absolute;\n                top:50%;\n                left:50%;\n                background:#000;\n                border:18px solid #fff;\n                border-radius:100%;\n                width:12px;\n                height:12px;\n            }\n\n    </style>\n    </head>\n    <body>\n        <div class=\"wrap\" style=\"top:30px; left:40px;\">\n            <div class=\"arrow\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:20px; left:100px;\">\n            <div class=\"star-six\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:20px; left:200px;\">\n            <div class=\"star-five\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:20px; left:400px;\">\n            <div class=\"heart\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:220px; left:100px;\">\n            <div class=\"infinity\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:220px; left:400px;\">\n            <div class=\"pacman\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:340px; left:200px;\">\n            <div class=\"yin-yang\"></div>\n        </div>\n    </body>\n    </html>  \n\n\n\n\n","source":"_posts/css绘图，实现一些特殊形状.md","raw":"\n---\ntitle: CSS绘图，实现一些特殊形状\nkeywords: CSS绘图 特殊形状 神奇\ntags: CSS\ncategories: skill\ndate: 2017-02-12\n---\n\n这是一件神奇的事，不信？\n\n贴代码试试...\n\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n        <meta name=\"keywords\" content=\"前端开发,CSS,HTML,XHTML,JS\"/>\n        <meta name=\"description\" content=\"专注前端技术博客\"/>\n        <title>WEB前端开发 | 闪亮于WEB前端的彩虹</title>\n        <title>测试</title>\n        <style type=\"text/css\">\n            - {\n                margin:0;\n                padding:0;\n                border:0;\n            }\n            .wrap {\n                position:absolute;\n            }\n            .arrow {\n                position:relative;\n                width:0;\n                height:0;\n                border-top:9px solid transparent;\n                border-right:9px solid #000;\n                -webkit-transform:rotate(10deg);\n                -moz-transform:rotate(10deg);\n                -ms-transform:rotate(10deg);\n                -o-transform:rotate(10deg);\n            }\n            .arrow:after {\n                content:\"\";\n                position:absolute;\n                border:0 solid transparent;\n                border-top:3px solid #000;\n                border-radius:20px 0 0 0;\n                top:-12px;\n                left:-9px;\n                width:12px;\n                height:12px;\n                -webkit-transform:rotate(45deg);\n                -moz-transform:rotate(45deg);\n                -ms-transform:rotate(45deg);\n                -o-transform:rotate(45deg);\n            }\n            .star-six {\n                width:0;\n                height:0;\n                border-left:50px solid transparent;\n                border-right:50px solid transparent;\n                border-bottom:100px solid #9C3;\n                position:relative;\n            }\n            .star-six:after {\n                width:0;\n                height:0;\n                border-left:50px solid transparent;\n                border-right:50px solid transparent;\n                border-top:100px solid #9C3;\n                position:absolute;\n                content:\"\";\n                top:30px;\n                left:-50px;\n            }\n            .star-five {\n                margin:50px 0;\n                position:relative;\n                display:block;\n                color:#06C;\n                width:0px;\n                height:0px;\n                border-right:100px solid transparent;\n                border-bottom:70px solid #06C;\n                border-left:100px solid transparent;\n                -moz-transform:rotate(35deg);\n                -webkit-transform:rotate(35deg);\n                -ms-transform:rotate(35deg);\n                -o-transform:rotate(35deg);\n            }\n            .star-five:before {\n                border-bottom:80px solid #06C;\n                border-left:30px solid transparent;\n                border-right:30px solid transparent;\n                position:absolute;\n                height:0;\n                width:0;\n                top:-45px;\n                left:-65px;\n                display:block;\n                content:'';\n                -webkit-transform:rotate(-35deg);\n                -moz-transform:rotate(-35deg);\n                -ms-transform:rotate(-35deg);\n                -o-transform:rotate(-35deg);\n            }\n            .star-five:after {\n                position:absolute;\n                display:block;\n                color:#06C;\n                top:3px;\n                left:-105px;\n                width:0px;\n                height:0px;\n                border-right:100px solid transparent;\n                border-bottom:70px solid #06C;\n                border-left:100px solid transparent;\n                -webkit-transform:rotate(-70deg);\n                -moz-transform:rotate(-70deg);\n                -ms-transform:rotate(-70deg);\n                -o-transform:rotate(-70deg);\n                content:'';\n            }\n            .heart {\n                position:relative;\n                width:100px;\n                height:90px;\n            }\n            .heart:before,.heart:after {\n                position:absolute;\n                content:\"\";\n                left:50px;\n                top:0;\n                width:50px;\n                height:80px;\n                background:red;\n                -moz-border-radius:50px 50px 0 0;\n                border-radius:50px 50px 0 0;\n                -webkit-transform:rotate(-45deg);\n                -moz-transform:rotate(-45deg);\n                -ms-transform:rotate(-45deg);\n                -o-transform:rotate(-45deg);\n                transform:rotate(-45deg);\n                -webkit-transform-origin:0 100%;\n                -moz-transform-origin:0 100%;\n                -ms-transform-origin:0 100%;\n                -o-transform-origin:0 100%;\n                transform-origin:0 100%;\n            }\n            .heart:after {\n                left:0;\n                -webkit-transform:rotate(45deg);\n                -moz-transform:rotate(45deg);\n                -ms-transform:rotate(45deg);\n                -o-transform:rotate(45deg);\n                transform:rotate(45deg);\n                -webkit-transform-origin:100% 100%;\n                -moz-transform-origin:100% 100%;\n                -ms-transform-origin:100% 100%;\n                -o-transform-origin:100% 100%;\n                transform-origin:100% 100%;\n            }\n            .infinity {\n                position:relative;\n                width:212px;\n                height:100px;\n            }\n            .infinity:before,.infinity:after {\n                content:\"\";\n                position:absolute;\n                top:0;\n                left:0;\n                width:60px;\n                height:60px;\n                border:20px solid #F3C;\n                -moz-border-radius:50px 50px 0 50px;\n                border-radius:50px 50px 0 50px;\n                -webkit-transform:rotate(-45deg);\n                -moz-transform:rotate(-45deg);\n                -ms-transform:rotate(-45deg);\n                -o-transform:rotate(-45deg);\n                transform:rotate(-45deg);\n            }\n            .infinity:after {\n                left:auto;\n                right:0;\n                -moz-border-radius:50px 50px 50px 0;\n                border-radius:50px 50px 50px 0;\n                -webkit-transform:rotate(45deg);\n                -moz-transform:rotate(45deg);\n                -ms-transform:rotate(45deg);\n                -o-transform:rotate(45deg);\n                transform:rotate(45deg);\n            }\n            .pacman {\n                width:0px;\n                height:0px;\n                border-right:60px solid transparent;\n                border-top:60px solid #FC0;\n                border-left:60px solid #FC0;\n                border-bottom:60px solid #FC0;\n                border-top-left-radius:60px;\n                border-top-right-radius:60px;\n                border-bottom-left-radius:60px;\n                border-bottom-right-radius:60px;\n            }\n            .yin-yang {\n                width:96px;\n                height:48px;\n                background:#fff;\n                border-color:#000;\n                border-style:solid;\n                border-width:2px 2px 50px 2px;\n                border-radius:100%;\n                position:relative;\n            }\n            .yin-yang:before {\n                content:\"\";\n                position:absolute;\n                top:50%;\n                left:0;\n                background:#fff;\n                border:18px solid #000;\n                border-radius:100%;\n                width:12px;\n                height:12px;\n            }\n            .yin-yang:after {\n                content:\"\";\n                position:absolute;\n                top:50%;\n                left:50%;\n                background:#000;\n                border:18px solid #fff;\n                border-radius:100%;\n                width:12px;\n                height:12px;\n            }\n\n    </style>\n    </head>\n    <body>\n        <div class=\"wrap\" style=\"top:30px; left:40px;\">\n            <div class=\"arrow\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:20px; left:100px;\">\n            <div class=\"star-six\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:20px; left:200px;\">\n            <div class=\"star-five\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:20px; left:400px;\">\n            <div class=\"heart\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:220px; left:100px;\">\n            <div class=\"infinity\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:220px; left:400px;\">\n            <div class=\"pacman\"></div>\n        </div>\n        <div class=\"wrap\" style=\"top:340px; left:200px;\">\n            <div class=\"yin-yang\"></div>\n        </div>\n    </body>\n    </html>  \n\n\n\n\n","slug":"css绘图，实现一些特殊形状","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0xe00246atfrwkzs2ru","content":"<p>这是一件神奇的事，不信？</p>\n<p>贴代码试试…</p>\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;/&gt;\n    &lt;meta name=&quot;keywords&quot; content=&quot;前端开发,CSS,HTML,XHTML,JS&quot;/&gt;\n    &lt;meta name=&quot;description&quot; content=&quot;专注前端技术博客&quot;/&gt;\n    &lt;title&gt;WEB前端开发 | 闪亮于WEB前端的彩虹&lt;/title&gt;\n    &lt;title&gt;测试&lt;/title&gt;\n    &lt;style type=&quot;text/css&quot;&gt;\n        - {\n            margin:0;\n            padding:0;\n            border:0;\n        }\n        .wrap {\n            position:absolute;\n        }\n        .arrow {\n            position:relative;\n            width:0;\n            height:0;\n            border-top:9px solid transparent;\n            border-right:9px solid #000;\n            -webkit-transform:rotate(10deg);\n            -moz-transform:rotate(10deg);\n            -ms-transform:rotate(10deg);\n            -o-transform:rotate(10deg);\n        }\n        .arrow:after {\n            content:&quot;&quot;;\n            position:absolute;\n            border:0 solid transparent;\n            border-top:3px solid #000;\n            border-radius:20px 0 0 0;\n            top:-12px;\n            left:-9px;\n            width:12px;\n            height:12px;\n            -webkit-transform:rotate(45deg);\n            -moz-transform:rotate(45deg);\n            -ms-transform:rotate(45deg);\n            -o-transform:rotate(45deg);\n        }\n        .star-six {\n            width:0;\n            height:0;\n            border-left:50px solid transparent;\n            border-right:50px solid transparent;\n            border-bottom:100px solid #9C3;\n            position:relative;\n        }\n        .star-six:after {\n            width:0;\n            height:0;\n            border-left:50px solid transparent;\n            border-right:50px solid transparent;\n            border-top:100px solid #9C3;\n            position:absolute;\n            content:&quot;&quot;;\n            top:30px;\n            left:-50px;\n        }\n        .star-five {\n            margin:50px 0;\n            position:relative;\n            display:block;\n            color:#06C;\n            width:0px;\n            height:0px;\n            border-right:100px solid transparent;\n            border-bottom:70px solid #06C;\n            border-left:100px solid transparent;\n            -moz-transform:rotate(35deg);\n            -webkit-transform:rotate(35deg);\n            -ms-transform:rotate(35deg);\n            -o-transform:rotate(35deg);\n        }\n        .star-five:before {\n            border-bottom:80px solid #06C;\n            border-left:30px solid transparent;\n            border-right:30px solid transparent;\n            position:absolute;\n            height:0;\n            width:0;\n            top:-45px;\n            left:-65px;\n            display:block;\n            content:&apos;&apos;;\n            -webkit-transform:rotate(-35deg);\n            -moz-transform:rotate(-35deg);\n            -ms-transform:rotate(-35deg);\n            -o-transform:rotate(-35deg);\n        }\n        .star-five:after {\n            position:absolute;\n            display:block;\n            color:#06C;\n            top:3px;\n            left:-105px;\n            width:0px;\n            height:0px;\n            border-right:100px solid transparent;\n            border-bottom:70px solid #06C;\n            border-left:100px solid transparent;\n            -webkit-transform:rotate(-70deg);\n            -moz-transform:rotate(-70deg);\n            -ms-transform:rotate(-70deg);\n            -o-transform:rotate(-70deg);\n            content:&apos;&apos;;\n        }\n        .heart {\n            position:relative;\n            width:100px;\n            height:90px;\n        }\n        .heart:before,.heart:after {\n            position:absolute;\n            content:&quot;&quot;;\n            left:50px;\n            top:0;\n            width:50px;\n            height:80px;\n            background:red;\n            -moz-border-radius:50px 50px 0 0;\n            border-radius:50px 50px 0 0;\n            -webkit-transform:rotate(-45deg);\n            -moz-transform:rotate(-45deg);\n            -ms-transform:rotate(-45deg);\n            -o-transform:rotate(-45deg);\n            transform:rotate(-45deg);\n            -webkit-transform-origin:0 100%;\n            -moz-transform-origin:0 100%;\n            -ms-transform-origin:0 100%;\n            -o-transform-origin:0 100%;\n            transform-origin:0 100%;\n        }\n        .heart:after {\n            left:0;\n            -webkit-transform:rotate(45deg);\n            -moz-transform:rotate(45deg);\n            -ms-transform:rotate(45deg);\n            -o-transform:rotate(45deg);\n            transform:rotate(45deg);\n            -webkit-transform-origin:100% 100%;\n            -moz-transform-origin:100% 100%;\n            -ms-transform-origin:100% 100%;\n            -o-transform-origin:100% 100%;\n            transform-origin:100% 100%;\n        }\n        .infinity {\n            position:relative;\n            width:212px;\n            height:100px;\n        }\n        .infinity:before,.infinity:after {\n            content:&quot;&quot;;\n            position:absolute;\n            top:0;\n            left:0;\n            width:60px;\n            height:60px;\n            border:20px solid #F3C;\n            -moz-border-radius:50px 50px 0 50px;\n            border-radius:50px 50px 0 50px;\n            -webkit-transform:rotate(-45deg);\n            -moz-transform:rotate(-45deg);\n            -ms-transform:rotate(-45deg);\n            -o-transform:rotate(-45deg);\n            transform:rotate(-45deg);\n        }\n        .infinity:after {\n            left:auto;\n            right:0;\n            -moz-border-radius:50px 50px 50px 0;\n            border-radius:50px 50px 50px 0;\n            -webkit-transform:rotate(45deg);\n            -moz-transform:rotate(45deg);\n            -ms-transform:rotate(45deg);\n            -o-transform:rotate(45deg);\n            transform:rotate(45deg);\n        }\n        .pacman {\n            width:0px;\n            height:0px;\n            border-right:60px solid transparent;\n            border-top:60px solid #FC0;\n            border-left:60px solid #FC0;\n            border-bottom:60px solid #FC0;\n            border-top-left-radius:60px;\n            border-top-right-radius:60px;\n            border-bottom-left-radius:60px;\n            border-bottom-right-radius:60px;\n        }\n        .yin-yang {\n            width:96px;\n            height:48px;\n            background:#fff;\n            border-color:#000;\n            border-style:solid;\n            border-width:2px 2px 50px 2px;\n            border-radius:100%;\n            position:relative;\n        }\n        .yin-yang:before {\n            content:&quot;&quot;;\n            position:absolute;\n            top:50%;\n            left:0;\n            background:#fff;\n            border:18px solid #000;\n            border-radius:100%;\n            width:12px;\n            height:12px;\n        }\n        .yin-yang:after {\n            content:&quot;&quot;;\n            position:absolute;\n            top:50%;\n            left:50%;\n            background:#000;\n            border:18px solid #fff;\n            border-radius:100%;\n            width:12px;\n            height:12px;\n        }\n\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:30px; left:40px;&quot;&gt;\n        &lt;div class=&quot;arrow&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:20px; left:100px;&quot;&gt;\n        &lt;div class=&quot;star-six&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:20px; left:200px;&quot;&gt;\n        &lt;div class=&quot;star-five&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:20px; left:400px;&quot;&gt;\n        &lt;div class=&quot;heart&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:220px; left:100px;&quot;&gt;\n        &lt;div class=&quot;infinity&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:220px; left:400px;&quot;&gt;\n        &lt;div class=&quot;pacman&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:340px; left:200px;&quot;&gt;\n        &lt;div class=&quot;yin-yang&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;  \n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>这是一件神奇的事，不信？</p>\n<p>贴代码试试…</p>\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;/&gt;\n    &lt;meta name=&quot;keywords&quot; content=&quot;前端开发,CSS,HTML,XHTML,JS&quot;/&gt;\n    &lt;meta name=&quot;description&quot; content=&quot;专注前端技术博客&quot;/&gt;\n    &lt;title&gt;WEB前端开发 | 闪亮于WEB前端的彩虹&lt;/title&gt;\n    &lt;title&gt;测试&lt;/title&gt;\n    &lt;style type=&quot;text/css&quot;&gt;\n        - {\n            margin:0;\n            padding:0;\n            border:0;\n        }\n        .wrap {\n            position:absolute;\n        }\n        .arrow {\n            position:relative;\n            width:0;\n            height:0;\n            border-top:9px solid transparent;\n            border-right:9px solid #000;\n            -webkit-transform:rotate(10deg);\n            -moz-transform:rotate(10deg);\n            -ms-transform:rotate(10deg);\n            -o-transform:rotate(10deg);\n        }\n        .arrow:after {\n            content:&quot;&quot;;\n            position:absolute;\n            border:0 solid transparent;\n            border-top:3px solid #000;\n            border-radius:20px 0 0 0;\n            top:-12px;\n            left:-9px;\n            width:12px;\n            height:12px;\n            -webkit-transform:rotate(45deg);\n            -moz-transform:rotate(45deg);\n            -ms-transform:rotate(45deg);\n            -o-transform:rotate(45deg);\n        }\n        .star-six {\n            width:0;\n            height:0;\n            border-left:50px solid transparent;\n            border-right:50px solid transparent;\n            border-bottom:100px solid #9C3;\n            position:relative;\n        }\n        .star-six:after {\n            width:0;\n            height:0;\n            border-left:50px solid transparent;\n            border-right:50px solid transparent;\n            border-top:100px solid #9C3;\n            position:absolute;\n            content:&quot;&quot;;\n            top:30px;\n            left:-50px;\n        }\n        .star-five {\n            margin:50px 0;\n            position:relative;\n            display:block;\n            color:#06C;\n            width:0px;\n            height:0px;\n            border-right:100px solid transparent;\n            border-bottom:70px solid #06C;\n            border-left:100px solid transparent;\n            -moz-transform:rotate(35deg);\n            -webkit-transform:rotate(35deg);\n            -ms-transform:rotate(35deg);\n            -o-transform:rotate(35deg);\n        }\n        .star-five:before {\n            border-bottom:80px solid #06C;\n            border-left:30px solid transparent;\n            border-right:30px solid transparent;\n            position:absolute;\n            height:0;\n            width:0;\n            top:-45px;\n            left:-65px;\n            display:block;\n            content:&apos;&apos;;\n            -webkit-transform:rotate(-35deg);\n            -moz-transform:rotate(-35deg);\n            -ms-transform:rotate(-35deg);\n            -o-transform:rotate(-35deg);\n        }\n        .star-five:after {\n            position:absolute;\n            display:block;\n            color:#06C;\n            top:3px;\n            left:-105px;\n            width:0px;\n            height:0px;\n            border-right:100px solid transparent;\n            border-bottom:70px solid #06C;\n            border-left:100px solid transparent;\n            -webkit-transform:rotate(-70deg);\n            -moz-transform:rotate(-70deg);\n            -ms-transform:rotate(-70deg);\n            -o-transform:rotate(-70deg);\n            content:&apos;&apos;;\n        }\n        .heart {\n            position:relative;\n            width:100px;\n            height:90px;\n        }\n        .heart:before,.heart:after {\n            position:absolute;\n            content:&quot;&quot;;\n            left:50px;\n            top:0;\n            width:50px;\n            height:80px;\n            background:red;\n            -moz-border-radius:50px 50px 0 0;\n            border-radius:50px 50px 0 0;\n            -webkit-transform:rotate(-45deg);\n            -moz-transform:rotate(-45deg);\n            -ms-transform:rotate(-45deg);\n            -o-transform:rotate(-45deg);\n            transform:rotate(-45deg);\n            -webkit-transform-origin:0 100%;\n            -moz-transform-origin:0 100%;\n            -ms-transform-origin:0 100%;\n            -o-transform-origin:0 100%;\n            transform-origin:0 100%;\n        }\n        .heart:after {\n            left:0;\n            -webkit-transform:rotate(45deg);\n            -moz-transform:rotate(45deg);\n            -ms-transform:rotate(45deg);\n            -o-transform:rotate(45deg);\n            transform:rotate(45deg);\n            -webkit-transform-origin:100% 100%;\n            -moz-transform-origin:100% 100%;\n            -ms-transform-origin:100% 100%;\n            -o-transform-origin:100% 100%;\n            transform-origin:100% 100%;\n        }\n        .infinity {\n            position:relative;\n            width:212px;\n            height:100px;\n        }\n        .infinity:before,.infinity:after {\n            content:&quot;&quot;;\n            position:absolute;\n            top:0;\n            left:0;\n            width:60px;\n            height:60px;\n            border:20px solid #F3C;\n            -moz-border-radius:50px 50px 0 50px;\n            border-radius:50px 50px 0 50px;\n            -webkit-transform:rotate(-45deg);\n            -moz-transform:rotate(-45deg);\n            -ms-transform:rotate(-45deg);\n            -o-transform:rotate(-45deg);\n            transform:rotate(-45deg);\n        }\n        .infinity:after {\n            left:auto;\n            right:0;\n            -moz-border-radius:50px 50px 50px 0;\n            border-radius:50px 50px 50px 0;\n            -webkit-transform:rotate(45deg);\n            -moz-transform:rotate(45deg);\n            -ms-transform:rotate(45deg);\n            -o-transform:rotate(45deg);\n            transform:rotate(45deg);\n        }\n        .pacman {\n            width:0px;\n            height:0px;\n            border-right:60px solid transparent;\n            border-top:60px solid #FC0;\n            border-left:60px solid #FC0;\n            border-bottom:60px solid #FC0;\n            border-top-left-radius:60px;\n            border-top-right-radius:60px;\n            border-bottom-left-radius:60px;\n            border-bottom-right-radius:60px;\n        }\n        .yin-yang {\n            width:96px;\n            height:48px;\n            background:#fff;\n            border-color:#000;\n            border-style:solid;\n            border-width:2px 2px 50px 2px;\n            border-radius:100%;\n            position:relative;\n        }\n        .yin-yang:before {\n            content:&quot;&quot;;\n            position:absolute;\n            top:50%;\n            left:0;\n            background:#fff;\n            border:18px solid #000;\n            border-radius:100%;\n            width:12px;\n            height:12px;\n        }\n        .yin-yang:after {\n            content:&quot;&quot;;\n            position:absolute;\n            top:50%;\n            left:50%;\n            background:#000;\n            border:18px solid #fff;\n            border-radius:100%;\n            width:12px;\n            height:12px;\n        }\n\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:30px; left:40px;&quot;&gt;\n        &lt;div class=&quot;arrow&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:20px; left:100px;&quot;&gt;\n        &lt;div class=&quot;star-six&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:20px; left:200px;&quot;&gt;\n        &lt;div class=&quot;star-five&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:20px; left:400px;&quot;&gt;\n        &lt;div class=&quot;heart&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:220px; left:100px;&quot;&gt;\n        &lt;div class=&quot;infinity&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:220px; left:400px;&quot;&gt;\n        &lt;div class=&quot;pacman&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;wrap&quot; style=&quot;top:340px; left:200px;&quot;&gt;\n        &lt;div class=&quot;yin-yang&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;  \n</code></pre>"},{"title":"Js获取日期：前天、昨天、今天、明天、后天","keywords":"Js 获取日期","date":"2017-09-29T16:00:00.000Z","_content":"想不想用最简短的js代码就能获取日期：前天、昨天、今天、明天、后天\n\n废话不多说，代码说话：\n<!--more -->\n\n    <html>\n    <head >\n        <meta charset=\"UTF-8\">\n        <title>js获取日期：前天、昨天、今天、明天、后天 - Liehuo.Net</title>\n    </head>\n    <body>\n    <script language=\"JavaScript\" type=\"text/javascript\">\n        function GetDateStr(AddDayCount) {\n            var dd = new Date();\n            dd.setDate(dd.getDate()+AddDayCount);//获取AddDayCount天后的日期\n            var y = dd.getFullYear();\n            var m = dd.getMonth()+1;//获取当前月份的日期\n            var d = dd.getDate();\n            if (m < 10) m = \"0\" + m;\n            if (d < 10) d = \"0\" + d;\n            return y+\"-\"+m+\"-\"+d;\n        }\n        document.write(\"前天：\"+GetDateStr(-2));\n        document.write(\"<br />昨天：\"+GetDateStr(-1));\n        document.write(\"<br />今天：\"+GetDateStr(0));\n        document.write(\"<br />明天：\"+GetDateStr(1));\n        document.write(\"<br />后天：\"+GetDateStr(2));\n        document.write(\"<br />大后天：\"+GetDateStr(3));\n    </script>\n    </body>\n    </html>\n","source":"_posts/js获取日期：前天、昨天、今天、明天、后天.md","raw":"---\ntitle: Js获取日期：前天、昨天、今天、明天、后天\nkeywords: Js 获取日期\ntags: \n- 日期\n- Js\ncategories: skill\ndate: 2017-09-30\n---\n想不想用最简短的js代码就能获取日期：前天、昨天、今天、明天、后天\n\n废话不多说，代码说话：\n<!--more -->\n\n    <html>\n    <head >\n        <meta charset=\"UTF-8\">\n        <title>js获取日期：前天、昨天、今天、明天、后天 - Liehuo.Net</title>\n    </head>\n    <body>\n    <script language=\"JavaScript\" type=\"text/javascript\">\n        function GetDateStr(AddDayCount) {\n            var dd = new Date();\n            dd.setDate(dd.getDate()+AddDayCount);//获取AddDayCount天后的日期\n            var y = dd.getFullYear();\n            var m = dd.getMonth()+1;//获取当前月份的日期\n            var d = dd.getDate();\n            if (m < 10) m = \"0\" + m;\n            if (d < 10) d = \"0\" + d;\n            return y+\"-\"+m+\"-\"+d;\n        }\n        document.write(\"前天：\"+GetDateStr(-2));\n        document.write(\"<br />昨天：\"+GetDateStr(-1));\n        document.write(\"<br />今天：\"+GetDateStr(0));\n        document.write(\"<br />明天：\"+GetDateStr(1));\n        document.write(\"<br />后天：\"+GetDateStr(2));\n        document.write(\"<br />大后天：\"+GetDateStr(3));\n    </script>\n    </body>\n    </html>\n","slug":"js获取日期：前天、昨天、今天、明天、后天","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0xh00296atf90te9fdm","content":"<p>想不想用最简短的js代码就能获取日期：前天、昨天、今天、明天、后天</p>\n<p>废话不多说，代码说话：<br><a id=\"more\"></a></p>\n<pre><code>&lt;html&gt;\n&lt;head &gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;js获取日期：前天、昨天、今天、明天、后天 - Liehuo.Net&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;script language=&quot;JavaScript&quot; type=&quot;text/javascript&quot;&gt;\n    function GetDateStr(AddDayCount) {\n        var dd = new Date();\n        dd.setDate(dd.getDate()+AddDayCount);//获取AddDayCount天后的日期\n        var y = dd.getFullYear();\n        var m = dd.getMonth()+1;//获取当前月份的日期\n        var d = dd.getDate();\n        if (m &lt; 10) m = &quot;0&quot; + m;\n        if (d &lt; 10) d = &quot;0&quot; + d;\n        return y+&quot;-&quot;+m+&quot;-&quot;+d;\n    }\n    document.write(&quot;前天：&quot;+GetDateStr(-2));\n    document.write(&quot;&lt;br /&gt;昨天：&quot;+GetDateStr(-1));\n    document.write(&quot;&lt;br /&gt;今天：&quot;+GetDateStr(0));\n    document.write(&quot;&lt;br /&gt;明天：&quot;+GetDateStr(1));\n    document.write(&quot;&lt;br /&gt;后天：&quot;+GetDateStr(2));\n    document.write(&quot;&lt;br /&gt;大后天：&quot;+GetDateStr(3));\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>","site":{"data":{}},"excerpt":"<p>想不想用最简短的js代码就能获取日期：前天、昨天、今天、明天、后天</p>\n<p>废话不多说，代码说话：<br>","more":"</p>\n<pre><code>&lt;html&gt;\n&lt;head &gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;js获取日期：前天、昨天、今天、明天、后天 - Liehuo.Net&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;script language=&quot;JavaScript&quot; type=&quot;text/javascript&quot;&gt;\n    function GetDateStr(AddDayCount) {\n        var dd = new Date();\n        dd.setDate(dd.getDate()+AddDayCount);//获取AddDayCount天后的日期\n        var y = dd.getFullYear();\n        var m = dd.getMonth()+1;//获取当前月份的日期\n        var d = dd.getDate();\n        if (m &lt; 10) m = &quot;0&quot; + m;\n        if (d &lt; 10) d = &quot;0&quot; + d;\n        return y+&quot;-&quot;+m+&quot;-&quot;+d;\n    }\n    document.write(&quot;前天：&quot;+GetDateStr(-2));\n    document.write(&quot;&lt;br /&gt;昨天：&quot;+GetDateStr(-1));\n    document.write(&quot;&lt;br /&gt;今天：&quot;+GetDateStr(0));\n    document.write(&quot;&lt;br /&gt;明天：&quot;+GetDateStr(1));\n    document.write(&quot;&lt;br /&gt;后天：&quot;+GetDateStr(2));\n    document.write(&quot;&lt;br /&gt;大后天：&quot;+GetDateStr(3));\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"title":"Node.js 6.9.5文档","date":"2017-08-10T16:00:00.000Z","_content":"\n# 关于本文档\n\n本文档的目的是全面地讲解`Node.js`的`API`，既从参考角度也从概念角度。每个章节介绍一个内置模块或高级概念。必要时，属性类型、方法参数、以及传给事件句柄的参数会在主题 标题下的列表中详细说明。每个`.html`文档都有一个对应的`.json`文档，以结构化的方式呈现相同的内容。这个特性 是试验的，用于帮助那些需要为编程提供文档的IDE或其他开发工具。\n\n## 稳定性指数\n\n贯穿整个文档，你会看到每个章节的稳定性标志。在`Node.js`的`API`仍会有少量变化，但随着发展，部分`API`会更稳定可靠。有些`API`历经考验、且被大量依赖，它们几乎不会再改变。也有些API是新增的、或试验的、或被认定为有风险且正在重新设计中的。\n\n稳定性指标如下：\n\n\t稳定性：0 - 废弃的\n\t这个特性被认定为存在问题，且正计划修改。\n\t不要依赖该特性。\n\t使用该特性可能会产生警告信息。\n\t不要指望该特性会向后兼容。\n\n\t稳定性：1 - 试验的\n\t这个特性可能会变化，在命令行中会有标记提示。\n\t在将来的版本中该特性可能会变化或移除。\n\n\t稳定性：2 - 稳定的\n\t这个特性已被证明是符合要求的。\n\t与npm生态系统的兼容性是一个高级优先级，除非绝对必要否则不会变化。\n\n\t稳定性：3 - 锁定的\n\t这个特性只接受与安全性、性能、或BUG修复有关的修改。\n\t请不要在该特性提出修改API的建议，这些建议会被拒绝。\n\n## JSON输出\n\n\t稳定性：1 - 试验的\n\n每个通过`Markdown`生成的`HTML`文件都有一个对应的具有相同数据的`JSON`文件。\n这个特性是Node.js v0.6.12 新增的。该特性是试验的\n\n## 系统调用与帮助文档\n\n系统调用定义了用户程序和底层操作系统之间的接口，例如`open(2)`、`read(2)`。`Node`函数只是简单地包装了系统调用，例如`fs.open()`。与之对应的帮助文档描述了系统调用的工作方式。\n\n**警告：**有些系统调用是`BSD`系统特有的。例如`lchown(2)`。这意味着`fs.chown()`只适用于`Mac OS X`和其他的`BSD`衍生系统，在`Linus`上不行\n\n大部分`Unix`的系统调用都有对应的`Windows`版本，但`Windows`版本运行起来可能与`Linus`和`OS X`的有些差异。有些`Unix`系统调用无法在`Windows`中找到对应的操作语义，祥见[议题4760](#议题4760)\n\n# 用法\n\n`node [options] [v8 options] [script.js | -e \"script\"] [arguments]`\n使用`Node.js`运行脚本的各种参数与方法，请查看[命令行参数](#命令行参数)文档。\n\n## 例子\n\n例子，使用`Node.js`编写的`Web`服务器，响应返回`'Hello World'`：\n\n```js\nconst http = require('http');\nconst hostname = '127.0.0.1';\nconst port = 3000;\nconst server = http.createServer((req,res) =>{\n\tres.statusCode =200;\n\tres.setHeader('Content-Type','text/plain');\n\tres.end('Hello World!\\n');\n});\nserver.listen(port,hostname,() =>{\n\tconsole.log(`Server running at http://${hostname}:${port}/`);\n});\n```\n\n要运行这个服务器，需要将代码保存到名为`example.js`的文件，并使用`Node.js`来执行：\n\n\t$ node example.js\n\tServer running at http://127.0.0.1:3000/\n\n文档中所有的例子都可以用相同的方式运行。\n\n# assert（断言）\n\n\t稳定性：3 - 锁定的\n\n`assert`模块提供了一组简单的断言测试集合，用于测试不变量。该模块是供`Node.js`内部使用，但可以通过`require('assert')`在代码中使用。`assert`不是一个测试框架，也无意成为通用的断言库。\n`assert`模块的`API`是[锁定的](#稳定性指数)。这意味着将不会新增或更改任何由该模块实现与公开的方法。\n\n## assert(value[,message])\n\n新增于：v0.5.9 \n\n[assert.ok()](#assert-ok-value-message) 的别名。\n\n```js\nconst assert = require('assert');\nassert(true);\n//通过\nassert(1);\n//通过\nassert(false);\n//抛出 \"AssertionError: false == true\"\nassert(0);\n//抛出 \"AssertionError: 0 == true\"\nassert(false,'it\\'s false');\n//抛出 \"AssertionError: it's false\"\n```\n\n## assert.deepEqual(actual,expected[,message])\n\n新增于：v0.1.21\n\n测试`actual`和`expected`参数是否深度相等。原始值会使用相等运算符（`==`）进行比较。\n\n只比较可枚举的自身属性。`deepEqual()`不测试对象的原型、连接符、或不可枚举的属性。这会引起一些潜在的意料之外的结果。例如，下面的例子不会抛出`AssertionError`，因为`Error`对象的属性是不可枚举的：\n\n```js\n//注意：这不会抛出AssertionError!\nassert.deepEqual(Error('a'),Error('b'));\n```\n\n深度相等意味着子对象的可枚举的自身属性也会被比较：\n\n```js\nconst assert = require('assert');\nconst obj1 = {\n\ta:{\n\t\tb:1\n\t}\n};\nconst obj2 = {\n\ta:{\n\t\tb:2\n\t}\n};\nconst obj3 = {\n\ta:{\n\t\tb:1\n\t}\n};\nconst obj4 =Object.create(obj1);\nassert.deepEqual(obj1,obj1);\n// 通过，对象与自身相等\nassert.deepEqual(obj1,obj2);\n// 抛出 AssertionError: { a:{b:1} } deepEqual { a:{b:2} }\n// b 的值不同\nassert.deepEqual(obj1,obj3);\n// 通过，两个对象相等\nassert.deepEqual(obj1,obj4);\n// 抛出 AssertionError: { a:{b:1} } deepEqual {}\n// 原型会被忽略\n```\n\n如果两个值不相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`参数为`undefined`，则输出默认的错误信息\n\n## assert.deepStrictEqual(actual,expected[,message])\n\n新增于：v1.2.0\n\n大多数情况下等同于`assert.deepEqual()`，但有两个例外。首先，原始值使用严格相等运算符（`===`）进行比较。其次，对象对比包括严格比较它们的原型。\n\n```js\nconst assert = require('assert');\nassert.deepEqual({a:1},{a:'1'});\n// 通过，因为 1=='1'\nassert.deepStrictEqual({a:1},{a:'1'});\n// 抛出 AssertionError: {a:1} deepStrictEqual {a:'1'}\n// 因为 1 !== '1' 使用严格相等运算符\n```\n\n如果两个值不相等，则抛出一个带有`message`属性的 `AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.doesNotThrow(block[,error][,message])\n\n新增于：v0.1.21\n\n断言`block`函数不会抛出错误。查看[assert.throws()](#assert-throws-block-error-message) 了解更多。\n\n当调用`assert.doesNotThrow()`时，它会立即调用`block`函数。\n\n如果`block`函数抛出错误，并且错误类型与`error`参数指定的相同，则抛出`AssertionError`。如果错误类型不相同，或`error`参数是`undefined`，则错误回传给调用者。\n\n以下例子会抛出 `TypeError`，因为在断言中没有匹配的错误类型：\n\n```js\nassert.doesNotThrow( ()=> {\n  throw new TypeError('Wrong Value');\n  },\n  SyntaxError\n);\n```\n\n以下例子会抛出一个带有'Got unwanted exception(TypeError)..'信息的`AssertionError`：\n\n```js\nassert.doesNotThrow( ()=> {\n  throw new TypeError('Wrong Value');\n  },\n  TypeError\n);\n```\n如果抛出了`AssertionError`，并且有为`message`参数传值，则`message`的值会被追加到`AssertionError`的消息中：\n\n```js\nassert.doesNotThrow( ()=> {\n  throw new TypeError('Wrong Value');\n  },\n  TypeError,\n  'Whoops'\n);\n// 抛出 AssertionError: Got unwanted exception(TypeError). Whoops\n```\n\n## assert.equal(actual,expected[,message])\n\n新增于：v0.1.21\n\n使用相等运算符（`==`）来测试`actual`和`expected`参数是否相等。\n\n```js\nconst assert = require('assert');\nassert.equal(1,1);\n// 通过，1==1\nassert.equal(1,'1');\n// 通过，1=='1'\nassert.equal(1,2);\n// 抛出 AssertionError: 1==2\nassert.equal({a:{b:1}},{a:{b:1}});\n// 抛出 AssertionError: {a:{b:1}} == {a:{b:1}}\n```\n\n如果两个值不相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.fail(actual,expected,message,operator)\n\n新增于：v0.1.21\n\n抛出`AssertionError`。如果`message`的值不为真，则错误信息为`actual`和`expected`的值，并且`operator`分隔。否则，错误信息为`message`的值。\n\n```js\nconst assert = require('assert');\nassert.fail(1,2,undefined,'>');\n// 抛出 AssertionError:1>2\nassert.fail(1,2,'whoops','2');\n// 抛出 AssertionError: whoops\n```\n\n## assert.ifError(value)\n\n新增于：v0.1.97\n\n如果`value`的值为真，抛出`value`。当测试回调函数的`error`参数时非常有用。\n\n```js\nconst assert = require('assert');\nassert.ifError(0);\n// 通过\nassert.ifError(1);\n// 抛出 1 \nassert.ifError('error');\n// 抛出 'error'\nassert.ifError(new Error());\n// 抛出 Error\n```\n\n## assert.notDeepEqual(actual,expected[,message])\n\n新增于：v0.1.21\n\n测试`actual`和`expected`参数是否深度相等。与[assert.deepEqual()](#assert-deepEqual-actual-expected-message)相反。\n\n```js\nconst assert = require('assert');\nconst obj1 = { a:{\n\tb:1 \n}};\nconst obj2 = { a:{\n\tb:2\n}};\nconst obj3 = { a:{\n\tb:1\n}};\nconst obj4 = Object.create(obj1);\nassert.notDeepEqual(obj1,obj1);\n// 抛出 AssertionError: {a:{b:1}} notDeepEqual {a:{b:1}}\nassert.notDeepEqual(obj1,obj2);\n// 通过，obj1 与 obj2 不深度相等\nassert.notDeepEqual(obj1,obj3);\n// 抛出 AssertionError: {a:{b:1} notDeepEqual {a:{b:1}}}\nassert.notDeepEqual(obj1,obj4);\n// 通过，obj1 与 obj4 不深度相等\n```\n如果两个值深度相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.notDeepStrictEqual(actual,expected[,message])\n\n新增于：v1.2.0\n\n测试`actual` 和`expected`参数是否不深度严格相等。与[assert.deepStrictEqual()](#assert-deepStrictEqual-actual-expected-message)相反。\n\n```js\nconst assert = require('assert');\nassert.notDeepEqual({a:1},{a:'1'});\n// 抛出 AssertionError: {a:1} notDeepEqual {a:'1'}\nassert.notDeepStrictEqual({a:1},{a:'1'});\n// 通过\n```\n\n如果两个值深度严格相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.notEqual(actual,expected[,message])\n\n新增于：v0.1.21\n\n使用不等运算符（`!=`）来测试`actual`和`expected`参数是否相等。\n\n```js\nconst assert = require('assert');\nassert.notEqual(1,2);\n// 通过 \nassert.notEuqal(1,1);\n// 抛出 AssertionError: 1 != 1\nassert.notEqual(1,'1');\n// 抛出 AssertionError: 1 != '1'\n```\n\n如果两个值相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.notStrictEqual(actual,expected[,message])\n\n新增于：v0.1.21\n\n使用严格不等运算符（`!==`）来测试`actual`和`expected`参数是否不严格相等。\n\n```js\nconst assert = require('assert');\nassert.notStrictEqual(1,2);\n// 通过 \nassert.notStrictEqual(1,1);\n// 抛出 AssertionError: 1 !== 1 \nassert.notStrictEqual(1,'1');\n// 通过\n```\n\n如果两个值严格相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.ok(value[,message])\n\n新增于：v0.1.21\n\n测试`value`是否为真值。相当于`assert.equal(!!value,true,message)`。 \n\n如果`value`不为真值，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n```js\nconst assert = require('assert');\nassert.ok(true);\n// 通过 \nassert.ok(1);\n// 通过 \nassert.ok(false);\n// 抛出 \"AssertionError: false == true\"\nassert.ok(0);\n// 抛出 \"AssertionError: 0 == true\"\nassert.ok(false,'it\\'s false');\n// 抛出 \"AssertionError: it's false\"\n```\n\n## assert.strictEqual(actual,expected[,message])\n\n新增于：v0.1.21\n\n使用严格相等运算符（`===`）测试是否严格相等。\n\n```js\nconst assert =require('assert');\nassert.strictEqual(1,2);\n// 抛出 AssertionError: 1===2\nassert.strictEqual(1,1);\n// 通过 \nassert.strictEqual(1,'1');\n// 抛出 AssertionError: 1==='1'\n```\n\n如果两个值不严格相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.throws(block[,error][,message])\n\n新增于：v0.1.21\n\n期望`block`函数抛出错误。 \n\n如果指定`error`，它可以是一个构造函数、正则表达式、或校验函数。\n\n如果指定`message`，当`block`函数抛出错误时，`message`会作为错误信息传给`AssertionError`。\n\n使用构造函数的例子：\n\n```js\nassert.throws( ()=> {\n\tthrow new Error('Wrong value');\n\t},\n\tError \n);\n```\n\n使用正则表达式的例子：\n\n```js\nassert.throws( ()=>{\n\tthrow new Error('Wrong value');\n\t},\n \t/value/\n);\n```\n\n使用自定义校验函数的例子：\n\n```js\nassert.throws( ()=> {\n  throw new Error('Wrong value');\n  },\n  function(err){\n    if( (err instanceof Error) && (/value/.test(err)) ){\n      return true;\n    }\n\n  },\n  'unexpected error'\n)\n```\n\n注意，`error`参数不能是字符串。如果第二个参数是字符串，则视为不传`error`参数，传入的字符串会被当作是`message`的值。这可能会引起误解：\n\n```js\n// 这是错误的！不要这么做\nassert.throws(myFunction,'missing foo','did not throw with expected message');\n// 应该这么做\nassert.throws(myFunction,/missing foo/,'did not throw with expected message');\n```\n# Buffer\n\n\t稳定性：2 - 稳定的\n\n在 `ECMAScript 2015 (ES6)` 引入 `TypedArray` 之前，`JavaScript` 语言没有读取或操作二进制数据流的机制。 `Buffer` 类被引入作为 `Node.js` `API` 的一部分，使其可以在 `TCP`流和文件系统操作等场景中处理二进制数据流。\n\n现在 `TypedArray` 已经被添加进 `ES6` 中，`Buffer`类以一种更优与更适合 `Node.js` 用例的方式实现了 `Uint8Array API`。\n\n`Buffer` 类的实例类似于整数数组，除了其是大小固定的、且在 `V8` 堆外分配物理内存。 `Buffer` 的大小在其创建时就已确定，且不能调整大小。\n\n`Buffer` 类在 `Node.js` 中是一个全局变量，因此无需 `require('buffer').Buffer`。\n\n例子：\n\n```js\n// 创建一个长度为 10、且用 0 填充的 Buffer。\nconst buf1 = Buffer.alloc(10);\n// 创建一个长度为 10、且用 0x1 填充的 Buffer。 \nconst buf2 = Buffer.alloc(10, 1);\n// 创建一个长度为 10、且未初始化的 Buffer。\n// 这个方法比调用 Buffer.alloc() 更快，\n// 但返回的 Buffer 实例可能包含旧数据，\n// 因此需要使用 fill() 或 write() 重写。\nconst buf3 = Buffer.allocUnsafe(10);\n// 创建一个包含 [0x1, 0x2, 0x3] 的 Buffer。\nconst buf4 = Buffer.from([1, 2, 3]);\n// 创建一个包含 ASCII 字节数组 [0x74, 0x65, 0x73, 0x74] 的 Buffer。\nconst buf5 = Buffer.from('test');\n// 创建一个包含 UTF-8 字节数组 [0x74, 0xc3, 0xa9, 0x73, 0x74] 的 Buffer。\nconst buf6 = Buffer.from('tést', 'utf8');\n```\n\n\n","source":"_posts/node.js6.9.5文档.md","raw":"---\ntitle: Node.js 6.9.5文档\ncategories: tool\ntags: \n- Node\n- Js\ndate: 2017-08-11\n---\n\n# 关于本文档\n\n本文档的目的是全面地讲解`Node.js`的`API`，既从参考角度也从概念角度。每个章节介绍一个内置模块或高级概念。必要时，属性类型、方法参数、以及传给事件句柄的参数会在主题 标题下的列表中详细说明。每个`.html`文档都有一个对应的`.json`文档，以结构化的方式呈现相同的内容。这个特性 是试验的，用于帮助那些需要为编程提供文档的IDE或其他开发工具。\n\n## 稳定性指数\n\n贯穿整个文档，你会看到每个章节的稳定性标志。在`Node.js`的`API`仍会有少量变化，但随着发展，部分`API`会更稳定可靠。有些`API`历经考验、且被大量依赖，它们几乎不会再改变。也有些API是新增的、或试验的、或被认定为有风险且正在重新设计中的。\n\n稳定性指标如下：\n\n\t稳定性：0 - 废弃的\n\t这个特性被认定为存在问题，且正计划修改。\n\t不要依赖该特性。\n\t使用该特性可能会产生警告信息。\n\t不要指望该特性会向后兼容。\n\n\t稳定性：1 - 试验的\n\t这个特性可能会变化，在命令行中会有标记提示。\n\t在将来的版本中该特性可能会变化或移除。\n\n\t稳定性：2 - 稳定的\n\t这个特性已被证明是符合要求的。\n\t与npm生态系统的兼容性是一个高级优先级，除非绝对必要否则不会变化。\n\n\t稳定性：3 - 锁定的\n\t这个特性只接受与安全性、性能、或BUG修复有关的修改。\n\t请不要在该特性提出修改API的建议，这些建议会被拒绝。\n\n## JSON输出\n\n\t稳定性：1 - 试验的\n\n每个通过`Markdown`生成的`HTML`文件都有一个对应的具有相同数据的`JSON`文件。\n这个特性是Node.js v0.6.12 新增的。该特性是试验的\n\n## 系统调用与帮助文档\n\n系统调用定义了用户程序和底层操作系统之间的接口，例如`open(2)`、`read(2)`。`Node`函数只是简单地包装了系统调用，例如`fs.open()`。与之对应的帮助文档描述了系统调用的工作方式。\n\n**警告：**有些系统调用是`BSD`系统特有的。例如`lchown(2)`。这意味着`fs.chown()`只适用于`Mac OS X`和其他的`BSD`衍生系统，在`Linus`上不行\n\n大部分`Unix`的系统调用都有对应的`Windows`版本，但`Windows`版本运行起来可能与`Linus`和`OS X`的有些差异。有些`Unix`系统调用无法在`Windows`中找到对应的操作语义，祥见[议题4760](#议题4760)\n\n# 用法\n\n`node [options] [v8 options] [script.js | -e \"script\"] [arguments]`\n使用`Node.js`运行脚本的各种参数与方法，请查看[命令行参数](#命令行参数)文档。\n\n## 例子\n\n例子，使用`Node.js`编写的`Web`服务器，响应返回`'Hello World'`：\n\n```js\nconst http = require('http');\nconst hostname = '127.0.0.1';\nconst port = 3000;\nconst server = http.createServer((req,res) =>{\n\tres.statusCode =200;\n\tres.setHeader('Content-Type','text/plain');\n\tres.end('Hello World!\\n');\n});\nserver.listen(port,hostname,() =>{\n\tconsole.log(`Server running at http://${hostname}:${port}/`);\n});\n```\n\n要运行这个服务器，需要将代码保存到名为`example.js`的文件，并使用`Node.js`来执行：\n\n\t$ node example.js\n\tServer running at http://127.0.0.1:3000/\n\n文档中所有的例子都可以用相同的方式运行。\n\n# assert（断言）\n\n\t稳定性：3 - 锁定的\n\n`assert`模块提供了一组简单的断言测试集合，用于测试不变量。该模块是供`Node.js`内部使用，但可以通过`require('assert')`在代码中使用。`assert`不是一个测试框架，也无意成为通用的断言库。\n`assert`模块的`API`是[锁定的](#稳定性指数)。这意味着将不会新增或更改任何由该模块实现与公开的方法。\n\n## assert(value[,message])\n\n新增于：v0.5.9 \n\n[assert.ok()](#assert-ok-value-message) 的别名。\n\n```js\nconst assert = require('assert');\nassert(true);\n//通过\nassert(1);\n//通过\nassert(false);\n//抛出 \"AssertionError: false == true\"\nassert(0);\n//抛出 \"AssertionError: 0 == true\"\nassert(false,'it\\'s false');\n//抛出 \"AssertionError: it's false\"\n```\n\n## assert.deepEqual(actual,expected[,message])\n\n新增于：v0.1.21\n\n测试`actual`和`expected`参数是否深度相等。原始值会使用相等运算符（`==`）进行比较。\n\n只比较可枚举的自身属性。`deepEqual()`不测试对象的原型、连接符、或不可枚举的属性。这会引起一些潜在的意料之外的结果。例如，下面的例子不会抛出`AssertionError`，因为`Error`对象的属性是不可枚举的：\n\n```js\n//注意：这不会抛出AssertionError!\nassert.deepEqual(Error('a'),Error('b'));\n```\n\n深度相等意味着子对象的可枚举的自身属性也会被比较：\n\n```js\nconst assert = require('assert');\nconst obj1 = {\n\ta:{\n\t\tb:1\n\t}\n};\nconst obj2 = {\n\ta:{\n\t\tb:2\n\t}\n};\nconst obj3 = {\n\ta:{\n\t\tb:1\n\t}\n};\nconst obj4 =Object.create(obj1);\nassert.deepEqual(obj1,obj1);\n// 通过，对象与自身相等\nassert.deepEqual(obj1,obj2);\n// 抛出 AssertionError: { a:{b:1} } deepEqual { a:{b:2} }\n// b 的值不同\nassert.deepEqual(obj1,obj3);\n// 通过，两个对象相等\nassert.deepEqual(obj1,obj4);\n// 抛出 AssertionError: { a:{b:1} } deepEqual {}\n// 原型会被忽略\n```\n\n如果两个值不相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`参数为`undefined`，则输出默认的错误信息\n\n## assert.deepStrictEqual(actual,expected[,message])\n\n新增于：v1.2.0\n\n大多数情况下等同于`assert.deepEqual()`，但有两个例外。首先，原始值使用严格相等运算符（`===`）进行比较。其次，对象对比包括严格比较它们的原型。\n\n```js\nconst assert = require('assert');\nassert.deepEqual({a:1},{a:'1'});\n// 通过，因为 1=='1'\nassert.deepStrictEqual({a:1},{a:'1'});\n// 抛出 AssertionError: {a:1} deepStrictEqual {a:'1'}\n// 因为 1 !== '1' 使用严格相等运算符\n```\n\n如果两个值不相等，则抛出一个带有`message`属性的 `AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.doesNotThrow(block[,error][,message])\n\n新增于：v0.1.21\n\n断言`block`函数不会抛出错误。查看[assert.throws()](#assert-throws-block-error-message) 了解更多。\n\n当调用`assert.doesNotThrow()`时，它会立即调用`block`函数。\n\n如果`block`函数抛出错误，并且错误类型与`error`参数指定的相同，则抛出`AssertionError`。如果错误类型不相同，或`error`参数是`undefined`，则错误回传给调用者。\n\n以下例子会抛出 `TypeError`，因为在断言中没有匹配的错误类型：\n\n```js\nassert.doesNotThrow( ()=> {\n  throw new TypeError('Wrong Value');\n  },\n  SyntaxError\n);\n```\n\n以下例子会抛出一个带有'Got unwanted exception(TypeError)..'信息的`AssertionError`：\n\n```js\nassert.doesNotThrow( ()=> {\n  throw new TypeError('Wrong Value');\n  },\n  TypeError\n);\n```\n如果抛出了`AssertionError`，并且有为`message`参数传值，则`message`的值会被追加到`AssertionError`的消息中：\n\n```js\nassert.doesNotThrow( ()=> {\n  throw new TypeError('Wrong Value');\n  },\n  TypeError,\n  'Whoops'\n);\n// 抛出 AssertionError: Got unwanted exception(TypeError). Whoops\n```\n\n## assert.equal(actual,expected[,message])\n\n新增于：v0.1.21\n\n使用相等运算符（`==`）来测试`actual`和`expected`参数是否相等。\n\n```js\nconst assert = require('assert');\nassert.equal(1,1);\n// 通过，1==1\nassert.equal(1,'1');\n// 通过，1=='1'\nassert.equal(1,2);\n// 抛出 AssertionError: 1==2\nassert.equal({a:{b:1}},{a:{b:1}});\n// 抛出 AssertionError: {a:{b:1}} == {a:{b:1}}\n```\n\n如果两个值不相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.fail(actual,expected,message,operator)\n\n新增于：v0.1.21\n\n抛出`AssertionError`。如果`message`的值不为真，则错误信息为`actual`和`expected`的值，并且`operator`分隔。否则，错误信息为`message`的值。\n\n```js\nconst assert = require('assert');\nassert.fail(1,2,undefined,'>');\n// 抛出 AssertionError:1>2\nassert.fail(1,2,'whoops','2');\n// 抛出 AssertionError: whoops\n```\n\n## assert.ifError(value)\n\n新增于：v0.1.97\n\n如果`value`的值为真，抛出`value`。当测试回调函数的`error`参数时非常有用。\n\n```js\nconst assert = require('assert');\nassert.ifError(0);\n// 通过\nassert.ifError(1);\n// 抛出 1 \nassert.ifError('error');\n// 抛出 'error'\nassert.ifError(new Error());\n// 抛出 Error\n```\n\n## assert.notDeepEqual(actual,expected[,message])\n\n新增于：v0.1.21\n\n测试`actual`和`expected`参数是否深度相等。与[assert.deepEqual()](#assert-deepEqual-actual-expected-message)相反。\n\n```js\nconst assert = require('assert');\nconst obj1 = { a:{\n\tb:1 \n}};\nconst obj2 = { a:{\n\tb:2\n}};\nconst obj3 = { a:{\n\tb:1\n}};\nconst obj4 = Object.create(obj1);\nassert.notDeepEqual(obj1,obj1);\n// 抛出 AssertionError: {a:{b:1}} notDeepEqual {a:{b:1}}\nassert.notDeepEqual(obj1,obj2);\n// 通过，obj1 与 obj2 不深度相等\nassert.notDeepEqual(obj1,obj3);\n// 抛出 AssertionError: {a:{b:1} notDeepEqual {a:{b:1}}}\nassert.notDeepEqual(obj1,obj4);\n// 通过，obj1 与 obj4 不深度相等\n```\n如果两个值深度相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.notDeepStrictEqual(actual,expected[,message])\n\n新增于：v1.2.0\n\n测试`actual` 和`expected`参数是否不深度严格相等。与[assert.deepStrictEqual()](#assert-deepStrictEqual-actual-expected-message)相反。\n\n```js\nconst assert = require('assert');\nassert.notDeepEqual({a:1},{a:'1'});\n// 抛出 AssertionError: {a:1} notDeepEqual {a:'1'}\nassert.notDeepStrictEqual({a:1},{a:'1'});\n// 通过\n```\n\n如果两个值深度严格相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.notEqual(actual,expected[,message])\n\n新增于：v0.1.21\n\n使用不等运算符（`!=`）来测试`actual`和`expected`参数是否相等。\n\n```js\nconst assert = require('assert');\nassert.notEqual(1,2);\n// 通过 \nassert.notEuqal(1,1);\n// 抛出 AssertionError: 1 != 1\nassert.notEqual(1,'1');\n// 抛出 AssertionError: 1 != '1'\n```\n\n如果两个值相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.notStrictEqual(actual,expected[,message])\n\n新增于：v0.1.21\n\n使用严格不等运算符（`!==`）来测试`actual`和`expected`参数是否不严格相等。\n\n```js\nconst assert = require('assert');\nassert.notStrictEqual(1,2);\n// 通过 \nassert.notStrictEqual(1,1);\n// 抛出 AssertionError: 1 !== 1 \nassert.notStrictEqual(1,'1');\n// 通过\n```\n\n如果两个值严格相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.ok(value[,message])\n\n新增于：v0.1.21\n\n测试`value`是否为真值。相当于`assert.equal(!!value,true,message)`。 \n\n如果`value`不为真值，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n```js\nconst assert = require('assert');\nassert.ok(true);\n// 通过 \nassert.ok(1);\n// 通过 \nassert.ok(false);\n// 抛出 \"AssertionError: false == true\"\nassert.ok(0);\n// 抛出 \"AssertionError: 0 == true\"\nassert.ok(false,'it\\'s false');\n// 抛出 \"AssertionError: it's false\"\n```\n\n## assert.strictEqual(actual,expected[,message])\n\n新增于：v0.1.21\n\n使用严格相等运算符（`===`）测试是否严格相等。\n\n```js\nconst assert =require('assert');\nassert.strictEqual(1,2);\n// 抛出 AssertionError: 1===2\nassert.strictEqual(1,1);\n// 通过 \nassert.strictEqual(1,'1');\n// 抛出 AssertionError: 1==='1'\n```\n\n如果两个值不严格相等，则抛出一个带有`message`属性的`AssertionError`，其中`message`属性的值等于传入的`message`参数的值。如果`message`参数为`undefined`，则输出默认的错误信息。\n\n## assert.throws(block[,error][,message])\n\n新增于：v0.1.21\n\n期望`block`函数抛出错误。 \n\n如果指定`error`，它可以是一个构造函数、正则表达式、或校验函数。\n\n如果指定`message`，当`block`函数抛出错误时，`message`会作为错误信息传给`AssertionError`。\n\n使用构造函数的例子：\n\n```js\nassert.throws( ()=> {\n\tthrow new Error('Wrong value');\n\t},\n\tError \n);\n```\n\n使用正则表达式的例子：\n\n```js\nassert.throws( ()=>{\n\tthrow new Error('Wrong value');\n\t},\n \t/value/\n);\n```\n\n使用自定义校验函数的例子：\n\n```js\nassert.throws( ()=> {\n  throw new Error('Wrong value');\n  },\n  function(err){\n    if( (err instanceof Error) && (/value/.test(err)) ){\n      return true;\n    }\n\n  },\n  'unexpected error'\n)\n```\n\n注意，`error`参数不能是字符串。如果第二个参数是字符串，则视为不传`error`参数，传入的字符串会被当作是`message`的值。这可能会引起误解：\n\n```js\n// 这是错误的！不要这么做\nassert.throws(myFunction,'missing foo','did not throw with expected message');\n// 应该这么做\nassert.throws(myFunction,/missing foo/,'did not throw with expected message');\n```\n# Buffer\n\n\t稳定性：2 - 稳定的\n\n在 `ECMAScript 2015 (ES6)` 引入 `TypedArray` 之前，`JavaScript` 语言没有读取或操作二进制数据流的机制。 `Buffer` 类被引入作为 `Node.js` `API` 的一部分，使其可以在 `TCP`流和文件系统操作等场景中处理二进制数据流。\n\n现在 `TypedArray` 已经被添加进 `ES6` 中，`Buffer`类以一种更优与更适合 `Node.js` 用例的方式实现了 `Uint8Array API`。\n\n`Buffer` 类的实例类似于整数数组，除了其是大小固定的、且在 `V8` 堆外分配物理内存。 `Buffer` 的大小在其创建时就已确定，且不能调整大小。\n\n`Buffer` 类在 `Node.js` 中是一个全局变量，因此无需 `require('buffer').Buffer`。\n\n例子：\n\n```js\n// 创建一个长度为 10、且用 0 填充的 Buffer。\nconst buf1 = Buffer.alloc(10);\n// 创建一个长度为 10、且用 0x1 填充的 Buffer。 \nconst buf2 = Buffer.alloc(10, 1);\n// 创建一个长度为 10、且未初始化的 Buffer。\n// 这个方法比调用 Buffer.alloc() 更快，\n// 但返回的 Buffer 实例可能包含旧数据，\n// 因此需要使用 fill() 或 write() 重写。\nconst buf3 = Buffer.allocUnsafe(10);\n// 创建一个包含 [0x1, 0x2, 0x3] 的 Buffer。\nconst buf4 = Buffer.from([1, 2, 3]);\n// 创建一个包含 ASCII 字节数组 [0x74, 0x65, 0x73, 0x74] 的 Buffer。\nconst buf5 = Buffer.from('test');\n// 创建一个包含 UTF-8 字节数组 [0x74, 0xc3, 0xa9, 0x73, 0x74] 的 Buffer。\nconst buf6 = Buffer.from('tést', 'utf8');\n```\n\n\n","slug":"node.js6.9.5文档","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0xl002c6atfse9yx1au","content":"<h1 id=\"关于本文档\"><a href=\"#关于本文档\" class=\"headerlink\" title=\"关于本文档\"></a>关于本文档</h1><p>本文档的目的是全面地讲解<code>Node.js</code>的<code>API</code>，既从参考角度也从概念角度。每个章节介绍一个内置模块或高级概念。必要时，属性类型、方法参数、以及传给事件句柄的参数会在主题 标题下的列表中详细说明。每个<code>.html</code>文档都有一个对应的<code>.json</code>文档，以结构化的方式呈现相同的内容。这个特性 是试验的，用于帮助那些需要为编程提供文档的IDE或其他开发工具。</p>\n<h2 id=\"稳定性指数\"><a href=\"#稳定性指数\" class=\"headerlink\" title=\"稳定性指数\"></a>稳定性指数</h2><p>贯穿整个文档，你会看到每个章节的稳定性标志。在<code>Node.js</code>的<code>API</code>仍会有少量变化，但随着发展，部分<code>API</code>会更稳定可靠。有些<code>API</code>历经考验、且被大量依赖，它们几乎不会再改变。也有些API是新增的、或试验的、或被认定为有风险且正在重新设计中的。</p>\n<p>稳定性指标如下：</p>\n<pre><code>稳定性：0 - 废弃的\n这个特性被认定为存在问题，且正计划修改。\n不要依赖该特性。\n使用该特性可能会产生警告信息。\n不要指望该特性会向后兼容。\n\n稳定性：1 - 试验的\n这个特性可能会变化，在命令行中会有标记提示。\n在将来的版本中该特性可能会变化或移除。\n\n稳定性：2 - 稳定的\n这个特性已被证明是符合要求的。\n与npm生态系统的兼容性是一个高级优先级，除非绝对必要否则不会变化。\n\n稳定性：3 - 锁定的\n这个特性只接受与安全性、性能、或BUG修复有关的修改。\n请不要在该特性提出修改API的建议，这些建议会被拒绝。\n</code></pre><h2 id=\"JSON输出\"><a href=\"#JSON输出\" class=\"headerlink\" title=\"JSON输出\"></a>JSON输出</h2><pre><code>稳定性：1 - 试验的\n</code></pre><p>每个通过<code>Markdown</code>生成的<code>HTML</code>文件都有一个对应的具有相同数据的<code>JSON</code>文件。<br>这个特性是Node.js v0.6.12 新增的。该特性是试验的</p>\n<h2 id=\"系统调用与帮助文档\"><a href=\"#系统调用与帮助文档\" class=\"headerlink\" title=\"系统调用与帮助文档\"></a>系统调用与帮助文档</h2><p>系统调用定义了用户程序和底层操作系统之间的接口，例如<code>open(2)</code>、<code>read(2)</code>。<code>Node</code>函数只是简单地包装了系统调用，例如<code>fs.open()</code>。与之对应的帮助文档描述了系统调用的工作方式。</p>\n<p><strong>警告：</strong>有些系统调用是<code>BSD</code>系统特有的。例如<code>lchown(2)</code>。这意味着<code>fs.chown()</code>只适用于<code>Mac OS X</code>和其他的<code>BSD</code>衍生系统，在<code>Linus</code>上不行</p>\n<p>大部分<code>Unix</code>的系统调用都有对应的<code>Windows</code>版本，但<code>Windows</code>版本运行起来可能与<code>Linus</code>和<code>OS X</code>的有些差异。有些<code>Unix</code>系统调用无法在<code>Windows</code>中找到对应的操作语义，祥见<a href=\"#议题4760\">议题4760</a></p>\n<h1 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h1><p><code>node [options] [v8 options] [script.js | -e &quot;script&quot;] [arguments]</code><br>使用<code>Node.js</code>运行脚本的各种参数与方法，请查看<a href=\"#命令行参数\">命令行参数</a>文档。</p>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><p>例子，使用<code>Node.js</code>编写的<code>Web</code>服务器，响应返回<code>&#39;Hello World&#39;</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> hostname = <span class=\"string\">'127.0.0.1'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> port = <span class=\"number\">3000</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> server = http.createServer(<span class=\"function\">(<span class=\"params\">req,res</span>) =&gt;</span>&#123;</span><br><span class=\"line\">\tres.statusCode =<span class=\"number\">200</span>;</span><br><span class=\"line\">\tres.setHeader(<span class=\"string\">'Content-Type'</span>,<span class=\"string\">'text/plain'</span>);</span><br><span class=\"line\">\tres.end(<span class=\"string\">'Hello World!\\n'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">server.listen(port,hostname,() =&gt;&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">`Server running at http://<span class=\"subst\">$&#123;hostname&#125;</span>:<span class=\"subst\">$&#123;port&#125;</span>/`</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>要运行这个服务器，需要将代码保存到名为<code>example.js</code>的文件，并使用<code>Node.js</code>来执行：</p>\n<pre><code>$ node example.js\nServer running at http://127.0.0.1:3000/\n</code></pre><p>文档中所有的例子都可以用相同的方式运行。</p>\n<h1 id=\"assert（断言）\"><a href=\"#assert（断言）\" class=\"headerlink\" title=\"assert（断言）\"></a>assert（断言）</h1><pre><code>稳定性：3 - 锁定的\n</code></pre><p><code>assert</code>模块提供了一组简单的断言测试集合，用于测试不变量。该模块是供<code>Node.js</code>内部使用，但可以通过<code>require(&#39;assert&#39;)</code>在代码中使用。<code>assert</code>不是一个测试框架，也无意成为通用的断言库。<br><code>assert</code>模块的<code>API</code>是<a href=\"#稳定性指数\">锁定的</a>。这意味着将不会新增或更改任何由该模块实现与公开的方法。</p>\n<h2 id=\"assert-value-message\"><a href=\"#assert-value-message\" class=\"headerlink\" title=\"assert(value[,message])\"></a>assert(value[,message])</h2><p>新增于：v0.5.9 </p>\n<p><a href=\"#assert-ok-value-message\">assert.ok()</a> 的别名。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert(<span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"comment\">//通过</span></span><br><span class=\"line\">assert(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">//通过</span></span><br><span class=\"line\">assert(<span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">//抛出 \"AssertionError: false == true\"</span></span><br><span class=\"line\">assert(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">//抛出 \"AssertionError: 0 == true\"</span></span><br><span class=\"line\">assert(<span class=\"literal\">false</span>,<span class=\"string\">'it\\'s false'</span>);</span><br><span class=\"line\"><span class=\"comment\">//抛出 \"AssertionError: it's false\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"assert-deepEqual-actual-expected-message\"><a href=\"#assert-deepEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.deepEqual(actual,expected[,message])\"></a>assert.deepEqual(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>测试<code>actual</code>和<code>expected</code>参数是否深度相等。原始值会使用相等运算符（<code>==</code>）进行比较。</p>\n<p>只比较可枚举的自身属性。<code>deepEqual()</code>不测试对象的原型、连接符、或不可枚举的属性。这会引起一些潜在的意料之外的结果。例如，下面的例子不会抛出<code>AssertionError</code>，因为<code>Error</code>对象的属性是不可枚举的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//注意：这不会抛出AssertionError!</span></span><br><span class=\"line\">assert.deepEqual(<span class=\"built_in\">Error</span>(<span class=\"string\">'a'</span>),<span class=\"built_in\">Error</span>(<span class=\"string\">'b'</span>));</span><br></pre></td></tr></table></figure>\n<p>深度相等意味着子对象的可枚举的自身属性也会被比较：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123;</span><br><span class=\"line\">\ta:&#123;</span><br><span class=\"line\">\t\tb:<span class=\"number\">1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj2 = &#123;</span><br><span class=\"line\">\ta:&#123;</span><br><span class=\"line\">\t\tb:<span class=\"number\">2</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj3 = &#123;</span><br><span class=\"line\">\ta:&#123;</span><br><span class=\"line\">\t\tb:<span class=\"number\">1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj4 =<span class=\"built_in\">Object</span>.create(obj1);</span><br><span class=\"line\">assert.deepEqual(obj1,obj1);</span><br><span class=\"line\"><span class=\"comment\">// 通过，对象与自身相等</span></span><br><span class=\"line\">assert.deepEqual(obj1,obj2);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123; a:&#123;b:1&#125; &#125; deepEqual &#123; a:&#123;b:2&#125; &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// b 的值不同</span></span><br><span class=\"line\">assert.deepEqual(obj1,obj3);</span><br><span class=\"line\"><span class=\"comment\">// 通过，两个对象相等</span></span><br><span class=\"line\">assert.deepEqual(obj1,obj4);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123; a:&#123;b:1&#125; &#125; deepEqual &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 原型会被忽略</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值不相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息</p>\n<h2 id=\"assert-deepStrictEqual-actual-expected-message\"><a href=\"#assert-deepStrictEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.deepStrictEqual(actual,expected[,message])\"></a>assert.deepStrictEqual(actual,expected[,message])</h2><p>新增于：v1.2.0</p>\n<p>大多数情况下等同于<code>assert.deepEqual()</code>，但有两个例外。首先，原始值使用严格相等运算符（<code>===</code>）进行比较。其次，对象对比包括严格比较它们的原型。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.deepEqual(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"string\">'1'</span>&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 通过，因为 1=='1'</span></span><br><span class=\"line\">assert.deepStrictEqual(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"string\">'1'</span>&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123;a:1&#125; deepStrictEqual &#123;a:'1'&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 因为 1 !== '1' 使用严格相等运算符</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值不相等，则抛出一个带有<code>message</code>属性的 <code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-doesNotThrow-block-error-message\"><a href=\"#assert-doesNotThrow-block-error-message\" class=\"headerlink\" title=\"assert.doesNotThrow(block[,error][,message])\"></a>assert.doesNotThrow(block[,error][,message])</h2><p>新增于：v0.1.21</p>\n<p>断言<code>block</code>函数不会抛出错误。查看<a href=\"#assert-throws-block-error-message\">assert.throws()</a> 了解更多。</p>\n<p>当调用<code>assert.doesNotThrow()</code>时，它会立即调用<code>block</code>函数。</p>\n<p>如果<code>block</code>函数抛出错误，并且错误类型与<code>error</code>参数指定的相同，则抛出<code>AssertionError</code>。如果错误类型不相同，或<code>error</code>参数是<code>undefined</code>，则错误回传给调用者。</p>\n<p>以下例子会抛出 <code>TypeError</code>，因为在断言中没有匹配的错误类型：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.doesNotThrow( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">'Wrong Value'</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">SyntaxError</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>以下例子会抛出一个带有’Got unwanted exception(TypeError)..’信息的<code>AssertionError</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.doesNotThrow( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">'Wrong Value'</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">TypeError</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>如果抛出了<code>AssertionError</code>，并且有为<code>message</code>参数传值，则<code>message</code>的值会被追加到<code>AssertionError</code>的消息中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.doesNotThrow( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">'Wrong Value'</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">TypeError</span>,</span><br><span class=\"line\">  <span class=\"string\">'Whoops'</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: Got unwanted exception(TypeError). Whoops</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"assert-equal-actual-expected-message\"><a href=\"#assert-equal-actual-expected-message\" class=\"headerlink\" title=\"assert.equal(actual,expected[,message])\"></a>assert.equal(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>使用相等运算符（<code>==</code>）来测试<code>actual</code>和<code>expected</code>参数是否相等。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.equal(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过，1==1</span></span><br><span class=\"line\">assert.equal(<span class=\"number\">1</span>,<span class=\"string\">'1'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过，1=='1'</span></span><br><span class=\"line\">assert.equal(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1==2</span></span><br><span class=\"line\">assert.equal(&#123;<span class=\"attr\">a</span>:&#123;<span class=\"attr\">b</span>:<span class=\"number\">1</span>&#125;&#125;,&#123;<span class=\"attr\">a</span>:&#123;<span class=\"attr\">b</span>:<span class=\"number\">1</span>&#125;&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123;a:&#123;b:1&#125;&#125; == &#123;a:&#123;b:1&#125;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值不相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-fail-actual-expected-message-operator\"><a href=\"#assert-fail-actual-expected-message-operator\" class=\"headerlink\" title=\"assert.fail(actual,expected,message,operator)\"></a>assert.fail(actual,expected,message,operator)</h2><p>新增于：v0.1.21</p>\n<p>抛出<code>AssertionError</code>。如果<code>message</code>的值不为真，则错误信息为<code>actual</code>和<code>expected</code>的值，并且<code>operator</code>分隔。否则，错误信息为<code>message</code>的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.fail(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"literal\">undefined</span>,<span class=\"string\">'&gt;'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError:1&gt;2</span></span><br><span class=\"line\">assert.fail(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">'whoops'</span>,<span class=\"string\">'2'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: whoops</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"assert-ifError-value\"><a href=\"#assert-ifError-value\" class=\"headerlink\" title=\"assert.ifError(value)\"></a>assert.ifError(value)</h2><p>新增于：v0.1.97</p>\n<p>如果<code>value</code>的值为真，抛出<code>value</code>。当测试回调函数的<code>error</code>参数时非常有用。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.ifError(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过</span></span><br><span class=\"line\">assert.ifError(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 1 </span></span><br><span class=\"line\">assert.ifError(<span class=\"string\">'error'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 'error'</span></span><br><span class=\"line\">assert.ifError(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>());</span><br><span class=\"line\"><span class=\"comment\">// 抛出 Error</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"assert-notDeepEqual-actual-expected-message\"><a href=\"#assert-notDeepEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.notDeepEqual(actual,expected[,message])\"></a>assert.notDeepEqual(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>测试<code>actual</code>和<code>expected</code>参数是否深度相等。与<a href=\"#assert-deepEqual-actual-expected-message\">assert.deepEqual()</a>相反。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123; <span class=\"attr\">a</span>:&#123;</span><br><span class=\"line\">\tb:<span class=\"number\">1</span> </span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj2 = &#123; <span class=\"attr\">a</span>:&#123;</span><br><span class=\"line\">\tb:<span class=\"number\">2</span></span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj3 = &#123; <span class=\"attr\">a</span>:&#123;</span><br><span class=\"line\">\tb:<span class=\"number\">1</span></span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj4 = <span class=\"built_in\">Object</span>.create(obj1);</span><br><span class=\"line\">assert.notDeepEqual(obj1,obj1);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123;a:&#123;b:1&#125;&#125; notDeepEqual &#123;a:&#123;b:1&#125;&#125;</span></span><br><span class=\"line\">assert.notDeepEqual(obj1,obj2);</span><br><span class=\"line\"><span class=\"comment\">// 通过，obj1 与 obj2 不深度相等</span></span><br><span class=\"line\">assert.notDeepEqual(obj1,obj3);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123;a:&#123;b:1&#125; notDeepEqual &#123;a:&#123;b:1&#125;&#125;&#125;</span></span><br><span class=\"line\">assert.notDeepEqual(obj1,obj4);</span><br><span class=\"line\"><span class=\"comment\">// 通过，obj1 与 obj4 不深度相等</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值深度相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-notDeepStrictEqual-actual-expected-message\"><a href=\"#assert-notDeepStrictEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.notDeepStrictEqual(actual,expected[,message])\"></a>assert.notDeepStrictEqual(actual,expected[,message])</h2><p>新增于：v1.2.0</p>\n<p>测试<code>actual</code> 和<code>expected</code>参数是否不深度严格相等。与<a href=\"#assert-deepStrictEqual-actual-expected-message\">assert.deepStrictEqual()</a>相反。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.notDeepEqual(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"string\">'1'</span>&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123;a:1&#125; notDeepEqual &#123;a:'1'&#125;</span></span><br><span class=\"line\">assert.notDeepStrictEqual(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"string\">'1'</span>&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 通过</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值深度严格相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-notEqual-actual-expected-message\"><a href=\"#assert-notEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.notEqual(actual,expected[,message])\"></a>assert.notEqual(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>使用不等运算符（<code>!=</code>）来测试<code>actual</code>和<code>expected</code>参数是否相等。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.notEqual(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过 </span></span><br><span class=\"line\">assert.notEuqal(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1 != 1</span></span><br><span class=\"line\">assert.notEqual(<span class=\"number\">1</span>,<span class=\"string\">'1'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1 != '1'</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-notStrictEqual-actual-expected-message\"><a href=\"#assert-notStrictEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.notStrictEqual(actual,expected[,message])\"></a>assert.notStrictEqual(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>使用严格不等运算符（<code>!==</code>）来测试<code>actual</code>和<code>expected</code>参数是否不严格相等。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.notStrictEqual(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过 </span></span><br><span class=\"line\">assert.notStrictEqual(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1 !== 1 </span></span><br><span class=\"line\">assert.notStrictEqual(<span class=\"number\">1</span>,<span class=\"string\">'1'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值严格相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-ok-value-message\"><a href=\"#assert-ok-value-message\" class=\"headerlink\" title=\"assert.ok(value[,message])\"></a>assert.ok(value[,message])</h2><p>新增于：v0.1.21</p>\n<p>测试<code>value</code>是否为真值。相当于<code>assert.equal(!!value,true,message)</code>。 </p>\n<p>如果<code>value</code>不为真值，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.ok(<span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过 </span></span><br><span class=\"line\">assert.ok(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过 </span></span><br><span class=\"line\">assert.ok(<span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 \"AssertionError: false == true\"</span></span><br><span class=\"line\">assert.ok(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 \"AssertionError: 0 == true\"</span></span><br><span class=\"line\">assert.ok(<span class=\"literal\">false</span>,<span class=\"string\">'it\\'s false'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 \"AssertionError: it's false\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"assert-strictEqual-actual-expected-message\"><a href=\"#assert-strictEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.strictEqual(actual,expected[,message])\"></a>assert.strictEqual(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>使用严格相等运算符（<code>===</code>）测试是否严格相等。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert =<span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.strictEqual(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1===2</span></span><br><span class=\"line\">assert.strictEqual(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过 </span></span><br><span class=\"line\">assert.strictEqual(<span class=\"number\">1</span>,<span class=\"string\">'1'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1==='1'</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值不严格相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-throws-block-error-message\"><a href=\"#assert-throws-block-error-message\" class=\"headerlink\" title=\"assert.throws(block[,error][,message])\"></a>assert.throws(block[,error][,message])</h2><p>新增于：v0.1.21</p>\n<p>期望<code>block</code>函数抛出错误。 </p>\n<p>如果指定<code>error</code>，它可以是一个构造函数、正则表达式、或校验函数。</p>\n<p>如果指定<code>message</code>，当<code>block</code>函数抛出错误时，<code>message</code>会作为错误信息传给<code>AssertionError</code>。</p>\n<p>使用构造函数的例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.throws( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Wrong value'</span>);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"built_in\">Error</span> </span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>使用正则表达式的例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.throws( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Wrong value'</span>);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\"> \t/value/</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>使用自定义校验函数的例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.throws( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Wrong value'</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( (err <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Error</span>) &amp;&amp; (<span class=\"regexp\">/value/</span>.test(err)) )&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">'unexpected error'</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>注意，<code>error</code>参数不能是字符串。如果第二个参数是字符串，则视为不传<code>error</code>参数，传入的字符串会被当作是<code>message</code>的值。这可能会引起误解：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这是错误的！不要这么做</span></span><br><span class=\"line\">assert.throws(myFunction,<span class=\"string\">'missing foo'</span>,<span class=\"string\">'did not throw with expected message'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 应该这么做</span></span><br><span class=\"line\">assert.throws(myFunction,/missing foo/,<span class=\"string\">'did not throw with expected message'</span>);</span><br></pre></td></tr></table></figure>\n<h1 id=\"Buffer\"><a href=\"#Buffer\" class=\"headerlink\" title=\"Buffer\"></a>Buffer</h1><pre><code>稳定性：2 - 稳定的\n</code></pre><p>在 <code>ECMAScript 2015 (ES6)</code> 引入 <code>TypedArray</code> 之前，<code>JavaScript</code> 语言没有读取或操作二进制数据流的机制。 <code>Buffer</code> 类被引入作为 <code>Node.js</code> <code>API</code> 的一部分，使其可以在 <code>TCP</code>流和文件系统操作等场景中处理二进制数据流。</p>\n<p>现在 <code>TypedArray</code> 已经被添加进 <code>ES6</code> 中，<code>Buffer</code>类以一种更优与更适合 <code>Node.js</code> 用例的方式实现了 <code>Uint8Array API</code>。</p>\n<p><code>Buffer</code> 类的实例类似于整数数组，除了其是大小固定的、且在 <code>V8</code> 堆外分配物理内存。 <code>Buffer</code> 的大小在其创建时就已确定，且不能调整大小。</p>\n<p><code>Buffer</code> 类在 <code>Node.js</code> 中是一个全局变量，因此无需 <code>require(&#39;buffer&#39;).Buffer</code>。</p>\n<p>例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个长度为 10、且用 0 填充的 Buffer。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf1 = Buffer.alloc(<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个长度为 10、且用 0x1 填充的 Buffer。 </span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf2 = Buffer.alloc(<span class=\"number\">10</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个长度为 10、且未初始化的 Buffer。</span></span><br><span class=\"line\"><span class=\"comment\">// 这个方法比调用 Buffer.alloc() 更快，</span></span><br><span class=\"line\"><span class=\"comment\">// 但返回的 Buffer 实例可能包含旧数据，</span></span><br><span class=\"line\"><span class=\"comment\">// 因此需要使用 fill() 或 write() 重写。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf3 = Buffer.allocUnsafe(<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个包含 [0x1, 0x2, 0x3] 的 Buffer。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf4 = Buffer.from([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个包含 ASCII 字节数组 [0x74, 0x65, 0x73, 0x74] 的 Buffer。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf5 = Buffer.from(<span class=\"string\">'test'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个包含 UTF-8 字节数组 [0x74, 0xc3, 0xa9, 0x73, 0x74] 的 Buffer。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf6 = Buffer.from(<span class=\"string\">'tést'</span>, <span class=\"string\">'utf8'</span>);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关于本文档\"><a href=\"#关于本文档\" class=\"headerlink\" title=\"关于本文档\"></a>关于本文档</h1><p>本文档的目的是全面地讲解<code>Node.js</code>的<code>API</code>，既从参考角度也从概念角度。每个章节介绍一个内置模块或高级概念。必要时，属性类型、方法参数、以及传给事件句柄的参数会在主题 标题下的列表中详细说明。每个<code>.html</code>文档都有一个对应的<code>.json</code>文档，以结构化的方式呈现相同的内容。这个特性 是试验的，用于帮助那些需要为编程提供文档的IDE或其他开发工具。</p>\n<h2 id=\"稳定性指数\"><a href=\"#稳定性指数\" class=\"headerlink\" title=\"稳定性指数\"></a>稳定性指数</h2><p>贯穿整个文档，你会看到每个章节的稳定性标志。在<code>Node.js</code>的<code>API</code>仍会有少量变化，但随着发展，部分<code>API</code>会更稳定可靠。有些<code>API</code>历经考验、且被大量依赖，它们几乎不会再改变。也有些API是新增的、或试验的、或被认定为有风险且正在重新设计中的。</p>\n<p>稳定性指标如下：</p>\n<pre><code>稳定性：0 - 废弃的\n这个特性被认定为存在问题，且正计划修改。\n不要依赖该特性。\n使用该特性可能会产生警告信息。\n不要指望该特性会向后兼容。\n\n稳定性：1 - 试验的\n这个特性可能会变化，在命令行中会有标记提示。\n在将来的版本中该特性可能会变化或移除。\n\n稳定性：2 - 稳定的\n这个特性已被证明是符合要求的。\n与npm生态系统的兼容性是一个高级优先级，除非绝对必要否则不会变化。\n\n稳定性：3 - 锁定的\n这个特性只接受与安全性、性能、或BUG修复有关的修改。\n请不要在该特性提出修改API的建议，这些建议会被拒绝。\n</code></pre><h2 id=\"JSON输出\"><a href=\"#JSON输出\" class=\"headerlink\" title=\"JSON输出\"></a>JSON输出</h2><pre><code>稳定性：1 - 试验的\n</code></pre><p>每个通过<code>Markdown</code>生成的<code>HTML</code>文件都有一个对应的具有相同数据的<code>JSON</code>文件。<br>这个特性是Node.js v0.6.12 新增的。该特性是试验的</p>\n<h2 id=\"系统调用与帮助文档\"><a href=\"#系统调用与帮助文档\" class=\"headerlink\" title=\"系统调用与帮助文档\"></a>系统调用与帮助文档</h2><p>系统调用定义了用户程序和底层操作系统之间的接口，例如<code>open(2)</code>、<code>read(2)</code>。<code>Node</code>函数只是简单地包装了系统调用，例如<code>fs.open()</code>。与之对应的帮助文档描述了系统调用的工作方式。</p>\n<p><strong>警告：</strong>有些系统调用是<code>BSD</code>系统特有的。例如<code>lchown(2)</code>。这意味着<code>fs.chown()</code>只适用于<code>Mac OS X</code>和其他的<code>BSD</code>衍生系统，在<code>Linus</code>上不行</p>\n<p>大部分<code>Unix</code>的系统调用都有对应的<code>Windows</code>版本，但<code>Windows</code>版本运行起来可能与<code>Linus</code>和<code>OS X</code>的有些差异。有些<code>Unix</code>系统调用无法在<code>Windows</code>中找到对应的操作语义，祥见<a href=\"#议题4760\">议题4760</a></p>\n<h1 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h1><p><code>node [options] [v8 options] [script.js | -e &quot;script&quot;] [arguments]</code><br>使用<code>Node.js</code>运行脚本的各种参数与方法，请查看<a href=\"#命令行参数\">命令行参数</a>文档。</p>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><p>例子，使用<code>Node.js</code>编写的<code>Web</code>服务器，响应返回<code>&#39;Hello World&#39;</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> hostname = <span class=\"string\">'127.0.0.1'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> port = <span class=\"number\">3000</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> server = http.createServer(<span class=\"function\">(<span class=\"params\">req,res</span>) =&gt;</span>&#123;</span><br><span class=\"line\">\tres.statusCode =<span class=\"number\">200</span>;</span><br><span class=\"line\">\tres.setHeader(<span class=\"string\">'Content-Type'</span>,<span class=\"string\">'text/plain'</span>);</span><br><span class=\"line\">\tres.end(<span class=\"string\">'Hello World!\\n'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">server.listen(port,hostname,() =&gt;&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">`Server running at http://<span class=\"subst\">$&#123;hostname&#125;</span>:<span class=\"subst\">$&#123;port&#125;</span>/`</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>要运行这个服务器，需要将代码保存到名为<code>example.js</code>的文件，并使用<code>Node.js</code>来执行：</p>\n<pre><code>$ node example.js\nServer running at http://127.0.0.1:3000/\n</code></pre><p>文档中所有的例子都可以用相同的方式运行。</p>\n<h1 id=\"assert（断言）\"><a href=\"#assert（断言）\" class=\"headerlink\" title=\"assert（断言）\"></a>assert（断言）</h1><pre><code>稳定性：3 - 锁定的\n</code></pre><p><code>assert</code>模块提供了一组简单的断言测试集合，用于测试不变量。该模块是供<code>Node.js</code>内部使用，但可以通过<code>require(&#39;assert&#39;)</code>在代码中使用。<code>assert</code>不是一个测试框架，也无意成为通用的断言库。<br><code>assert</code>模块的<code>API</code>是<a href=\"#稳定性指数\">锁定的</a>。这意味着将不会新增或更改任何由该模块实现与公开的方法。</p>\n<h2 id=\"assert-value-message\"><a href=\"#assert-value-message\" class=\"headerlink\" title=\"assert(value[,message])\"></a>assert(value[,message])</h2><p>新增于：v0.5.9 </p>\n<p><a href=\"#assert-ok-value-message\">assert.ok()</a> 的别名。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert(<span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"comment\">//通过</span></span><br><span class=\"line\">assert(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">//通过</span></span><br><span class=\"line\">assert(<span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">//抛出 \"AssertionError: false == true\"</span></span><br><span class=\"line\">assert(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">//抛出 \"AssertionError: 0 == true\"</span></span><br><span class=\"line\">assert(<span class=\"literal\">false</span>,<span class=\"string\">'it\\'s false'</span>);</span><br><span class=\"line\"><span class=\"comment\">//抛出 \"AssertionError: it's false\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"assert-deepEqual-actual-expected-message\"><a href=\"#assert-deepEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.deepEqual(actual,expected[,message])\"></a>assert.deepEqual(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>测试<code>actual</code>和<code>expected</code>参数是否深度相等。原始值会使用相等运算符（<code>==</code>）进行比较。</p>\n<p>只比较可枚举的自身属性。<code>deepEqual()</code>不测试对象的原型、连接符、或不可枚举的属性。这会引起一些潜在的意料之外的结果。例如，下面的例子不会抛出<code>AssertionError</code>，因为<code>Error</code>对象的属性是不可枚举的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//注意：这不会抛出AssertionError!</span></span><br><span class=\"line\">assert.deepEqual(<span class=\"built_in\">Error</span>(<span class=\"string\">'a'</span>),<span class=\"built_in\">Error</span>(<span class=\"string\">'b'</span>));</span><br></pre></td></tr></table></figure>\n<p>深度相等意味着子对象的可枚举的自身属性也会被比较：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123;</span><br><span class=\"line\">\ta:&#123;</span><br><span class=\"line\">\t\tb:<span class=\"number\">1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj2 = &#123;</span><br><span class=\"line\">\ta:&#123;</span><br><span class=\"line\">\t\tb:<span class=\"number\">2</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj3 = &#123;</span><br><span class=\"line\">\ta:&#123;</span><br><span class=\"line\">\t\tb:<span class=\"number\">1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj4 =<span class=\"built_in\">Object</span>.create(obj1);</span><br><span class=\"line\">assert.deepEqual(obj1,obj1);</span><br><span class=\"line\"><span class=\"comment\">// 通过，对象与自身相等</span></span><br><span class=\"line\">assert.deepEqual(obj1,obj2);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123; a:&#123;b:1&#125; &#125; deepEqual &#123; a:&#123;b:2&#125; &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// b 的值不同</span></span><br><span class=\"line\">assert.deepEqual(obj1,obj3);</span><br><span class=\"line\"><span class=\"comment\">// 通过，两个对象相等</span></span><br><span class=\"line\">assert.deepEqual(obj1,obj4);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123; a:&#123;b:1&#125; &#125; deepEqual &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 原型会被忽略</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值不相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息</p>\n<h2 id=\"assert-deepStrictEqual-actual-expected-message\"><a href=\"#assert-deepStrictEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.deepStrictEqual(actual,expected[,message])\"></a>assert.deepStrictEqual(actual,expected[,message])</h2><p>新增于：v1.2.0</p>\n<p>大多数情况下等同于<code>assert.deepEqual()</code>，但有两个例外。首先，原始值使用严格相等运算符（<code>===</code>）进行比较。其次，对象对比包括严格比较它们的原型。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.deepEqual(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"string\">'1'</span>&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 通过，因为 1=='1'</span></span><br><span class=\"line\">assert.deepStrictEqual(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"string\">'1'</span>&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123;a:1&#125; deepStrictEqual &#123;a:'1'&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 因为 1 !== '1' 使用严格相等运算符</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值不相等，则抛出一个带有<code>message</code>属性的 <code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-doesNotThrow-block-error-message\"><a href=\"#assert-doesNotThrow-block-error-message\" class=\"headerlink\" title=\"assert.doesNotThrow(block[,error][,message])\"></a>assert.doesNotThrow(block[,error][,message])</h2><p>新增于：v0.1.21</p>\n<p>断言<code>block</code>函数不会抛出错误。查看<a href=\"#assert-throws-block-error-message\">assert.throws()</a> 了解更多。</p>\n<p>当调用<code>assert.doesNotThrow()</code>时，它会立即调用<code>block</code>函数。</p>\n<p>如果<code>block</code>函数抛出错误，并且错误类型与<code>error</code>参数指定的相同，则抛出<code>AssertionError</code>。如果错误类型不相同，或<code>error</code>参数是<code>undefined</code>，则错误回传给调用者。</p>\n<p>以下例子会抛出 <code>TypeError</code>，因为在断言中没有匹配的错误类型：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.doesNotThrow( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">'Wrong Value'</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">SyntaxError</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>以下例子会抛出一个带有’Got unwanted exception(TypeError)..’信息的<code>AssertionError</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.doesNotThrow( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">'Wrong Value'</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">TypeError</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>如果抛出了<code>AssertionError</code>，并且有为<code>message</code>参数传值，则<code>message</code>的值会被追加到<code>AssertionError</code>的消息中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.doesNotThrow( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">'Wrong Value'</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">TypeError</span>,</span><br><span class=\"line\">  <span class=\"string\">'Whoops'</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: Got unwanted exception(TypeError). Whoops</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"assert-equal-actual-expected-message\"><a href=\"#assert-equal-actual-expected-message\" class=\"headerlink\" title=\"assert.equal(actual,expected[,message])\"></a>assert.equal(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>使用相等运算符（<code>==</code>）来测试<code>actual</code>和<code>expected</code>参数是否相等。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.equal(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过，1==1</span></span><br><span class=\"line\">assert.equal(<span class=\"number\">1</span>,<span class=\"string\">'1'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过，1=='1'</span></span><br><span class=\"line\">assert.equal(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1==2</span></span><br><span class=\"line\">assert.equal(&#123;<span class=\"attr\">a</span>:&#123;<span class=\"attr\">b</span>:<span class=\"number\">1</span>&#125;&#125;,&#123;<span class=\"attr\">a</span>:&#123;<span class=\"attr\">b</span>:<span class=\"number\">1</span>&#125;&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123;a:&#123;b:1&#125;&#125; == &#123;a:&#123;b:1&#125;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值不相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-fail-actual-expected-message-operator\"><a href=\"#assert-fail-actual-expected-message-operator\" class=\"headerlink\" title=\"assert.fail(actual,expected,message,operator)\"></a>assert.fail(actual,expected,message,operator)</h2><p>新增于：v0.1.21</p>\n<p>抛出<code>AssertionError</code>。如果<code>message</code>的值不为真，则错误信息为<code>actual</code>和<code>expected</code>的值，并且<code>operator</code>分隔。否则，错误信息为<code>message</code>的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.fail(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"literal\">undefined</span>,<span class=\"string\">'&gt;'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError:1&gt;2</span></span><br><span class=\"line\">assert.fail(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">'whoops'</span>,<span class=\"string\">'2'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: whoops</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"assert-ifError-value\"><a href=\"#assert-ifError-value\" class=\"headerlink\" title=\"assert.ifError(value)\"></a>assert.ifError(value)</h2><p>新增于：v0.1.97</p>\n<p>如果<code>value</code>的值为真，抛出<code>value</code>。当测试回调函数的<code>error</code>参数时非常有用。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.ifError(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过</span></span><br><span class=\"line\">assert.ifError(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 1 </span></span><br><span class=\"line\">assert.ifError(<span class=\"string\">'error'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 'error'</span></span><br><span class=\"line\">assert.ifError(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>());</span><br><span class=\"line\"><span class=\"comment\">// 抛出 Error</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"assert-notDeepEqual-actual-expected-message\"><a href=\"#assert-notDeepEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.notDeepEqual(actual,expected[,message])\"></a>assert.notDeepEqual(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>测试<code>actual</code>和<code>expected</code>参数是否深度相等。与<a href=\"#assert-deepEqual-actual-expected-message\">assert.deepEqual()</a>相反。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123; <span class=\"attr\">a</span>:&#123;</span><br><span class=\"line\">\tb:<span class=\"number\">1</span> </span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj2 = &#123; <span class=\"attr\">a</span>:&#123;</span><br><span class=\"line\">\tb:<span class=\"number\">2</span></span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj3 = &#123; <span class=\"attr\">a</span>:&#123;</span><br><span class=\"line\">\tb:<span class=\"number\">1</span></span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj4 = <span class=\"built_in\">Object</span>.create(obj1);</span><br><span class=\"line\">assert.notDeepEqual(obj1,obj1);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123;a:&#123;b:1&#125;&#125; notDeepEqual &#123;a:&#123;b:1&#125;&#125;</span></span><br><span class=\"line\">assert.notDeepEqual(obj1,obj2);</span><br><span class=\"line\"><span class=\"comment\">// 通过，obj1 与 obj2 不深度相等</span></span><br><span class=\"line\">assert.notDeepEqual(obj1,obj3);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123;a:&#123;b:1&#125; notDeepEqual &#123;a:&#123;b:1&#125;&#125;&#125;</span></span><br><span class=\"line\">assert.notDeepEqual(obj1,obj4);</span><br><span class=\"line\"><span class=\"comment\">// 通过，obj1 与 obj4 不深度相等</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值深度相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-notDeepStrictEqual-actual-expected-message\"><a href=\"#assert-notDeepStrictEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.notDeepStrictEqual(actual,expected[,message])\"></a>assert.notDeepStrictEqual(actual,expected[,message])</h2><p>新增于：v1.2.0</p>\n<p>测试<code>actual</code> 和<code>expected</code>参数是否不深度严格相等。与<a href=\"#assert-deepStrictEqual-actual-expected-message\">assert.deepStrictEqual()</a>相反。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.notDeepEqual(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"string\">'1'</span>&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: &#123;a:1&#125; notDeepEqual &#123;a:'1'&#125;</span></span><br><span class=\"line\">assert.notDeepStrictEqual(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"string\">'1'</span>&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 通过</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值深度严格相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-notEqual-actual-expected-message\"><a href=\"#assert-notEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.notEqual(actual,expected[,message])\"></a>assert.notEqual(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>使用不等运算符（<code>!=</code>）来测试<code>actual</code>和<code>expected</code>参数是否相等。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.notEqual(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过 </span></span><br><span class=\"line\">assert.notEuqal(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1 != 1</span></span><br><span class=\"line\">assert.notEqual(<span class=\"number\">1</span>,<span class=\"string\">'1'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1 != '1'</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-notStrictEqual-actual-expected-message\"><a href=\"#assert-notStrictEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.notStrictEqual(actual,expected[,message])\"></a>assert.notStrictEqual(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>使用严格不等运算符（<code>!==</code>）来测试<code>actual</code>和<code>expected</code>参数是否不严格相等。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.notStrictEqual(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过 </span></span><br><span class=\"line\">assert.notStrictEqual(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1 !== 1 </span></span><br><span class=\"line\">assert.notStrictEqual(<span class=\"number\">1</span>,<span class=\"string\">'1'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值严格相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-ok-value-message\"><a href=\"#assert-ok-value-message\" class=\"headerlink\" title=\"assert.ok(value[,message])\"></a>assert.ok(value[,message])</h2><p>新增于：v0.1.21</p>\n<p>测试<code>value</code>是否为真值。相当于<code>assert.equal(!!value,true,message)</code>。 </p>\n<p>如果<code>value</code>不为真值，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert = <span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.ok(<span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过 </span></span><br><span class=\"line\">assert.ok(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过 </span></span><br><span class=\"line\">assert.ok(<span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 \"AssertionError: false == true\"</span></span><br><span class=\"line\">assert.ok(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 \"AssertionError: 0 == true\"</span></span><br><span class=\"line\">assert.ok(<span class=\"literal\">false</span>,<span class=\"string\">'it\\'s false'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 \"AssertionError: it's false\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"assert-strictEqual-actual-expected-message\"><a href=\"#assert-strictEqual-actual-expected-message\" class=\"headerlink\" title=\"assert.strictEqual(actual,expected[,message])\"></a>assert.strictEqual(actual,expected[,message])</h2><p>新增于：v0.1.21</p>\n<p>使用严格相等运算符（<code>===</code>）测试是否严格相等。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> assert =<span class=\"built_in\">require</span>(<span class=\"string\">'assert'</span>);</span><br><span class=\"line\">assert.strictEqual(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1===2</span></span><br><span class=\"line\">assert.strictEqual(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 通过 </span></span><br><span class=\"line\">assert.strictEqual(<span class=\"number\">1</span>,<span class=\"string\">'1'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 抛出 AssertionError: 1==='1'</span></span><br></pre></td></tr></table></figure>\n<p>如果两个值不严格相等，则抛出一个带有<code>message</code>属性的<code>AssertionError</code>，其中<code>message</code>属性的值等于传入的<code>message</code>参数的值。如果<code>message</code>参数为<code>undefined</code>，则输出默认的错误信息。</p>\n<h2 id=\"assert-throws-block-error-message\"><a href=\"#assert-throws-block-error-message\" class=\"headerlink\" title=\"assert.throws(block[,error][,message])\"></a>assert.throws(block[,error][,message])</h2><p>新增于：v0.1.21</p>\n<p>期望<code>block</code>函数抛出错误。 </p>\n<p>如果指定<code>error</code>，它可以是一个构造函数、正则表达式、或校验函数。</p>\n<p>如果指定<code>message</code>，当<code>block</code>函数抛出错误时，<code>message</code>会作为错误信息传给<code>AssertionError</code>。</p>\n<p>使用构造函数的例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.throws( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Wrong value'</span>);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"built_in\">Error</span> </span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>使用正则表达式的例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.throws( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Wrong value'</span>);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\"> \t/value/</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>使用自定义校验函数的例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert.throws( <span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Wrong value'</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( (err <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Error</span>) &amp;&amp; (<span class=\"regexp\">/value/</span>.test(err)) )&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">'unexpected error'</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>注意，<code>error</code>参数不能是字符串。如果第二个参数是字符串，则视为不传<code>error</code>参数，传入的字符串会被当作是<code>message</code>的值。这可能会引起误解：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这是错误的！不要这么做</span></span><br><span class=\"line\">assert.throws(myFunction,<span class=\"string\">'missing foo'</span>,<span class=\"string\">'did not throw with expected message'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 应该这么做</span></span><br><span class=\"line\">assert.throws(myFunction,/missing foo/,<span class=\"string\">'did not throw with expected message'</span>);</span><br></pre></td></tr></table></figure>\n<h1 id=\"Buffer\"><a href=\"#Buffer\" class=\"headerlink\" title=\"Buffer\"></a>Buffer</h1><pre><code>稳定性：2 - 稳定的\n</code></pre><p>在 <code>ECMAScript 2015 (ES6)</code> 引入 <code>TypedArray</code> 之前，<code>JavaScript</code> 语言没有读取或操作二进制数据流的机制。 <code>Buffer</code> 类被引入作为 <code>Node.js</code> <code>API</code> 的一部分，使其可以在 <code>TCP</code>流和文件系统操作等场景中处理二进制数据流。</p>\n<p>现在 <code>TypedArray</code> 已经被添加进 <code>ES6</code> 中，<code>Buffer</code>类以一种更优与更适合 <code>Node.js</code> 用例的方式实现了 <code>Uint8Array API</code>。</p>\n<p><code>Buffer</code> 类的实例类似于整数数组，除了其是大小固定的、且在 <code>V8</code> 堆外分配物理内存。 <code>Buffer</code> 的大小在其创建时就已确定，且不能调整大小。</p>\n<p><code>Buffer</code> 类在 <code>Node.js</code> 中是一个全局变量，因此无需 <code>require(&#39;buffer&#39;).Buffer</code>。</p>\n<p>例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个长度为 10、且用 0 填充的 Buffer。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf1 = Buffer.alloc(<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个长度为 10、且用 0x1 填充的 Buffer。 </span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf2 = Buffer.alloc(<span class=\"number\">10</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个长度为 10、且未初始化的 Buffer。</span></span><br><span class=\"line\"><span class=\"comment\">// 这个方法比调用 Buffer.alloc() 更快，</span></span><br><span class=\"line\"><span class=\"comment\">// 但返回的 Buffer 实例可能包含旧数据，</span></span><br><span class=\"line\"><span class=\"comment\">// 因此需要使用 fill() 或 write() 重写。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf3 = Buffer.allocUnsafe(<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个包含 [0x1, 0x2, 0x3] 的 Buffer。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf4 = Buffer.from([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个包含 ASCII 字节数组 [0x74, 0x65, 0x73, 0x74] 的 Buffer。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf5 = Buffer.from(<span class=\"string\">'test'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个包含 UTF-8 字节数组 [0x74, 0xc3, 0xa9, 0x73, 0x74] 的 Buffer。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf6 = Buffer.from(<span class=\"string\">'tést'</span>, <span class=\"string\">'utf8'</span>);</span><br></pre></td></tr></table></figure>\n"},{"title":"weex从入门到放弃","keywords":"nodejs npm weex","date":"2017-11-14T16:00:00.000Z","_content":"\n# weex从入门到放弃\n\n经历过nodeJs的卸载重装N次，体验过npm的升级与降级，曾把npm全局下载的东东全部删除过，失落与绝望擦出的无奈，曾一度想放弃，就在濒临绝境之际，git带来了希望。终于在git那慢腾腾的安装下，项目启动成功，宣告着环境搭建成功的同时预示着雨停了，终于可以再次踏上泥泞的道路了。。。。\n\n...","source":"_posts/weex从入门到放弃.md","raw":"---\ntitle: weex从入门到放弃\nkeywords: nodejs npm weex\ntags: weex\ncategories: skill\ndate: 2017-11-15\n---\n\n# weex从入门到放弃\n\n经历过nodeJs的卸载重装N次，体验过npm的升级与降级，曾把npm全局下载的东东全部删除过，失落与绝望擦出的无奈，曾一度想放弃，就在濒临绝境之际，git带来了希望。终于在git那慢腾腾的安装下，项目启动成功，宣告着环境搭建成功的同时预示着雨停了，终于可以再次踏上泥泞的道路了。。。。\n\n...","slug":"weex从入门到放弃","published":1,"updated":"2018-02-27T03:17:25.000Z","_id":"cje52p0xq002f6atfs8xac1s5","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"weex从入门到放弃\"><a href=\"#weex从入门到放弃\" class=\"headerlink\" title=\"weex从入门到放弃\"></a>weex从入门到放弃</h1><p>经历过nodeJs的卸载重装N次，体验过npm的升级与降级，曾把npm全局下载的东东全部删除过，失落与绝望擦出的无奈，曾一度想放弃，就在濒临绝境之际，git带来了希望。终于在git那慢腾腾的安装下，项目启动成功，宣告着环境搭建成功的同时预示着雨停了，终于可以再次踏上泥泞的道路了。。。。</p>\n<p>…</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"weex从入门到放弃\"><a href=\"#weex从入门到放弃\" class=\"headerlink\" title=\"weex从入门到放弃\"></a>weex从入门到放弃</h1><p>经历过nodeJs的卸载重装N次，体验过npm的升级与降级，曾把npm全局下载的东东全部删除过，失落与绝望擦出的无奈，曾一度想放弃，就在濒临绝境之际，git带来了希望。终于在git那慢腾腾的安装下，项目启动成功，宣告着环境搭建成功的同时预示着雨停了，终于可以再次踏上泥泞的道路了。。。。</p>\n<p>…</p>\n"},{"title":"快速把自己的项目上传到github","keywords":"github","date":"2017-11-27T16:00:00.000Z","_content":"\n###\n\n首先根据下图的操作创建一个仓库，这是干什么的?可以简单粗暴的理解为一个项目一个仓库就行了。\n\n![这是第一张图片](../../../../images/github/git1.jpg)\n\n创建成功后看到到下图，这图的那个地址先记住了，一会可是要用的呢，这是这个仓库的地址，我们项目要传到这里来。\n\n![这是第一张图片](../../../../images/github/git2.jpg)\n\n然后就去下载一个git,进入项目的目录下：\n\n![这是第一张图片](../../../../images/github/git3.jpg)\n\n* 输入`git init`，当前项目的目录中生成本地的git管理（会发现在当前目录下多了一个.git文件夹）\n\n* 输入`git add .`，这个是将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把.换\n成这个特定的文件名即可。\n\n* 输入`git commit -m \"first commit\"`，表示你对这次提交的注释，双引号里面的内容可以根据个人的需要\n改。\n\n* 输入`git remote add origin https://自己的仓库url地址`（上面有说到） 将本地的仓库关联到github上，这里我输入的是`git remote add origin git@github.com:foxSnower/FoxSnower.git`\n\n* 输入`git push -u origin master`，这是把代码上传到github仓库的意思\n\n上传成功后，就是这个样子了。\n\n![这是第一张图片](../../../../images/github/git4.jpg)","source":"_posts/快速把自己的项目上传到github.md","raw":"---\ntitle: 快速把自己的项目上传到github\nkeywords: github\ntags: github\ncategories: skill\ndate: 2017-11-28\n---\n\n###\n\n首先根据下图的操作创建一个仓库，这是干什么的?可以简单粗暴的理解为一个项目一个仓库就行了。\n\n![这是第一张图片](../../../../images/github/git1.jpg)\n\n创建成功后看到到下图，这图的那个地址先记住了，一会可是要用的呢，这是这个仓库的地址，我们项目要传到这里来。\n\n![这是第一张图片](../../../../images/github/git2.jpg)\n\n然后就去下载一个git,进入项目的目录下：\n\n![这是第一张图片](../../../../images/github/git3.jpg)\n\n* 输入`git init`，当前项目的目录中生成本地的git管理（会发现在当前目录下多了一个.git文件夹）\n\n* 输入`git add .`，这个是将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把.换\n成这个特定的文件名即可。\n\n* 输入`git commit -m \"first commit\"`，表示你对这次提交的注释，双引号里面的内容可以根据个人的需要\n改。\n\n* 输入`git remote add origin https://自己的仓库url地址`（上面有说到） 将本地的仓库关联到github上，这里我输入的是`git remote add origin git@github.com:foxSnower/FoxSnower.git`\n\n* 输入`git push -u origin master`，这是把代码上传到github仓库的意思\n\n上传成功后，就是这个样子了。\n\n![这是第一张图片](../../../../images/github/git4.jpg)","slug":"快速把自己的项目上传到github","published":1,"updated":"2018-02-27T03:04:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje52p0xt002i6atfuahzuivu","content":"<p>###</p>\n<p>首先根据下图的操作创建一个仓库，这是干什么的?可以简单粗暴的理解为一个项目一个仓库就行了。</p>\n<p><img src=\"../../../../images/github/git1.jpg\" alt=\"这是第一张图片\"></p>\n<p>创建成功后看到到下图，这图的那个地址先记住了，一会可是要用的呢，这是这个仓库的地址，我们项目要传到这里来。</p>\n<p><img src=\"../../../../images/github/git2.jpg\" alt=\"这是第一张图片\"></p>\n<p>然后就去下载一个git,进入项目的目录下：</p>\n<p><img src=\"../../../../images/github/git3.jpg\" alt=\"这是第一张图片\"></p>\n<ul>\n<li><p>输入<code>git init</code>，当前项目的目录中生成本地的git管理（会发现在当前目录下多了一个.git文件夹）</p>\n</li>\n<li><p>输入<code>git add .</code>，这个是将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把.换<br>成这个特定的文件名即可。</p>\n</li>\n<li><p>输入<code>git commit -m &quot;first commit&quot;</code>，表示你对这次提交的注释，双引号里面的内容可以根据个人的需要<br>改。</p>\n</li>\n<li><p>输入<code>git remote add origin https://自己的仓库url地址</code>（上面有说到） 将本地的仓库关联到github上，这里我输入的是<code>git remote add origin git@github.com:foxSnower/FoxSnower.git</code></p>\n</li>\n<li><p>输入<code>git push -u origin master</code>，这是把代码上传到github仓库的意思</p>\n</li>\n</ul>\n<p>上传成功后，就是这个样子了。</p>\n<p><img src=\"../../../../images/github/git4.jpg\" alt=\"这是第一张图片\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>###</p>\n<p>首先根据下图的操作创建一个仓库，这是干什么的?可以简单粗暴的理解为一个项目一个仓库就行了。</p>\n<p><img src=\"../../../../images/github/git1.jpg\" alt=\"这是第一张图片\"></p>\n<p>创建成功后看到到下图，这图的那个地址先记住了，一会可是要用的呢，这是这个仓库的地址，我们项目要传到这里来。</p>\n<p><img src=\"../../../../images/github/git2.jpg\" alt=\"这是第一张图片\"></p>\n<p>然后就去下载一个git,进入项目的目录下：</p>\n<p><img src=\"../../../../images/github/git3.jpg\" alt=\"这是第一张图片\"></p>\n<ul>\n<li><p>输入<code>git init</code>，当前项目的目录中生成本地的git管理（会发现在当前目录下多了一个.git文件夹）</p>\n</li>\n<li><p>输入<code>git add .</code>，这个是将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把.换<br>成这个特定的文件名即可。</p>\n</li>\n<li><p>输入<code>git commit -m &quot;first commit&quot;</code>，表示你对这次提交的注释，双引号里面的内容可以根据个人的需要<br>改。</p>\n</li>\n<li><p>输入<code>git remote add origin https://自己的仓库url地址</code>（上面有说到） 将本地的仓库关联到github上，这里我输入的是<code>git remote add origin git@github.com:foxSnower/FoxSnower.git</code></p>\n</li>\n<li><p>输入<code>git push -u origin master</code>，这是把代码上传到github仓库的意思</p>\n</li>\n</ul>\n<p>上传成功后，就是这个样子了。</p>\n<p><img src=\"../../../../images/github/git4.jpg\" alt=\"这是第一张图片\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cje52p0v200006atftq6ecmtm","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0vz000i6atfp2njky9k"},{"post_id":"cje52p0vo000a6atf5qyp2uab","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0w3000n6atfat2o73b3"},{"post_id":"cje52p0vu000f6atfcuh302lf","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0w5000p6atfrgsu1ddb"},{"post_id":"cje52p0vb00026atf4aa8h5gp","category_id":"cje52p0vq000b6atflwau8xuk","_id":"cje52p0w9000u6atfqgwz8qup"},{"post_id":"cje52p0vi00066atfi0pwb66g","category_id":"cje52p0vq000b6atflwau8xuk","_id":"cje52p0wd000x6atffk9cwu6s"},{"post_id":"cje52p0w4000o6atf3ybjn1rq","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0wh00116atfzi3vx3vs"},{"post_id":"cje52p0w7000t6atfe19yfagh","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0wj00136atfqk4xkul3"},{"post_id":"cje52p0vm00086atfmhhfrxqe","category_id":"cje52p0vq000b6atflwau8xuk","_id":"cje52p0wl00166atfa1okvdfw"},{"post_id":"cje52p0wb000v6atfm1zmf50i","category_id":"cje52p0vq000b6atflwau8xuk","_id":"cje52p0wo00186atfatgamujm"},{"post_id":"cje52p0we000z6atfd4p27dob","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0wr001b6atfrwtoc2za"},{"post_id":"cje52p0vy000h6atfmg7xbvaj","category_id":"cje52p0wd000w6atf9c2rd98q","_id":"cje52p0wt001e6atf2xxn7gie"},{"post_id":"cje52p0wh00126atfpys1vlcd","category_id":"cje52p0vq000b6atflwau8xuk","_id":"cje52p0ww001i6atfd0t6rrjn"},{"post_id":"cje52p0wk00156atfrhr3pjqm","category_id":"cje52p0vq000b6atflwau8xuk","_id":"cje52p0wz001l6atf77om2rfu"},{"post_id":"cje52p0wm00176atfi2ps57rc","category_id":"cje52p0wd000w6atf9c2rd98q","_id":"cje52p0x1001o6atfy2rjzxy6"},{"post_id":"cje52p0wp001a6atf10fqeva5","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0x4001r6atf1i84gc4a"},{"post_id":"cje52p0ws001d6atf7sbpi95j","category_id":"cje52p0wd000w6atf9c2rd98q","_id":"cje52p0x6001t6atffx17lk4b"},{"post_id":"cje52p0wu001h6atf7h8tycrg","category_id":"cje52p0wd000w6atf9c2rd98q","_id":"cje52p0x8001w6atf8i2lhphx"},{"post_id":"cje52p0wx001k6atf0v54etjt","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0xa001z6atf513ho8lc"},{"post_id":"cje52p0wz001m6atf448k254m","category_id":"cje52p0vq000b6atflwau8xuk","_id":"cje52p0xd00226atf60f9qcqd"},{"post_id":"cje52p0x3001q6atfkfffswk5","category_id":"cje52p0vq000b6atflwau8xuk","_id":"cje52p0xg00266atflbkkb56g"},{"post_id":"cje52p0x7001v6atfwiyh0nab","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0xk002a6atfvbzeg124"},{"post_id":"cje52p0xb00216atf5i43eq8b","category_id":"cje52p0x8001x6atfzjqgv7do","_id":"cje52p0xo002d6atf079hlw34"},{"post_id":"cje52p0x5001s6atfz66keo6x","category_id":"cje52p0x8001x6atfzjqgv7do","_id":"cje52p0xs002g6atf0ctp0uft"},{"post_id":"cje52p0xe00246atfrwkzs2ru","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0xu002j6atf9mf7eawf"},{"post_id":"cje52p0xh00296atf90te9fdm","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0xw002m6atfdwmro8nj"},{"post_id":"cje52p0x8001y6atflp069y4y","category_id":"cje52p0x8001x6atfzjqgv7do","_id":"cje52p0xx002o6atf2a6j3c6f"},{"post_id":"cje52p0xl002c6atfse9yx1au","category_id":"cje52p0wd000w6atf9c2rd98q","_id":"cje52p0xy002q6atf8cteoh8i"},{"post_id":"cje52p0xq002f6atfs8xac1s5","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0xy002r6atf5l9oma9x"},{"post_id":"cje52p0xt002i6atfuahzuivu","category_id":"cje52p0vf00046atfzt4w3jbq","_id":"cje52p0xy002t6atfogehxpty"}],"PostTag":[{"post_id":"cje52p0v200006atftq6ecmtm","tag_id":"cje52p0vi00056atfzznq8joa","_id":"cje52p0vu000e6atfy9a7h0an"},{"post_id":"cje52p0vb00026atf4aa8h5gp","tag_id":"cje52p0vi00056atfzznq8joa","_id":"cje52p0w1000l6atfucwjxi2l"},{"post_id":"cje52p0vi00066atfi0pwb66g","tag_id":"cje52p0vi00056atfzznq8joa","_id":"cje52p0w7000s6atfh09iniyj"},{"post_id":"cje52p0vm00086atfmhhfrxqe","tag_id":"cje52p0w5000q6atf950v29jv","_id":"cje52p0wg00106atfw02u8n8e"},{"post_id":"cje52p0vo000a6atf5qyp2uab","tag_id":"cje52p0we000y6atf0bigcwm3","_id":"cje52p0ws001c6atfvlg7bop9"},{"post_id":"cje52p0vo000a6atf5qyp2uab","tag_id":"cje52p0w5000q6atf950v29jv","_id":"cje52p0wu001f6atf8tidjuka"},{"post_id":"cje52p0vu000f6atfcuh302lf","tag_id":"cje52p0wo00196atfwaefpkl9","_id":"cje52p0ww001j6atfgkhgwmc5"},{"post_id":"cje52p0vy000h6atfmg7xbvaj","tag_id":"cje52p0wu001g6atfq6bh6925","_id":"cje52p0x3001p6atfl06hmu9h"},{"post_id":"cje52p0w2000m6atfn1hj0p0j","tag_id":"cje52p0x0001n6atfrk1o178h","_id":"cje52p0xd00236atf341qbefg"},{"post_id":"cje52p0w2000m6atfn1hj0p0j","tag_id":"cje52p0x6001u6atfzncbqbkt","_id":"cje52p0xg00276atfzb8acg6v"},{"post_id":"cje52p0xe00246atfrwkzs2ru","tag_id":"cje52p0vi00056atfzznq8joa","_id":"cje52p0xk002b6atf5h0dwaq7"},{"post_id":"cje52p0w4000o6atf3ybjn1rq","tag_id":"cje52p0xa00206atfvv0n2pzs","_id":"cje52p0xt002h6atf3lnmn6v7"},{"post_id":"cje52p0w4000o6atf3ybjn1rq","tag_id":"cje52p0x6001u6atfzncbqbkt","_id":"cje52p0xv002k6atfn5wbb21f"},{"post_id":"cje52p0w7000t6atfe19yfagh","tag_id":"cje52p0x6001u6atfzncbqbkt","_id":"cje52p0xx002n6atfhmnzjgrg"},{"post_id":"cje52p0wb000v6atfm1zmf50i","tag_id":"cje52p0x6001u6atfzncbqbkt","_id":"cje52p0xy002u6atf65d9o1tu"},{"post_id":"cje52p0wb000v6atfm1zmf50i","tag_id":"cje52p0xx002p6atf4vcet60i","_id":"cje52p0xz002v6atfwf99ob7g"},{"post_id":"cje52p0we000z6atfd4p27dob","tag_id":"cje52p0xy002s6atf4zedup2l","_id":"cje52p0y0002y6atfk2a40uqe"},{"post_id":"cje52p0we000z6atfd4p27dob","tag_id":"cje52p0x6001u6atfzncbqbkt","_id":"cje52p0y0002z6atf65alq1jw"},{"post_id":"cje52p0wh00126atfpys1vlcd","tag_id":"cje52p0x6001u6atfzncbqbkt","_id":"cje52p0y100326atfa184cjw9"},{"post_id":"cje52p0wh00126atfpys1vlcd","tag_id":"cje52p0xx002p6atf4vcet60i","_id":"cje52p0y100336atflubqeobc"},{"post_id":"cje52p0wk00156atfrhr3pjqm","tag_id":"cje52p0y100316atfl07mkppe","_id":"cje52p0y300366atfnchvcdof"},{"post_id":"cje52p0wk00156atfrhr3pjqm","tag_id":"cje52p0x6001u6atfzncbqbkt","_id":"cje52p0y300376atfkqwcxwaf"},{"post_id":"cje52p0wm00176atfi2ps57rc","tag_id":"cje52p0y200356atfk572e19p","_id":"cje52p0y300396atfhbl3h28e"},{"post_id":"cje52p0wp001a6atf10fqeva5","tag_id":"cje52p0y300386atfny04unf3","_id":"cje52p0y4003b6atfofz51i9z"},{"post_id":"cje52p0ws001d6atf7sbpi95j","tag_id":"cje52p0y4003a6atfd9zk2971","_id":"cje52p0y5003d6atfm7fweb1p"},{"post_id":"cje52p0wu001h6atf7h8tycrg","tag_id":"cje52p0y4003a6atfd9zk2971","_id":"cje52p0y5003f6atfnq2c4mui"},{"post_id":"cje52p0wx001k6atf0v54etjt","tag_id":"cje52p0y200356atfk572e19p","_id":"cje52p0y6003h6atfou6jdt24"},{"post_id":"cje52p0wz001m6atf448k254m","tag_id":"cje52p0y6003g6atfgiporjxs","_id":"cje52p0y7003j6atf0tvegalf"},{"post_id":"cje52p0x3001q6atfkfffswk5","tag_id":"cje52p0y6003g6atfgiporjxs","_id":"cje52p0y7003l6atfwb9a2ykw"},{"post_id":"cje52p0x5001s6atfz66keo6x","tag_id":"cje52p0y7003k6atfvjy1yuqr","_id":"cje52p0y8003n6atfq1ht043v"},{"post_id":"cje52p0x7001v6atfwiyh0nab","tag_id":"cje52p0y8003m6atf4e2s2qqh","_id":"cje52p0y9003p6atfwnj9i7rr"},{"post_id":"cje52p0x8001y6atflp069y4y","tag_id":"cje52p0y7003k6atfvjy1yuqr","_id":"cje52p0ya003r6atfybzo42z8"},{"post_id":"cje52p0xb00216atf5i43eq8b","tag_id":"cje52p0y7003k6atfvjy1yuqr","_id":"cje52p0ya003t6atf9tenoskd"},{"post_id":"cje52p0xh00296atf90te9fdm","tag_id":"cje52p0ya003s6atfdg58k8kb","_id":"cje52p0yb003v6atf7729j68j"},{"post_id":"cje52p0xh00296atf90te9fdm","tag_id":"cje52p0x6001u6atfzncbqbkt","_id":"cje52p0yb003w6atfnlmmuxg1"},{"post_id":"cje52p0xl002c6atfse9yx1au","tag_id":"cje52p0ya003u6atfzfrp1dd9","_id":"cje52p0yb003y6atfo1lqb9zm"},{"post_id":"cje52p0xl002c6atfse9yx1au","tag_id":"cje52p0x6001u6atfzncbqbkt","_id":"cje52p0yc003z6atfyr5wr4ah"},{"post_id":"cje52p0xq002f6atfs8xac1s5","tag_id":"cje52p0yb003x6atfrokibhv9","_id":"cje52p0yc00416atf32duejix"},{"post_id":"cje52p0xt002i6atfuahzuivu","tag_id":"cje52p0yc00406atf9hrbih0o","_id":"cje52p0yc00426atfndn4uie3"}],"Tag":[{"name":"CSS","_id":"cje52p0vi00056atfzznq8joa"},{"name":"HTML","_id":"cje52p0w5000q6atf950v29jv"},{"name":"自适应","_id":"cje52p0we000y6atf0bigcwm3"},{"name":"Hexo","_id":"cje52p0wo00196atfwaefpkl9"},{"name":"js","_id":"cje52p0wu001g6atfq6bh6925"},{"name":"微信","_id":"cje52p0x0001n6atfrk1o178h"},{"name":"Js","_id":"cje52p0x6001u6atfzncbqbkt"},{"name":"地图","_id":"cje52p0xa00206atfvv0n2pzs"},{"name":"图片","_id":"cje52p0xx002p6atf4vcet60i"},{"name":"二维码","_id":"cje52p0xy002s6atf4zedup2l"},{"name":"长按拖拽","_id":"cje52p0y100316atfl07mkppe"},{"name":"Markdown","_id":"cje52p0y200356atfk572e19p"},{"name":"React","_id":"cje52p0y300386atfny04unf3"},{"name":"Sublime","_id":"cje52p0y4003a6atfd9zk2971"},{"name":"VUE","_id":"cje52p0y6003g6atfgiporjxs"},{"name":"生活趣事","_id":"cje52p0y7003k6atfvjy1yuqr"},{"name":"Webpack","_id":"cje52p0y8003m6atf4e2s2qqh"},{"name":"日期","_id":"cje52p0ya003s6atfdg58k8kb"},{"name":"Node","_id":"cje52p0ya003u6atfzfrp1dd9"},{"name":"weex","_id":"cje52p0yb003x6atfrokibhv9"},{"name":"github","_id":"cje52p0yc00406atf9hrbih0o"}]}}